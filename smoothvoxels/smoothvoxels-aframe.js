var et=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\s+(?:none|-x|x|\+x|-y|y|\+y|-z|z|\+z|\s))+\s*$/.test(t))throw new Error(`SyntaxError: Planar expression '${t}' is only allowed to be 'none' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var Ae="standard",Qe="basic",Ms="lambert",ys="phong",As="matcap",_s="toon",Je="normal",be="bounds",fe="model",je="flat",_e="quad",me="smooth",ue="both",jt="front",ge="back",pe="double",Vs=["nx","px","ny","py","nz","pz"],Cs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],ws=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],Is=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],bs=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var os=(z,t,s)=>Math.min(Math.max(z,t),s),Ut=class{static fromHex(t){let s=new Ut;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(os(t,0,1)*255),s=Math.round(os(s,0,1)*255),e=Math.round(os(e,0,1)*255);let a="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return Ut.fromHex(a)}clone(){let t=new Ut;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof Ut?Ut.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):Ut.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((r,o)=>r+o.r,0),e=this.g+t.reduce((r,o)=>r+o.g,0),a=this.b+t.reduce((r,o)=>r+o.b,0);return Ut.fromRgb(s,e,a)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ze=class{constructor(t,s,e,a,r,o,n,i,l,h,c,f,m,u,d,p,M,v,F,y,x,V,w,g,_){switch(t=t||Ae,t){case Ae:case Qe:case Ms:case ys:case _s:case As:case Je:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||d&&d.cube||p&&p.cube||M&&M.cube)&&!(x===-1&&V===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(F&&y)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof a=="number"?a:1,this.alphaTest=typeof r=="number"?r:0,this.transparent=!!o,this.refractionRatio=typeof n=="number"?n:.9,this.wireframe=!!i,this.side=l||jt,[jt,ge,pe].includes(this.side)||(this.side=jt),this.setEmissive(h,c),this.fog=typeof f=="boolean"?f:!0,this.map=m,this.normalMap=u,this.roughnessMap=d,this.metalnessMap=p,this.emissiveMap=M,this.matcap=v,this.reflectionMap=F,this.refractionMap=y,this.mapTransform={uscale:x||-1,vscale:V||-1,uoffset:w||0,voffset:g||0,rotation:_||0},this.aoActive=!1}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:Ut.fromHex(t),intensity:s}}get emissive(){return this._emissive}};var ve=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var Ne=class{constructor(t,s,e,a,r){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=a!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=et.parse(""),this._clamp=et.parse(""),this._skip=et.parse(""),this._ao=void 0,this.lights=!0,this._side=r,this._colors=[],this.bounds=new ve}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t??1,0),s=s??1,e=e??1,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=et.parse(t)}get flatten(){return et.toString(this._flatten)}set clamp(t){this._clamp=et.parse(t)}get clamp(){return et.toString(this._clamp)}set skip(t){this._skip=et.parse(t)}get skip(){return et.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=et.parse(t)}get aoSides(){return et.toString(this._aoSides)}};var Ee=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,a,r,o,n,i,l,h,c,f,m,u,d,p,M,v,F,y,x,V,w,g,_,b,C,A){f=f||jt,[jt,ge,pe].includes(f)||(f=jt);let X=f===pe?pe:jt,O=new ze(t,e,a,n,i,l,h,c,X,m,u,d,p,M,v,F,y,x,V,w,g,_,b,C,A),Y=O.baseId,B=this.baseMaterials.find(E=>E.baseId===Y);B?O=B:this.baseMaterials.push(O);let T=new Ne(O,s,r,o,f);return this.materials.push(T),T}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}getMaterialListIndex(t){return this.materials.indexOf(t)}};function Se(z,t,s,e){let a=s*z;for(let r=0;r<s;){let o=a&7,n=a>>3,i=s-r,l=8-o,h=i<l?i:l,c=~(255<<h),f=t&c;t>>=h;let m=~(c<<o);e[n]=e[n]&m|f<<o,a+=h,r+=h}}var is=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Se(t,s,1,this.view)}clear(){this.view.fill(0)}},ns=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Se(t,s,2,this.view)}clear(){this.view.fill(0)}},ls=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Se(t,s,4,this.view)}clear(){this.view.fill(0)}},cs=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Se(t,s,8,this.view)}clear(){this.view.fill(0)}},hs=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,a=t*e,r=0;for(let o=0;o<e;){let n=a&7,i=a>>3,l=e-o,h=8-n,c=l<h?l:h,f=s[i],m=~(255<<c);r|=(f>>n&m)<<o,a+=c,o+=c}return r>>>0}set(t,s){Se(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},wt=class{static create(t,s,e,a=null){let r=a?new Uint8Array(t,e,a):new Uint8Array(t,e);switch(s){case 1:return new is(r);case 2:return new ns(r);case 4:return new ls(r);case 8:return new cs(r);default:return new hs(r)}}};var Ys=0,zs=0,fs=128,Xe=8;var Zs=255,Ns=Zs<<24>>>0,ms={NONE:0,PAINT:1,KEEP:2},qt=1,Fe=new Map,Rt=z=>Math.floor(z%2===0?z/2-1:z/2),Tt=z=>{let[t,s,e]=z,a=Rt(t),r=Rt(s),o=Rt(e),n=t-a-1,i=s-r-1,l=e-o-1,h=-a,c=-r,f=-o;return[h,n,c,i,f,l]},Oe=1,Es=Oe*4;function us(z,t,s=null){let e=2**t-qt,a=Es*e,r=z[0]*z[1]*z[2]*t,o=Math.floor(r/8)+1,n=Xe+a+o;s==null&&(typeof Buffer<"u"?s=Buffer.alloc(n).buffer:s=new ArrayBuffer(n));let i=new Uint8Array(s,0,Xe),l=a/Es,h=new Uint32Array(s,Xe,l),c=wt.create(s,t,Xe+a);return i[0]=Ys,[i[1],i[2],i[3]]=z,i[4]=t,[s,h,c]}var Ht=class{constructor(t=null,s=8,e=null,a=null,r=0,o=null,n=0,i=null){if(e&&a)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,o=o||e.length,i=i||a.length,this.palette=new Uint32Array(e,r||0,o/4),this.indices=wt.create(a,s,n,i),this.xShift=Rt(t[0]),this.yShift=Rt(t[1]),this.zShift=Rt(t[2]),this._rebuildRefCounts();else if(t){let[l,h,c]=us(t,s);this.palette=h,this.indices=c,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(l)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,Xe);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=Rt(this.size[0]),this.yShift=Rt(this.size[1]),this.zShift=Rt(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:a}=this,r=this._getOffset(t,s,e);return a.get(r)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let a=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(a)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==zs}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,zs)}getVoxColorCounts(){let t=new Map;for(let s=0;s<this._refCounts.length;s+=1){let e=this._refCounts[s];if(e===0)continue;let a=this.colorForPaletteIndex(s+qt);t.set(a,e)}return t}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-qt)*Oe]}setPaletteColor(t,s){this.palette[(t-qt)*Oe]=s}paletteHasReferences(t){return this._refCounts[t-qt]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-qt]=1}incrementPaletteRefcount(t){this._refCounts[t-qt]+=1}decrementPaletteRefcount(t){this._refCounts[t-qt]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,a){let r=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(r,a)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,a=this.getPaletteIndexAtOffset(t);Ht.isNonEmptyPaletteIndex(a)&&this.decrementPaletteRefcount(a),Ht.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,a){let r=this._getOffset(t,s,e);return this.setColorAtOffset(r,a)}setColorAtOffset(t,s){let{palette:e,indices:a}=this,r=this.getPaletteIndexAtOffset(t),o=Ht.isNonEmptyPaletteIndex(r);o&&this.decrementPaletteRefcount(r);for(let i=0;i<e.length;i+=1){let l=i+qt;if(this.getPaletteColor(l)===s)return this.incrementPaletteRefcount(l),a.set(t,l),l}if(o&&!this.paletteHasReferences(r))return this.setPaletteColor(r,s),this.resetPaletteRefcountToOne(r),r;let n=this._getFreePaletteIndex();return this.setPaletteColor(n,s),this.resetPaletteRefcountToOne(n),this.indices.set(t,n),n}colorForPaletteIndex(t){return this.palette[(t-qt)*Oe]}filterByChunk(t,s,e,a,r){if(r===ms.NONE)return;let o=t.size,[n,i,l,h,c,f]=Tt(o),{size:m}=this,[u,d,p,M,v,F]=Tt(m);for(let y=u;y<=d;y+=1)for(let x=p;x<=M;x+=1)for(let V=v;V<=F;V+=1){if(this.getPaletteIndexAt(y,x,V)===0)continue;let g=y+s,_=x+e,b=V+a,A=!(g>i||g<n||_>h||_<l||b>f||b<c)&&t.hasVoxelAt(g,_,b);(r===ms.PAINT&&!A||r===ms.KEEP&&A)&&this.setEmptyAt(y,x,V)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:a}=this;for(let l=0;l<t.length;l+=1){let h=l+qt;if(!this.paletteHasReferences(h))return h}let r=a*2,[o,n,i]=us(s,r);for(let l=0;l<t.length*Oe;l+=1)n[l]=t[l];for(;this._refCounts.length<n.length;)this._refCounts.push(0);for(let l=0,h=s[0]*s[1]*s[2];l<h;l+=1){let c=e.get(l);i.set(l,c)}return this.palette=n,this.indices=i,this._recomputeSizeFieldsForBuffer(o),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:a}=this,r=Math.max(1,a[0],Math.abs(t)*2+1),o=Math.max(1,a[1],Math.abs(s)*2+1),n=Math.max(1,a[2],Math.abs(e)*2+1);this.resizeTo([r,o,n])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Ht(t),[e,a,r,o,n,i]=Tt(this.size);for(let m=e;m<=a;m+=1)for(let u=r;u<=o;u+=1)for(let d=n;d<=i;d+=1)this.getPaletteIndexAt(m,u,d)!==0&&s.setColorAt(m,u,d,this.getColorAt(m,u,d));let{buffer:l}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:h}=s;this.bitsPerIndex=h;let[,c,f]=us(t,h,l);this.palette=c,this.indices=f,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(l)}static fromJSON(t){if(typeof t=="string")return Ht.deserialize(t);let{size:s,palette:e,indices:a}=t,r=new Ht(s);for(let o=0;o<e.length+qt;o+=1)for(let n=0;n<a.length;n+=1){let i=a[n];if(i===o)if(i>=qt){let l=e[i-qt];r.setColorAtOffset(n,l)}else i===o&&r.setPaletteIndexAtOffset(n,i)}return r}toJSON(t,s){if(!s)return this.serialize();let e=[],a=[];for(let r=0;r<this.palette.length;r+=1){let o=r+qt,n=this.getPaletteColor(o);n>0&&e.push(n)}for(let r=0,o=this.size[0]*this.size[1]*this.size[2];r<o;r+=1)a.push(this.indices.get(r));return{size:[...this.size],palette:e,indices:a}}clone(){return new Ht(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:a,xShift:r,yShift:o,zShift:n}=this,i=a[2];return(t+r)*a[1]*i+(s+o)*i+(e+n)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Ht.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,a=0){Fe.clear();let r=t.size,[o,n,i,l,h,c]=Tt(r),{size:f}=this,[m,u,d,p,M,v]=Tt(f);for(let F=m;F<=u;F+=1)for(let y=d;y<=p;y+=1)for(let x=M;x<=v;x+=1){let V=this.getPaletteIndexAt(F,y,x);if(V!==0){let w=F+s,g=y+e,_=x+a,b=r[0],C=r[1],A=r[2];if(w>n&&(b=w*2),w<o&&(b=Math.max(b,-w*2+1)),g>l&&(C=g*2),g<i&&(C=Math.max(C,-g*2+1)),_>c&&(A=_*2),_<h&&(A=Math.max(A,-_*2+1)),b>fs||C>fs||A>fs)continue;(r[0]<b||r[1]<C||r[2]<A)&&(t.resizeTo([b,C,A]),r=t.size,[o,n,i,l,h,c]=Tt(r),Fe.clear());let X=Fe.get(V);if(X===void 0){let O=this.getColorAt(F,y,x);if(O===Ns)t.setEmptyAt(w,g,_);else{let Y=t.setColorAt(w,g,_,O);Fe.set(V,Y)}}else t.getPaletteIndexAt(w,g,_)!==X&&t.setPaletteIndexAt(w,g,_,X)}}}createInverse=(t,s)=>{Fe.clear();let e=t.size,[a,r,o,n,i,l]=Tt(e),{size:h}=this,c=new Ht(h),[f,m,u,d,p,M]=Tt(h);for(let v=f;v<=m;v+=1)for(let F=u;F<=d;F+=1)for(let y=p;y<=M;y+=1){if(this.getPaletteIndexAt(v,F,y)===0)continue;let V=v+s[0],w=F+s[1],g=y+s[2];if(V>r||V<a||w>n||w<o||g>l||g<i||!t.hasVoxelAt(V,w,g))c.setColorAt(v,F,y,Ns);else{let _=t.getColorAt(V,w,g);c.setColorAt(v,F,y,_)}}return c};mergeWith(t,s,e,a=!1){Fe.clear();let r=Fe,o=e[0]-s[0],n=e[1]-s[1],i=e[2]-s[2],l=t.size,[h,c,f,m,u,d]=Tt(l),{size:p}=this,[M,v,F,y,x,V]=Tt(p);for(let w=M;w<=v;w+=1)for(let g=F;g<=y;g+=1)for(let _=x;_<=V;_+=1){let b=this.getPaletteIndexAt(w,g,_);if(b===0)continue;let C=w+o,A=g+n,X=_+i;if(!!(!(C>c||C<h||A>m||A<f||X>d||X<u)&&t.hasVoxelAt(C,A,X)))if(r.has(b))this.setPaletteIndexAt(w,g,_,r.get(b));else{(a||t.getColorAt(C,A,X)>this.getColorAt(w,g,_))&&this.removeVoxelAt(w,g,_);let B=this.getPaletteIndexAt(w,g,_);r.set(b,B)}}}};function ps(z){return z=z.trim().toUpperCase(),z.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/)?(z=z.replace("#",""),z.length===3?z=z[2]+z[2]+z[1]+z[1]+z[0]+z[0]:z=z[4]+z[5]+z[2]+z[3]+z[0]+z[1],parseInt(z,16)):0}function Ss(){let z=[];for(let a=0;a<256;a++)z[a]=Math.floor(Math.random()*256),z[a+256]=z[a];function t(a){return a*a*a*(a*(a*6-15)+10)}function s(a,r,o){return r+a*(o-r)}function e(a,r,o,n){let i=a&15,l=i<8?r:o,h=i<4?o:i===12||i===14?r:n;return((i&1)===0?l:-l)+((i&2)===0?h:-h)}return{noise:function(a,r,o){let n=Math.floor(a),i=Math.floor(r),l=Math.floor(o),h=n&255,c=i&255,f=l&255;a-=n,r-=i,o-=l;let m=a-1,u=r-1,d=o-1,p=t(a),M=t(r),v=t(o),F=z[h]+c,y=z[F]+f,x=z[F+1]+f,V=z[h+1]+c,w=z[V]+f,g=z[V+1]+f;return s(v,s(M,s(p,e(z[y],a,r,o),e(z[w],m,r,o)),s(p,e(z[x],a,u,o),e(z[g],m,u,o))),s(M,s(p,e(z[y+1],a,r,d),e(z[w+1],m,r,o-1)),s(p,e(z[x+1],a,u,d),e(z[g+1],m,u,d))))}}}var de=class{static changeShape(t,s,e){let{faceEquidistant:a}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let r=0,o=t.faceCount;r<o;r++)a.set(r,0);break}}static _circularDeform(t,s,e,a,r){let[o,n,i,l,h,c]=Tt(t.voxels.size),f=(o+n)/2+.5,m=(i+l)/2+.5,u=(h+c)/2+.5,{vertX:d,vertY:p,vertZ:M,vertRing:v}=s;for(let F=0,y=t.vertCount;F<y;F++){let x=d[F],V=p[F],w=M[F],g=x-f,_=V-m,b=w-u,C=Math.max(Math.abs(g*e),Math.abs(_*a),Math.abs(b*r)),A=Math.sqrt(g*g*e+_*_*a+b*b*r);if(A===0)continue;let X=C/A;d[F]=g*(1-e+e*X)+f,p[F]=_*(1-a+a*X)+m,M[F]=b*(1-r+r*X)+u,v[F]=C}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:a,faceEquidistant:r}=s;for(let o=0,n=t.faceCount;o<n;o++){let i=o*4,l=i+1,h=i+2,c=i+3;r.set(o,a[e[i]]===a[e[l]]&&a[e[i]]===a[e[h]]&&a[e[i]]===a[e[c]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:a,vertLinkCounts:r,vertDeformCount:o,vertDeformDamping:n,vertDeformStrength:i,vertFlattenedX:l,vertFlattenedY:h,vertFlattenedZ:c,vertClampedX:f,vertClampedY:m,vertClampedZ:u,vertX:d,vertY:p,vertZ:M,vertTmpX:v,vertTmpY:F,vertTmpZ:y,vertHasTmp:x}=s;for(let V=0;V<e;V++){let w=!1;for(let g=0,_=t.vertCount;g<_;g++){if(o[g]<=V)continue;let C=r[g];if(C===0)continue;w=!0;let A=d[g],X=p[g],O=M[g],Y=n[g],B=i[g],T=1-(f.get(g)|l.get(g)),E=1-(m.get(g)|h.get(g)),R=1-(u.get(g)|c.get(g)),q=0,L=0,U=0;for(let I=0;I<C;I++){let P=a[g*6+I];q+=d[P],L+=p[P],U+=M[P]}let S=Math.pow(Y,V)*B,k=q/C-A,N=L/C-X,G=U/C-O;v[g]=A+T*k*S,F[g]=X+E*N*S,y[g]=O+R*G*S,x.set(g,T|E|R)}if(w){for(let g=0,_=t.vertCount;g<_;g++)x.get(g)!==0&&(d[g]=v[g],p[g]=F[g],M[g]=y[g]);x.clear()}}}static warpAndScatter(t,s){let e=Ss().noise,{nx:a,px:r,ny:o,py:n,nz:i,pz:l}=t._tile,[h,c,f,m,u,d]=Tt(t.voxels.size),{vertX:p,vertY:M,vertZ:v,vertWarpAmplitude:F,vertWarpFrequency:y,vertScatter:x,vertFlattenedX:V,vertFlattenedY:w,vertFlattenedZ:g,vertClampedX:_,vertClampedY:b,vertClampedZ:C}=s;h+=.1,f+=.1,u+=.1,c+=.9,m+=.9,d+=.9;for(let A=0,X=t.vertCount;A<X;A++){let O=p[A],Y=M[A],B=v[A];if(a&&O<h||r&&O>c||o&&Y<f||n&&Y>m||i&&B<u||l&&B>d)continue;let T=F[A],E=y[A],R=x[A],q=T>0,L=R>0;if(q||L){let U=0,S=0,k=0;q&&(U=e((O+.19)*E,Y*E,B*E)*T,S=e((Y+.17)*E,B*E,O*E)*T,k=e((B+.13)*E,O*E,Y*E)*T),L&&(U+=(Math.random()*2-1)*R,S+=(Math.random()*2-1)*R,k+=(Math.random()*2-1)*R);let N=1-(_.get(A)|V.get(A)),G=1-(b.get(A)|w.get(A)),I=1-(C.get(A)|g.get(A));p[A]=O+N*U,M[A]=Y+G*S,v[A]=B+I*k}}}};var Ve=class{static linkVertices(t,s,e){let{faceClamped:a,vertNrOfClampedLinks:r,faceVertIndices:o,vertLinkIndices:n,vertLinkCounts:i}=s;if(a.get(e)===1)for(let h=0;h<4;h++){let c=o[e*4+h],f=!1;for(let m=0,u=i[c];m<u;m++)if(n[c*6+m]===c){f=!0;break}f||(n[c*6+i[c]]=c,i[c]++,r[c]++)}else for(let h=0;h<4;h++){let c=o[e*4+h],f=o[e*4+(h+1)%4],m=!1;for(let d=0,p=i[c];d<p;d++)if(n[c*6+d]===f){m=!0;break}m||(n[c*6+i[c]]=f,i[c]++);let u=!1;for(let d=0,p=i[f];d<p;d++)if(n[f*6+d]===c){u=!0;break}u||(n[f*6+i[f]]=c,i[f]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:a,vertFullyClamped:r,vertLinkCounts:o,vertLinkIndices:n}=s;for(let i=0,l=t.vertCount;i<l;i++){let h=a[i],c=o[i];h===c&&(r.set(i,1),o[i]=0)}for(let i=0,l=t.faceCount;i<l;i++)for(let h=0;h<4;h++){let c=e[i*4+h],f=e[i*4+(h+1)%4];if(r.get(c)===1){let m=!1;for(let u=0,d=o[c];u<d;u++)if(n[c*6+u]===f){m=!0;break}m||(n[c*6+o[c]]=f,o[c]++)}if(r.get(f)===1){let m=!1;for(let u=0,d=o[f];u<d;u++)if(n[f*6+u]===c){m=!0;break}m||(n[f*6+o[f]]=c,o[f]++)}}}};var Te=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:a,faceEquidistant:r,faceSmooth:o,faceFlattened:n,faceClamped:i,vertX:l,vertY:h,vertZ:c,faceVertFlatNormalX:f,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:d,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:M,faceVertBothNormalX:v,faceVertBothNormalY:F,faceVertBothNormalZ:y,faceVertNormalX:x,faceVertNormalY:V,faceVertNormalZ:w,faceMaterials:g,faceVertIndices:_,vertSmoothNormalX:b,vertSmoothNormalY:C,vertSmoothNormalZ:A,vertBothNormalX:X,vertBothNormalY:O,vertBothNormalZ:Y}=s,[B,T,E,R,q,L]=Tt(t.voxels.size);for(let S=0,k=t.faceCount;S<k;S++){let N=S*4;for(let G=0;G<4;G++){let I=_[N+G];b[I]=0,C[I]=0,A[I]=0,X[I]=0,O[I]=0,Y[I]=0}}for(let S=0,k=t.faceCount;S<k;S++){let N=a[S],G=r.get(S),I=n.get(S),P=i.get(S),K=G|1-(I|P);o.set(S,K);let H=_[S*4],j=_[S*4+1],rt=_[S*4+2],Z=_[S*4+3],mt=(l[H]+l[j]+l[rt]+l[Z])/4,ut=(h[H]+h[j]+h[rt]+h[Z])/4,It=(c[H]+c[j]+c[rt]+c[Z])/4;for(let At=0;At<4;At++){let nt=_[S*4+At],Et=_[S*4+(At+3)%4],Mt=l[nt],kt=l[Et],bt=h[nt],Gt=h[Et],Qt=c[nt],ne=c[Et],yt=b[nt],zt=C[nt],Nt=A[nt],St=X[nt],Xt=O[nt],Lt=Y[nt],gt=kt-Mt,vt=Gt-bt,lt=ne-Qt,at=mt-Mt,ot=ut-bt,it=It-Qt,Ot=Math.sqrt(gt*gt+vt*vt+lt*lt),$t=Math.sqrt(at*at+ot*ot+it*it);Ot=Ot===0?1:Ot,$t=$t===0?1:$t;let Wt=1/Ot;gt*=Wt,vt*=Wt,lt*=Wt;let te=1/$t;at*=te,ot*=te,it*=te;let Yt=vt*it-lt*ot,Zt=lt*at-gt*it,Bt=gt*ot-vt*at,le=B+.1,ce=T+.9,_t=E+.1,pt=R+.9,ht=q+.1,dt=L+.9;e&&((e.nx&&N===0||e.px&&N===1)&&(bt<_t||bt>pt||Qt<ht||Qt>dt)&&(Zt=0,Bt=0),(e.ny&&N===2||e.py&&N===3)&&(Mt<le||Mt>ce||Qt<ht||Qt>dt)&&(Yt=0,Bt=0),(e.nz&&N===4||e.pz&&N===5)&&(Mt<le||Mt>ce||bt<_t||bt>pt)&&(Yt=0,Zt=0));let Ft=Math.sqrt(Yt*Yt+Zt*Zt+Bt*Bt);Ft=Ft===0?1:Ft;let $=1/Ft;Yt*=$,Zt*=$,Bt*=$,f[S*4+At]=Yt,m[S*4+At]=Zt,u[S*4+At]=Bt;let Q=gt*at+vt*ot+lt*it,D=Math.acos(Q);yt+=Yt*D,zt+=Zt*D,Nt+=Bt*D,St+=K*(Yt*D),Xt+=K*(Zt*D),Lt+=K*(Bt*D),b[nt]=yt,C[nt]=zt,A[nt]=Nt,X[nt]=St,O[nt]=Xt,Y[nt]=Lt}}for(let S=0,k=t.vertCount;S<k;S++){let N=b[S],G=C[S],I=A[S],P=X[S],K=O[S],H=Y[S],j=Math.sqrt(N*N+G*G+I*I),rt=Math.sqrt(P*P+K*K+H*H);j!==0&&(b[S]=N/j,C[S]=G/j,A[S]=I/j),rt!==0&&(X[S]=P/rt,O[S]=K/rt,Y[S]=H/rt)}let U=t.materials.materials;for(let S=0,k=t.faceCount;S<k;S++){let N=o.get(S)===1,G=U[g[S]];for(let I=0;I<4;I++){let P=S*4+I,K=_[S*4+I];switch(d[P]=b[K],p[P]=C[K],M[P]=A[K],v[P]=!N||X[K]===0?f[P]:X[K],F[P]=!N||O[K]===0?m[P]:O[K],y[P]=!N||Y[K]===0?u[P]:Y[K],G.lighting){case me:x[P]=d[P],V[P]=p[P],w[P]=M[P];break;case ue:x[P]=v[P],V[P]=F[P],w[P]=y[P];break;default:x[P]=f[P],V[P]=m[P],w[P]=u[P];break}}}}};var st=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],a=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,r=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,o=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=a,t.y=r,t.z=o}transformPointInline(t,s,e,a){let r=t[a],o=s[a],n=e[a],i=this.m,l=i[12]*r+i[13]*o+i[14]*n+i[15],h=(i[0]*r+i[1]*o+i[2]*n+i[3])/l,c=(i[4]*r+i[5]*o+i[6]*n+i[7])/l,f=(i[8]*r+i[9]*o+i[10]*n+i[11])/l;t[a]=h,s[a]=c,e[a]=f}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,a=s[4]*t.x+s[5]*t.y+s[6]*t.z,r=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=a,t.z=r}transformVectorInline(t,s,e,a){let r=t[a],o=s[a],n=e[a],i=this.m,l=i[0]*r+i[1]*o+i[2]*n,h=i[4]*r+i[5]*o+i[6]*n,c=i[8]*r+i[9]*o+i[10]*n;t[a]=l,s[a]=h,e[a]=c}static identity(t){t=t||new st;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new st;let a=t.m,r=s.m,o=e.m;return o[0]=a[0]*r[0]+a[1]*r[4]+a[2]*r[8]+a[3]*r[12],o[1]=a[0]*r[1]+a[1]*r[5]+a[2]*r[9]+a[3]*r[13],o[2]=a[0]*r[2]+a[1]*r[6]+a[2]*r[10]+a[3]*r[14],o[3]=a[0]*r[3]+a[1]*r[7]+a[2]*r[11]+a[3]*r[15],o[4]=a[4]*r[0]+a[5]*r[4]+a[6]*r[8]+a[7]*r[12],o[5]=a[4]*r[1]+a[5]*r[5]+a[6]*r[9]+a[7]*r[13],o[6]=a[4]*r[2]+a[5]*r[6]+a[6]*r[10]+a[7]*r[14],o[7]=a[4]*r[3]+a[5]*r[7]+a[6]*r[11]+a[7]*r[15],o[8]=a[8]*r[0]+a[9]*r[4]+a[10]*r[8]+a[11]*r[12],o[9]=a[8]*r[1]+a[9]*r[5]+a[10]*r[9]+a[11]*r[13],o[10]=a[8]*r[2]+a[9]*r[6]+a[10]*r[10]+a[11]*r[14],o[11]=a[8]*r[3]+a[9]*r[7]+a[10]*r[11]+a[11]*r[15],o[12]=a[12]*r[0]+a[13]*r[4]+a[14]*r[8]+a[15]*r[12],o[13]=a[12]*r[1]+a[13]*r[5]+a[14]*r[9]+a[15]*r[13],o[14]=a[12]*r[2]+a[13]*r[6]+a[14]*r[10]+a[15]*r[14],o[15]=a[12]*r[3]+a[13]*r[7]+a[14]*r[11]+a[15]*r[15],e}static transpose(t,s){s=s||new st;let e=t.m,a=s.m;return a[0]=e[0],a[1]=e[4],a[2]=e[8],a[3]=e[12],a[4]=e[1],a[5]=e[5],a[6]=e[9],a[7]=e[13],a[8]=e[2],a[9]=e[6],a[10]=e[10],a[11]=e[14],a[12]=e[3],a[13]=e[7],a[14]=e[11],a[15]=e[15],s}static inverse(t,s){s=s||new st;let e=t.m,a=s.m;a[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],a[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],a[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],a[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],a[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],a[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],a[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],a[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],a[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],a[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],a[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],a[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],a[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],a[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],a[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],a[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let r=e[0]*a[0]+e[1]*a[4]+e[2]*a[8]+e[3]*a[12];for(let o=0;o<16;o++)a[o]/=r;return s}static scale(t,s,e,a){a=a||new st;let r=a.m;return r[0]=t,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=s,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=e,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,a}static translate(t,s,e,a){a=a||new st;let r=a.m;return r[0]=1,r[1]=0,r[2]=0,r[3]=t,r[4]=0,r[5]=1,r[6]=0,r[7]=s,r[8]=0,r[9]=0,r[10]=1,r[11]=e,r[12]=0,r[13]=0,r[14]=0,r[15]=1,a}static rotate(t,s,e,a,r){if(!t||!s&&!e&&!a)return st.identity(r);r=r||new st;let o=r.m,n=Math.sqrt(s*s+e*e+a*a);t*=Math.PI/180,s/=n,e/=n,a/=n;let i=Math.cos(t),l=Math.sin(t),h=1-i;return o[0]=s*s*h+i,o[1]=s*e*h-a*l,o[2]=s*a*h+e*l,o[3]=0,o[4]=e*s*h+a*l,o[5]=e*e*h+i,o[6]=e*a*h-s*l,o[7]=0,o[8]=a*s*h-e*l,o[9]=a*e*h+s*l,o[10]=a*a*h+i,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static lookAtORIGINAL(t,s,e,a,r,o,n,i,l,h){h=h||new st;let c=h.m,f=t-a,m=s-r,u=e-o,d=Math.sqrt(f*f+m*m+u*u);f/=d,m/=d,u/=d;let p=i*u-l*m,M=l*f-n*u,v=n*m-i*f;d=Math.sqrt(p*p+M*M+v*v),p/=d,M/=d,v/=d;let F=m*v-u*M,y=u*p-f*v,x=f*M-m*p;return d=Math.sqrt(F*F+y*y+x*x),F/=d,y/=d,x/=d,c[0]=p,c[1]=M,c[2]=v,c[3]=-(p*t+M*s+v*e),c[4]=F,c[5]=y,c[6]=x,c[7]=-(F*t+y*s+x*e),c[8]=f,c[9]=m,c[10]=u,c[11]=-(f*t+m*s+u*e),c[12]=0,c[13]=0,c[14]=0,c[15]=1,h}static lookAtTRYOUT(t,s,e,a){a=a||new st;let r=a.m,o=Math.sqrt(t*t+e*e);return r[0]=e/o,r[1]=0,r[2]=-t/o,r[3]=0,r[4]=t*s/o,r[5]=-o,r[6]=e*s/o,r[7]=0,r[8]=t,r[9]=s,r[10]=e,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,a}static lookAt(t,s,e,a){a=a||new st;let r=a.m,o=Math.sqrt(t*t+e*e),n=o?t/o:1,i=o?e/o:0;return r[0]=t,r[1]=-i,r[2]=-e*n,r[3]=0,r[4]=s,r[5]=0,r[6]=o,r[7]=0,r[8]=e,r[9]=n,r[10]=-e*i,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,a}};var Ce=[null,null,null,null],Ye=[null,null,null,null],Ze=[null,null,null,null],Be=class{static transformVertices(t,s){let{vertX:e,vertY:a,vertZ:r,faceVertNormalX:o,faceVertFlatNormalX:n,faceVertNormalY:i,faceVertFlatNormalY:l,faceVertNormalZ:h,faceVertFlatNormalZ:c,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:d,faceVertBothNormalY:p,faceVertBothNormalZ:M}=s,v=t.determineBoundsOffsetAndRescale(t.resize,s),F=new st;F=st.multiply(F,st.translate(t.position.x,t.position.y,t.position.z)),F=st.multiply(F,st.rotate(t.rotation.z,0,0,1)),F=st.multiply(F,st.rotate(t.rotation.y,0,1,0)),F=st.multiply(F,st.rotate(t.rotation.x,1,0,0)),F=st.multiply(F,st.scale(t.scale.x,t.scale.y,t.scale.z)),F=st.multiply(F,st.scale(v.rescale,v.rescale,v.rescale)),F=st.multiply(F,st.translate(v.offset.x,v.offset.y,v.offset.z));let y=st.inverse(F);y=st.transpose(y);for(let x=0,V=t.vertCount;x<V;x++)F.transformPointInline(e,a,r,x);Ce[0]=o,Ye[0]=i,Ze[0]=h,Ce[1]=n,Ye[1]=l,Ze[1]=c,Ce[2]=f,Ye[2]=m,Ze[2]=u,Ce[3]=d,Ye[3]=p,Ze[3]=M;for(let x=0,V=t.faceCount;x<V;x++){let w=x*4;for(let g=0;g<4;g++)for(let _=0,b=Ce.length;_<b;_++){let C=Ce[_],A=Ye[_],X=Ze[_],O=w+g;y.transformVectorInline(C,A,X,O);let Y=C[O],B=A[O],T=X[O],E=Math.sqrt(Y*Y+B*B+T*T);if(E>0){let R=1/E;C[O]=Y*R,A[O]=B*R,X[O]=T*R}}}}};var Pe=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let M=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},M>0){let v=1/M;p.normalizedDirection.x*=v}}let a=t.materials.materials,{faceMaterials:r,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,faceVertIndices:l,vertX:h,vertY:c,vertZ:f,faceVertLightR:m,faceVertLightG:u,faceVertLightB:d}=s;for(let p=0,M=t.faceCount;p<M;p++){let v=a[r[p]],F=p*4;if(v.lights)for(let y=0;y<4;y++){let x=F+y,V=l[x],w=h[V],g=c[V],_=f[V],b=o[x],C=n[x],A=i[x];m[x]=0,u[x]=0,d[x]=0;for(let X of e){let{color:O,strength:Y,distance:B,normalizedDirection:T,position:E}=X,R=Y,q=0;if(E){let L=E.x-w,U=E.y-g,S=E.z-_;q=Math.sqrt(L*L+U*U+S*S);let k=1/q;R=Y*Math.max(b*L*k+C*U*k+A*S*k,0)}else T&&(R=Y*Math.max(b*T.x+C*T.y+A*T.z,0));E&&B&&(R=R*(1-Math.min(q/B,1))),m[x]+=O.r*R,u[x]+=O.g*R,d[x]+=O.b*R}}else for(let y=0;y<4;y++){let x=F+y;m[x]=1,u[x]=1,d[x]=1}}}};var Xs=[],ds=new Map,xs=()=>Xs.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Os=z=>{for(let t of z.partitions)t&&Os(t);z.minx=Number.MAX_VALUE,z.miny=Number.MAX_VALUE,z.minz=Number.MAX_VALUE,z.maxx=-Number.MAX_VALUE,z.maxy=-Number.MAX_VALUE,z.maxz=-Number.MAX_VALUE,z.partitions.fill(null),z.triangles.length=0,Xs.push(z)},Re=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(V){return V.ao})))return;let{faceMaterials:a,faceVertIndices:r,faceVertAO:o,vertX:n,vertY:i,vertZ:l,faceVertNormalX:h,faceVertNormalY:c,faceVertNormalZ:f}=s,{faceCount:m}=t,u=t.materials.materials,d=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(d,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let M=t.aoSamples,v=this._generateFibonacciSamples(M);ds.clear();let F=t.scale.x,y=t.scale.y,x=t.scale.z;for(let V=0;V<m;V++){let w=u[a[V]],g=w.ao||t.ao,_=V*4;if(o[_]=0,o[_+1]=0,o[_+2]=0,o[_+3]=0,!g||g.maxDistance===0||g.strength===0||g.angle<1||w.opacity===0)continue;let b=g.maxDistance*Math.max(F,y,x),C=g.strength,A=Math.cos(g.angle/180*Math.PI);for(let X=0;X<4;X++){let O=_+X,Y=r[O],B=n[Y],T=i[Y],E=l[Y],R=h[O],q=c[O],L=f[O],U=B*16384+T*128+E,S=R*1e7+q*1e5+L*1e3,k=U*1e9+S,N=ds.get(k);if(N!==void 0){o[O]=N;continue}let G=r[_+(X+2)%4],I=n[G],P=i[G],K=l[G],H=B*.99999+I*1e-5+R*1e-5,j=T*.99999+P*1e-5+q*1e-5,rt=E*.99999+K*1e-5+L*1e-5,Z=0,mt=0;for(let[It,At,nt]of v){if(It*R+At*q+nt*L<=A)continue;let Mt=H+It*b,kt=j+At*b,bt=rt+nt*b,Gt=this._distanceToOctree(t,s,p,H,j,rt,It,At,nt,b,Mt,kt,bt);Gt?Gt=Gt/b:Gt=1,Z+=Gt,mt++}let ut=0;mt!==0&&(Z=Math.max(Math.min(Z/mt,1),0),ut=1-Math.pow(Z,C)),o[O]=ut,ds.set(k,ut)}}Os(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:a}=t,r=[],o=t.materials.materials;for(let n=0;n<a;n++){if(o[e[n]].opacity<.75)continue;let l=n*2;r.push(l),r.push(l+1)}return r}static _trianglesToOctree(t,s,e){let{faceVertIndices:a,vertX:r,vertY:o,vertZ:n}=e,i=t.length;if(i<=32){let l=xs();l.triangles=t;for(let h=0;h<i;h++){let c=t[h],m=(c>>1)*4,u,d,p;(c&1)===0?(u=a[m+2],d=a[m+1],p=a[m+0]):(u=a[m+0],d=a[m+3],p=a[m+2]);let M=r[u],v=o[u],F=n[u],y=r[d],x=o[d],V=n[d],w=r[p],g=o[p],_=n[p];l.minx=Math.min(l.minx,M,y,w),l.miny=Math.min(l.miny,v,x,g),l.minz=Math.min(l.minz,F,V,_),l.maxx=Math.max(l.maxx,M,y,w),l.maxy=Math.max(l.maxy,v,x,g),l.maxz=Math.max(l.maxz,F,V,_)}return l}else{let l=0,h=0,c=0;for(let d=0;d<i;d++){let p=t[d],v=(p>>1)*4,F,y,x;(p&1)===0?(F=a[v+2],y=a[v+1],x=a[v+0]):(F=a[v+0],y=a[v+3],x=a[v+2]);let V=r[F],w=o[F],g=n[F],_=r[y],b=o[y],C=n[y],A=r[x],X=o[x],O=n[x];l+=V+_+A,h+=w+b+X,c+=g+C+O}let f=1/i;l*=f,h*=f,c*=f;let m=Array(8).fill(null);for(let d=0;d<i;d++){let p=t[d],v=(p>>1)*4,F,y,x;(p&1)===0?(F=a[v+2],y=a[v+1],x=a[v+0]):(F=a[v+0],y=a[v+3],x=a[v+2]);let V=r[F],w=o[F],g=n[F],_=r[y],b=o[y],C=n[y],A=r[x],X=o[x],O=n[x],Y=V+_+A<l?0:1,B=w+b+X<h?0:1,T=g+C+O<c?0:1,E=Y+B*2+T*4;m[E]===null?m[E]=[p]:m[E].push(p)}let u=xs();for(let d=0;d<8;d++){if(m[d]===null)continue;let p=this._trianglesToOctree(m[d],s,e);u.partitions[d]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,a,r,o,n,i,l,h,c,f,m){if(this._hitsBox(a,r,o,c,f,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,a,r,o,n,i,l,h);let u=h,d=e.partitions;for(let p=0;p<8;p++){let M=d[p];if(M===null)continue;let v=this._distanceToOctree(t,s,M,a,r,o,n,i,l,h,c,f,m);v&&(u=Math.min(u,v))}return u}static _aoSidesToOctree(t,s,e){let a=t.determineBoundsOffsetAndRescale(fe,s).bounds,{vertCount:r,faceCount:o}=t,{faceVertIndices:n,faceCulled:i,vertX:l,vertY:h,vertZ:c}=s,f=(u,d,p,M,v,F,y,x,V)=>{let w=o*4;l[r]=u,h[r]=d,c[r]=p,l[r+1]=M,h[r+1]=v,c[r+1]=F,l[r+2]=y,h[r+2]=x,c[r+2]=V,n[w]=r+2,n[w+1]=r+1,n[w+2]=r+0,i.set(o,1);let g=o*2;return o++,r+=3,g},m=[];if(t._aoSides.nx&&m.push(f(a.minX-.05,1e6,-1e6,a.minX-.05,1e6,1e6,a.minX-.05,-1e7,0)),t._aoSides.px&&m.push(f(a.maxX+.05,1e6,1e6,a.maxX+.05,1e6,-1e6,a.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(f(1e6,a.minY-.05,-1e6,-1e6,a.minY-.05,-1e6,0,a.minY-.05,1e7)),t._aoSides.py&&m.push(f(-1e6,a.maxY+.05,-1e6,1e6,a.maxY+.05,-1e6,0,a.maxY+.05,1e7)),t._aoSides.nz&&m.push(f(1e6,1e6,a.minZ-.05,-1e6,1e6,a.minZ-.05,0,-1e7,a.minZ-.05)),t._aoSides.pz&&m.push(f(-1e6,1e6,a.maxZ+.05,1e6,1e6,a.maxZ+.05,0,-1e7,a.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),d=xs();d.partitions=[d,u]}return e}static _hitsBox(t,s,e,a,r,o,n){let i=n.minx;if(t<i&&a<i)return!1;let l=n.maxx;if(t>l&&a>l)return!1;let h=n.miny;if(s<h&&r<h)return!1;let c=n.maxy;if(s>c&&r>c)return!1;let f=n.minz;if(e<f&&o<f)return!1;let m=n.maxz;if(e>m&&o>m)return!1;let u=t-(i+l)*.5,d=(l-i)*.5,p=(a-t)*.5,M=Math.abs(p);if(Math.abs(u)>d+M)return!1;let v=(c-h)*.5,F=(r-s)*.5,y=Math.abs(F),x=s-(h+c)*.5;if(Math.abs(x)>v+y)return!1;let V=(m-f)*.5,w=(o-e)*.5,g=Math.abs(w),_=e-(f+m)*.5;return!(Math.abs(_)>V+g||Math.abs(F*_-w*x)>v*g+V*y+Number.EPSILON||Math.abs(w*u-p*_)>V*M+d*g+Number.EPSILON||Math.abs(p*x-F*u)>d*y+v*M+Number.EPSILON)}static _distanceToModel(t,s,e,a,r,o,n,i,l,h){let c=null,{faceVertIndices:f}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,M,v,F;(u&1)===0?(M=f[p+2],v=f[p+1],F=f[p+0]):(M=f[p+0],v=f[p+3],F=f[p+2]);let y=this._triangleDistance(t,s,M,v,F,a,r,o,n,i,l);y&&(c?c=Math.min(c,y):y<h&&(c=y))}return c}static _triangleDistance(t,s,e,a,r,o,n,i,l,h,c){let{vertX:f,vertY:m,vertZ:u}=s,d=f[e],p=m[e],M=u[e],v=f[a],F=m[a],y=u[a],x=f[r],V=m[r],w=u[r],g=v-d,_=F-p,b=y-M,C=x-d,A=V-p,X=w-M,O=h*X-c*A,Y=c*C-l*X,B=l*A-h*C,T=g*O+_*Y+b*B;if(T<Number.EPSILON)return null;let E=1/T,R=o-d,q=n-p,L=i-M,U=E*(R*O+q*Y+L*B);if(U<0||U>1)return null;let S=q*b-L*_,k=L*g-R*b,N=R*_-q*g,G=E*(l*S+h*k+c*N);if(G<0||U+G>1)return null;let I=E*(C*S+A*k+X*N);return I<=Number.EPSILON?null:I}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,a=(2-e)*(2*Math.PI);for(let r=1;r<=t;++r){let o=Math.asin(-1+2*r/(t+1)),n=a*r,i=Math.cos(n)*Math.cos(o),l=Math.sin(o),h=Math.sin(n)*Math.cos(o);s.push([i,l,h])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let a=0;a<=t;a++){let r=a*e,o=Math.cos(r),n=Math.sin(r),i=Math.max(1,a*4),l=Math.PI*2/i;for(let h=0;h<i;h++){let c=h*l,f=n*Math.sin(c),m=n*Math.cos(c);s.push({x:f,y:o,z:m}),a<t&&s.push({x:f,y:-o,z:m})}i+=4}return s}};var ke=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:a,faceVertUs:r,faceVertVs:o}=s,n=[],i=[],l=[],h=t.materials.materials;for(let c=0;c<h.length;c++){let f=h[c],m=0,u=1,d=1;if(f.map||f.normalMap||f.roughnessMap||f.metalnessMap||f.emissiveMap){let p=t.voxels.size[0],M=t.voxels.size[1],v=t.voxels.size[2];f.mapTransform.uscale===-1&&(u=1/Math.max(p,M,v)),f.mapTransform.vscale===-1&&(d=1/Math.max(p,M,v)),(f.map&&f.map.cube||f.normalMap&&f.normalMap.cube||f.roughnessMap&&f.roughnessMap.cube||f.metalnessMap&&f.metalnessMap.cube||f.emissiveMap&&f.emissiveMap.cube)&&(m=1,u=u/4,d=d/2)}n.push(m),i.push(u),l.push(d)}for(let c=0,f=t.faceCount;c<f;c++){let m=e[c],u=n[m],d=i[m],p=l[m],M=Is[a[c]],v=c*4,F=r[v+M.order[0]],y=o[v+M.order[0]],x=r[v+M.order[1]],V=o[v+M.order[1]],w=r[v+M.order[2]],g=o[v+M.order[2]],_=r[v+M.order[3]],b=o[v+M.order[3]],C=v+M.order[0],A=v+M.order[1],X=v+M.order[2],O=v+M.order[3],Y=u*M.uo,B=u*M.vo,T=M.ud*d,E=M.vd*p;r[C]=Y+(F+1e-4)*T,o[C]=B+(y+1e-4)*E,r[A]=Y+(x+1e-4)*T,o[A]=B+(V+.9999)*E,r[X]=Y+(w+.9999)*T,o[X]=B+(g+.9999)*E,r[O]=Y+(_+.9999)*T,o[O]=B+(b+1e-4)*E}}};var Le=class{static combineColors(t,s){let{vertColorR:e,vertColorG:a,vertColorB:r,vertColorCount:o,faceVertColorR:n,faceVertColorG:i,faceVertColorB:l,faceVertLightR:h,faceVertLightG:c,faceVertLightB:f,faceVertIndices:m,faceMaterials:u,faceVertAO:d}=s,p=t.materials.materials,M=!!t.materials.find(x=>x.fade),v=Array(p.length).fill(!1);for(let x=0,V=p.length;x<V;x++)M&&p[x].fade&&(v[x]=!0);for(let x=0,V=t.faceCount;x<V;x++)if(v[u[x]])for(let g=0;g<4;g++){let _=0,b=0,C=0,A=0,X=x*4+g,O=m[X],Y=o[O];for(let T=0;T<Y;T++){let E=O*6+T;_+=e[E],b+=a[E],C+=r[E],A++}let B=1/A;n[X]=_*B,i[X]=b*B,l[X]=C*B}let F=t.ao||t.materials.find(function(x){return x.ao}),y=t.lights.length>0;if(F&&y)for(let x=0,V=t.faceCount;x<V;x++){let g=p[u[x]].ao||t.ao,_=g?g.color:null;for(let b=0;b<4;b++){let C=x*4+b,A=n[C],X=i[C],O=l[C],Y=_?_.r:A,B=_?_.g:X,T=_?_.b:O,E=1-d[C];n[C]=A*h[C]*E+Y*(1-E),i[C]=X*c[C]*E+B*(1-E),l[C]=O*f[C]*E+T*(1-E)}}else if(y&&!F)for(let x=0,V=t.faceCount;x<V;x++)for(let w=0;w<4;w++){let g=x*4+w;n[g]=n[g]*h[g],i[g]=i[g]*c[g],l[g]=l[g]*f[g]}else if(!y&&F)for(let x=0,V=t.faceCount;x<V;x++){let g=p[u[x]].ao||t.ao;if(!g)continue;let _=g.color;for(let b=0;b<4;b++){let C=x*4+b,A=n[C],X=i[C],O=l[C],Y=_?_.r:A,B=_?_.g:X,T=_?_.b:O,E=1-d[C];n[C]=E*A+Y*(1-E),i[C]=E*X+B*(1-E),l[C]=E*O+T*(1-E)}}}};var ts={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},es={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},ss={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},rs={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ue=class{static simplify(t,s){if(!t.simplify)return;let e=function(){ts.filled=!1,es.filled=!1,ss.filled=!1,rs.filled=!1},a=t.materials.materials,{faceCulled:r,faceNameIndices:o,vertX:n,vertY:i,vertZ:l,voxelXZYFaceIndices:h,voxelXYZFaceIndices:c,voxelYZXFaceIndices:f}=s;for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let d=h[m],p=d&(1<<28)-1;if(r.get(p))continue;let M=d/(1<<28),v=M>>16&255,F=M>>8&255,y=M&255;switch(o[p]){case 0:this._mergeFaces(a,t,s,ts,p,v,F,y,n,l,i,0,1,2,3);break;case 1:this._mergeFaces(a,t,s,es,p,v,F,y,n,l,i,0,1,2,3);break;case 4:this._mergeFaces(a,t,s,ss,p,v,F,y,n,l,i,0,1,2,3);break;case 5:this._mergeFaces(a,t,s,rs,p,v,F,y,n,l,i,0,1,2,3);break}}e();for(let m=c.length-t.faceCount,u=c.length;m<u;m++){let d=c[m],p=d&(1<<28)-1;if(r.get(p))continue;let M=d/(1<<28),v=M>>16&255,F=M>>8&255,y=M&255;switch(o[p]){case 0:this._mergeFaces(a,t,s,ts,p,v,F,y,n,i,l,1,2,3,0);break;case 1:this._mergeFaces(a,t,s,es,p,v,F,y,n,i,l,3,0,1,2);break;case 2:this._mergeFaces(a,t,s,ss,p,v,F,y,n,i,l,0,1,2,3);break;case 3:this._mergeFaces(a,t,s,rs,p,v,F,y,n,i,l,2,3,0,1);break}}e();for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let d=f[m],p=d&(1<<28)-1;if(r.get(p))continue;let M=d/(1<<28),v=M>>16&255,F=M>>8&255,y=M&255;switch(o[p]){case 2:this._mergeFaces(a,t,s,ts,p,v,F,y,i,l,n,1,2,3,0);break;case 3:this._mergeFaces(a,t,s,es,p,v,F,y,i,l,n,1,2,3,0);break;case 4:this._mergeFaces(a,t,s,ss,p,v,F,y,i,l,n,3,0,1,2);break;case 5:this._mergeFaces(a,t,s,rs,p,v,F,y,i,l,n,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,a,r,o,n,i,l,h,c,f,m,u,d){let{faceCulled:p,faceMaterials:M,vertX:v,vertY:F,vertZ:y,faceVertIndices:x,faceVertNormalX:V,faceVertNormalY:w,faceVertNormalZ:g,faceVertColorR:_,faceVertColorG:b,faceVertColorB:C,faceVertUs:A,faceVertVs:X,faceVertFlatNormalX:O,faceVertFlatNormalY:Y,faceVertFlatNormalZ:B,faceVertSmoothNormalX:T,faceVertSmoothNormalY:E,faceVertSmoothNormalZ:R,faceVertBothNormalX:q,faceVertBothNormalY:L,faceVertBothNormalZ:U}=e,S=M[r],k=t[S];if(a.filled&&a.lastVoxelAxis1===o&&a.lastVoxelAxis2===n&&(k.simplify===!0||k.simplify===null&&s.simplify===!0)&&p.get(r)===0){if(a.maxVoxelAxis3!==i-1){a.filled=!0,a.lastVoxelAxis1=o,a.lastVoxelAxis2=n,a.maxVoxelAxis3=i,a.lastFaceIndex=r;return}let N=r*4,G=a.lastFaceIndex,I=G*4;if(M[G]!==S)return;let P=V[N],K=w[N],H=g[N],j=V[N+1],rt=w[N+1],Z=g[N+1],mt=V[N+2],ut=w[N+2],It=g[N+2],At=V[N+3],nt=w[N+3],Et=g[N+3],Mt=V[I],kt=w[I],bt=g[I],Gt=V[I+1],Qt=w[I+1],ne=g[I+1],yt=V[I+2],zt=w[I+2],Nt=g[I+2],St=V[I+3],Xt=w[I+3],Lt=g[I+3];if(!(this._normalEquals(P,K,H,Mt,kt,bt)&&this._normalEquals(j,rt,Z,Gt,Qt,ne)&&this._normalEquals(mt,ut,It,yt,zt,Nt)&&this._normalEquals(At,nt,Et,St,Xt,Lt)))return;let vt=_[N],lt=b[N],at=C[N],ot=_[N+1],it=b[N+1],Ot=C[N+1],$t=_[N+2],Wt=b[N+2],te=C[N+2],Yt=_[N+3],Zt=b[N+3],Bt=C[N+3],le=_[I],ce=b[I],_t=C[I],pt=_[I+1],ht=b[I+1],dt=C[I+1],Ft=_[I+2],$=b[I+2],Q=C[I+2],D=_[I+3],ft=b[I+3],Vt=C[I+3];if(!(vt===le&&lt===ce&&at===_t&&ot===pt&&it===ht&&Ot===dt&&$t===Ft&&Wt===$&&te===Q&&Yt===D&&Zt===ft&&Bt===Vt))return;let xe=x[N+f],oe=x[N+m],Pt=x[N+u],ee=x[N+d],Jt=v[xe],Kt=F[xe],he=y[xe],W=v[oe],J=F[oe],tt=y[oe],ct=x[I+f],Ct=x[I+m],se=x[I+u],we=x[I+d],De=v[ct],Me=F[ct],ye=y[ct],as=Math.sqrt((W-Jt)*(W-Jt)+(J-Kt)*(J-Kt)+(tt-he)*(tt-he)),Ie=Math.sqrt((W-De)*(W-De)+(J-Me)*(J-Me)+(tt-ye)*(tt-ye)),re=as/Ie;return Math.abs(l[Ct]-(1-re)*l[oe]-re*l[ct])<=1e-4&&Math.abs(h[Ct]-(1-re)*h[oe]-re*h[ct])<=1e-4&&Math.abs(c[Ct]-(1-re)*c[oe]-re*c[ct])<=1e-4&&Math.abs(l[se]-(1-re)*l[Pt]-re*l[we])<=1e-4&&Math.abs(h[se]-(1-re)*h[Pt]-re*h[we])<=1e-4&&Math.abs(c[se]-(1-re)*c[Pt]-re*c[we])<=1e-4?(x[I+m]=oe,x[I+u]=Pt,A[I+m]=A[N+m],X[I+m]=X[N+m],A[I+u]=A[N+u],X[I+u]=X[N+u],O[I+m]=O[N+m],Y[I+m]=Y[N+m],B[I+m]=B[N+m],O[I+u]=O[N+u],Y[I+u]=Y[N+u],B[I+u]=B[N+u],T[I+m]=T[N+m],E[I+m]=E[N+m],R[I+m]=R[N+m],T[I+u]=T[N+u],E[I+u]=E[N+u],R[I+u]=R[N+u],q[I+m]=q[N+m],L[I+m]=L[N+m],U[I+m]=U[N+m],q[I+u]=q[N+u],L[I+u]=L[N+u],U[I+u]=U[N+u],a.maxVoxelAxis3=i,p.set(r,1),s.nonCulledFaceCount--,!0):void 0}return a.filled=!0,a.lastVoxelAxis1=o,a.lastVoxelAxis2=n,a.maxVoxelAxis3=i,a.lastFaceIndex=r,!1}static _normalEquals(t,s,e,a,r,o){return Math.abs(t-a)<.01&&Math.abs(s-r)<.01&&Math.abs(e-o)<.01}};var $e=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:a,faceVertIndices:r,vertX:o,vertY:n,vertZ:i,faceVertFlatNormalX:l,faceVertFlatNormalY:h,faceVertFlatNormalZ:c,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:d,faceVertBothNormalY:p,faceVertBothNormalZ:M,faceVertUs:v,faceVertVs:F,faceVertColorR:y,faceVertColorG:x,faceVertColorB:V,faceVertNormalX:w,faceVertNormalY:g,faceVertNormalZ:_}=s;for(let b=0,C=t.faceCount;b<C;b++){if(a.get(b)===1)continue;let A=b*4,X=r[A],O=r[A+1],Y=r[A+2],B=r[A+3],T=o[X],E=n[X],R=i[X],q=o[O],L=n[O],U=i[O],S=o[Y],k=n[Y],N=i[Y],G=o[B],I=n[B],P=i[B],K=(T+S)/2,H=(E+k)/2,j=(R+N)/2,rt=(q-K)*(q-K)+(L-H)*(L-H)+(U-j)*(U-j),Z=(G-K)*(G-K)+(I-H)*(I-H)+(P-j)*(P-j),mt=(q+G)/2,ut=(L+I)/2,It=(U+P)/2,At=(T-mt)*(T-mt)+(E-ut)*(E-ut)+(R-It)*(R-It),nt=(S-mt)*(S-mt)+(k-ut)*(k-ut)+(N-It)*(N-It);if(rt<e||Z<e)this._shiftFaceVertsAtOffset(A,r),this._shiftFaceVertsAtOffset(A,w),this._shiftFaceVertsAtOffset(A,g),this._shiftFaceVertsAtOffset(A,_),this._shiftFaceVertsAtOffset(A,l),this._shiftFaceVertsAtOffset(A,h),this._shiftFaceVertsAtOffset(A,c),this._shiftFaceVertsAtOffset(A,f),this._shiftFaceVertsAtOffset(A,m),this._shiftFaceVertsAtOffset(A,u),this._shiftFaceVertsAtOffset(A,d),this._shiftFaceVertsAtOffset(A,p),this._shiftFaceVertsAtOffset(A,M),this._shiftFaceVertsAtOffset(A,v),this._shiftFaceVertsAtOffset(A,F),this._shiftFaceVertsAtOffset(A,y),this._shiftFaceVertsAtOffset(A,x),this._shiftFaceVertsAtOffset(A,V);else if(!(At<e||nt<e)){let Et=this._getVertexSumInline(T,E,R);for(;this._getVertexSumInline(q,L,U)<Et||this._getVertexSumInline(S,k,N)<Et||this._getVertexSumInline(G,I,P)<Et;){this._shiftFaceVertsAtOffset(A,r),this._shiftFaceVertsAtOffset(A,w),this._shiftFaceVertsAtOffset(A,g),this._shiftFaceVertsAtOffset(A,_),this._shiftFaceVertsAtOffset(A,l),this._shiftFaceVertsAtOffset(A,h),this._shiftFaceVertsAtOffset(A,c),this._shiftFaceVertsAtOffset(A,f),this._shiftFaceVertsAtOffset(A,m),this._shiftFaceVertsAtOffset(A,u),this._shiftFaceVertsAtOffset(A,d),this._shiftFaceVertsAtOffset(A,p),this._shiftFaceVertsAtOffset(A,M),this._shiftFaceVertsAtOffset(A,v),this._shiftFaceVertsAtOffset(A,F),this._shiftFaceVertsAtOffset(A,y),this._shiftFaceVertsAtOffset(A,x),this._shiftFaceVertsAtOffset(A,V);let Mt=T,kt=E,bt=R;T=q,E=L,R=U,q=S,L=k,U=N,S=G,k=I,N=P,G=Mt,I=kt,P=bt,Et=this._getVertexSumInline(T,E,R)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var gs=(z,t)=>z-t,qe=class{set origin(t){this._origin=et.parse(t)}get origin(){return et.toString(this._origin)}set flatten(t){this._flatten=et.parse(t)}get flatten(){return et.toString(this._flatten)}set clamp(t){this._clamp=et.parse(t)}get clamp(){return et.toString(this._clamp)}set skip(t){this._skip=et.parse(t)}get skip(){return et.toString(this._skip)}set tile(t){this._tile=et.parse(t||" "),this._tile.x&&(this._tile=et.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=et.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=et.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return et.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=et.parse(t)}get aoSides(){return et.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new Ee,this.voxColorToColorId=new Map,this.voxels=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=et.parse("x y z"),this._flatten=et.parse(""),this._clamp=et.parse(""),this._skip=et.parse(""),this._tile=et.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=et.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:a,tmpVoxelYZXFaceIndices:r}=t,{voxels:o}=this,n=de.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let{maxFaces:i}=t,l=n>0,[h,c,f,m,u,d]=Tt(o.size),p=this.materials.materials,M=Rt(o.size[0]),v=Rt(o.size[1]),F=Rt(o.size[2]);for(let y=h;y<=c;y++)for(let x=f;x<=m;x++)for(let V=u;V<=d;V++){let w=o.getPaletteIndexAt(y,x,V);if(w===0)continue;let g=y+M,_=x+v,b=V+F,C=g<<16,A=b<<8,X=(C|A|_)*(1<<28),O=(C|_<<8|b)*(1<<28),Y=(_<<16|A|g)*(1<<28);for(let B=0,T=Vs.length;B<T;B++){let E=ws[B],R,q=y+E[0],L=x+E[1],U=V+E[2];if(q<h||q>c||L<f||L>m||U<u||U>d?R=0:R=o.getPaletteIndexAt(q,L,U),this._createFace(o,t,p,y,x,V,M,v,F,w,R,B,l,s)){let k=this.faceCount-1;if(this.faceCount>=i)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[k]=X+k,a[k]=O+k,r[k]=Y+k}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=a.slice(0,this.faceCount),t.voxelYZXFaceIndices=r.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(gs),t.voxelXYZFaceIndices.sort(gs),t.voxelYZXFaceIndices.sort(gs),Ve.fixClampedLinks(this,t),de.changeShape(this,t,this._shape),de.deform(this,t,n),de.warpAndScatter(this,t),Te.calculateNormals(this,t),Be.transformVertices(this,t),Pe.calculateLights(this,t),Re.calculateAmbientOcclusion(this,t),Le.combineColors(this,t),ke.assignUVs(this,t),Ue.simplify(this,t),$e.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},a,r,o,n,i,l,{vertX:h,vertY:c,vertZ:f}=s;if(t===be||t===fe){a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY,i=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(let p=0,M=this.vertCount;p<M;p++){let v=h[p],F=c[p],y=f[p];v<a&&(a=v),F<r&&(r=F),y<o&&(o=y),v>n&&(n=v),F>i&&(i=F),y>l&&(l=y)}if(t===fe){let[p,M,v,F,y,x]=Tt(this.voxels.size),V=(M-p+1)/(M-p),w=(F-v+1)/(F-v),g=(x-y+1)/(x-y);e.rescale=Math.min(V,w,g)}}t||(a=this.bounds.minX,n=this.bounds.maxX+1,r=this.bounds.minY,i=this.bounds.maxY+1,o=this.bounds.minZ,l=this.bounds.maxZ+1);let m=-(a+n)/2,u=-(r+i)/2,d=-(o+l)/2;return this._origin.nx&&(m=-a),this._origin.px&&(m=-n),this._origin.ny&&(u=-r),this._origin.py&&(u=-i),this._origin.nz&&(d=-o),this._origin.pz&&(d=-l),e.bounds={minX:a,minY:r,minZ:o,maxX:n,maxY:i,maxZ:l},e.offset={x:m,y:u,z:d},e}_createFace(t,s,e,a,r,o,n,i,l,h,c,f,m,u){let d=t.colorForPaletteIndex(h),p=(d&4278190080)>>24,M=e[p];if(M.opacity===0)return!1;if(c!==0){let H=(t.colorForPaletteIndex(c)&4278190080)>>24;if(!e[H].isTransparent&&!M.wireframe)return!1;if(!(!M.isTransparent&&!M.wireframe)){if(!(M.isTransparent&&!M.wireframe&&c!==0&&e[(t.colorForPaletteIndex(c)&4278190080)>>24].wireframe))return!1}}let v=this._isFacePlanar(M,a,r,o,f,M._flatten,this._flatten),F=this._isFacePlanar(M,a,r,o,f,M._clamp,this._clamp);if(this._isFacePlanar(M,a,r,o,f,M._skip,this._skip))return!1;let{faceVertIndices:x,faceVertColorR:V,faceVertColorG:w,faceVertColorB:g,faceFlattened:_,faceClamped:b,faceSmooth:C,faceCulled:A,faceMaterials:X,faceNameIndices:O,faceVertUs:Y,faceVertVs:B}=s,{faceCount:T}=this,E=T*4,R=(d&255)/255,q=((d&65280)>>8)/255,L=((d&16711680)>>16)/255;x[E]=this._createVertex(s,M,a,r,o,R,q,L,n,i,l,f,0,v,F,u),x[E+1]=this._createVertex(s,M,a,r,o,R,q,L,n,i,l,f,1,v,F,u),x[E+2]=this._createVertex(s,M,a,r,o,R,q,L,n,i,l,f,2,v,F,u),x[E+3]=this._createVertex(s,M,a,r,o,R,q,L,n,i,l,f,3,v,F,u);for(let H=0;H<4;H++)V[E+H]=R,w[E+H]=q,g[E+H]=L;_.set(T,v?1:0),b.set(T,F?1:0),C.set(T,0),A.set(T,0),X[T]=p,O[T]=f;let U=bs[f],S=U[0],k=U[1],N=a+n,G=r+i,I=o+l,P=N*S[0]+G*S[1]+I*S[2],K=N*k[0]+G*k[1]+I*k[2];for(let H=0;H<4;H++)Y[E+H]=P,B[E+H]=K;return m&&Ve.linkVertices(this,s,T),this.faceCount++,!0}_createVertex(t,s,e,a,r,o,n,i,l,h,c,f,m,u,d,p){let M=Cs[f][m],v=e+M[0],F=a+M[1],y=r+M[2],x=v+l<<20|F+h<<10|y+c,{_clamp:V,_flatten:w}=this,{vertDeformCount:g,vertDeformDamping:_,vertDeformStrength:b,vertWarpAmplitude:C,vertWarpFrequency:A,vertScatter:X,vertX:O,vertY:Y,vertZ:B,vertLinkCounts:T,vertFullyClamped:E,vertRing:R,vertClampedX:q,vertClampedY:L,vertClampedZ:U,vertColorR:S,vertColorG:k,vertColorB:N,vertColorCount:G,vertFlattenedX:I,vertFlattenedY:P,vertFlattenedZ:K}=t,{deform:H,warp:j,scatter:rt}=s,Z;if(p.has(x)?(Z=p.get(x),H?g[Z]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,Z)&&(b[Z]=H.strength,_[Z]=H.damping,g[Z]=H.count):(g[Z]=0,_[Z]=0,b[Z]=0),j?C[Z]!==0&&(j.amplitude<C[Z]||j.amplitude===C[Z]&&j.frequency>A[Z])&&(C[Z]=j.amplitude,A[Z]=j.frequency):(C[Z]=0,A[Z]=0),rt?X[Z]!==0&&Math.abs(rt)<Math.abs(X[Z])&&(X[Z]=rt):X[Z]=0):(Z=this.vertCount,p.set(x,Z),O[Z]=v,Y[Z]=F,B[Z]=y,H?(_[Z]=H.damping,g[Z]=H.count,b[Z]=H.strength,T[Z]=0,E.set(Z,0)):g[Z]=0,j?(C[Z]=j.amplitude,A[Z]=j.frequency):C[Z]=0,rt?X[Z]=rt:X[Z]=0,G[Z]=0,R[Z]=0,q.set(Z,0),L.set(Z,0),U.set(Z,0),I.set(Z,0),P.set(Z,0),K.set(Z,0)),this._setIsVertexPlanar(s,v,F,y,s._flatten,w,I,P,K,Z),this._setIsVertexPlanar(s,v,F,y,s._clamp,V,q,L,U,Z),s.fade){let mt=G[Z],ut=Z*6;S[ut+mt]=o,k[ut+mt]=n,N[ut+mt]=i,G[Z]++}return this.vertCount++,Z}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:a,vertDeformCount:r}=t,o=e[s],n=r[s],i=a[s];return o===1?i*(n+1):i*(1-Math.pow(o,n+1))/(1-o)}_isFacePlanar(t,s,e,a,r,o,n){let i=o,l=t.bounds;if(i||(i=n,l=this.bounds),!i)return!1;switch(r){case 0:return i.x||i.nx&&s===l.minX;case 1:return i.x||i.px&&s===l.maxX;case 2:return i.y||i.ny&&e===l.minY;case 3:return i.y||i.py&&e===l.maxY;case 4:return i.z||i.nz&&a===l.minZ;case 5:return i.z||i.pz&&a===l.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,a,r,o,n,i,l,h){let c=r,f=t.bounds;c||(c=o,f=this.bounds),c?(n.set(h,c.x||c.nx&&s<f.minX+.5||c.px&&s>f.maxX+.5?1:n.get(h)|0),i.set(h,c.y||c.ny&&e<f.minY+.5||c.py&&e>f.maxY+.5?1:i.get(h)|0),l.set(h,c.z||c.nz&&a<f.minZ+.5||c.pz&&a>f.maxZ+.5?1:l.get(h)|0)):(n.set(h,n.get(h)|0),i.set(h,i.get(h)|0),l.set(h,l.get(h)|0))}};var He=class{constructor(t,s,e,a,r,o,n){this.color=t,this.strength=s,this.direction=e,this.position=a,this.distance=r,this.size=o,this.detail=n}};var Ts={linecontinuation:/_\s*[\r\n]/gm,modelparts:new RegExp(/\s*(\/\/(.*?)\r?\n)/.source+"|"+/\s*(texture|light|model|material|voxels)\s+/.source+"|"+/\s*([^=,\r\n]+=\s*data:image.*?base64,.*$)\s*/.source+"|"+/\s*([^=,\r\n]+=[^\r\n=;,/]+)\s*/.source+"|"+/\s*([A-Za-z ()\d -]+)\s*/.source,"gm")},Bs=["size","materials","textures","lights","voxels"],Ps=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Rs=["color"],ks=["direction","position","distance","size","detail"],Ls=["id","image"],Us=["cube"],$s=["colors"],qs=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],Ge=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,a=null;return Array.from(t.replaceAll(Ts.linecontinuation," ").matchAll(Ts.modelparts),o=>o[0].trim()).filter(o=>o).forEach(function(o){if(!o.startsWith("//"))if(o==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(o==="light")e={color:"#FFF"},s.lights.push(e);else if(o==="model")e=s;else if(o==="material")e={},s.materials.push(e);else if(o==="voxels")e=s,a="";else if(a!==null)a+=o.replace(/\s/g,"");else{let n=o.indexOf("=");if(n===-1)throw new Error(`SyntaxError: Invalid definition '${o}'.`);let i=o.substring(0,n).trim().toLowerCase(),l=o.substring(n+1).trim();e[i]=l}},this),s.voxels=a,s}static _createModel(t){let s=new qe;s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===be?s.resize=be:t.resize===fe?s.resize=fe:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=fe),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(o=>o.size)&&s.materials.createMaterial(Qe,je,1,0,!1,!1,1,0,!1,1,!1,jt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0);for(let o of t.lights)this._createLight(s,o);for(let o of t.textures)this._createTexture(s,o);let e=new Map,a=new Map,r=new Set;for(let o of t.materials)this._createMaterial(s,o,e,a,r);return this._resolveShellColors(s.shell,s,e,a),s.materials.forEach(function(o){this._resolveShellColors(o.shell,s,e,a)},this),this._createVoxels(s,t.voxels,e,a),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=Ut.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new He(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s,e,a,r){let o=je;s.lighting===_e&&(o=_e),s.lighting===me&&(o=me),s.lighting===ue&&(o=ue),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let n=null;t.simplify&&s.simplify==="false"&&(n=!1),!t.simplify&&s.simplify==="true"&&(n=!0);let i=t.materials.createMaterial(s.type||Ae,o,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,n,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0)),l=t.materials.materials.indexOf(i);s.deform&&i.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&i.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(i.scatter=parseFloat(s.scatter)),i.flatten=s.flatten,i.clamp=s.clamp,i.skip=s.skip,i.setAo(this._parseAo(s.ao)),i.shell=this._parseShell(s.shell),i.lights=s.lights!=="false",i.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,i.data);let h=/\s*\(\s*(\d+)\s*\)\s*/g,c=/([A-Z][a-z]*)\s*(\(\d+\))?[:]\s*(#[a-fA-F0-9]*)\s*/g;s.colors=s.colors.replace(h,"($1)"),s.colors=s.colors.replace(c,"$1$2:$3 ");let f=s.colors.split(" ").filter(u=>u),{voxColorToColorId:m}=t;f.forEach(function(u){let d=u.split(":")[0];d.includes("(")&&(d=d.split("(")[0]);let p=u.split(":")[1];if(r.has(d))throw new Error(`SyntaxError: Duplicate ID '${d}'`);if(!e.has(d)){let M=ps(p);if(!/^[A-Z][a-z]*$/.test(d))throw new Error(`SyntaxError: Invalid color ID '${d}'`);e.set(d,M),a.set(d,l),r.add(d),m.set((M|l<<24)>>>0,d)}},this)}static _createVoxels(t,s,e,a){let r=null,o=[];if(s.matchAll)o=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let V=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,w;for(;(w=V.exec(s))!==null;)o.push(w);o=o[Symbol.iterator]()}let n=this._unpackRle(o),i=t.size.x*t.size.y*t.size.z,l=0,h=e.size,c=1;h>=2&&(c=2),h>=4&&(c=4),h>=16&&(c=8);let f=t.voxels=new Ht([t.size.x,t.size.y,t.size.z],c);for(let V=0;V<n.length;V++)l+=n[V][1];if(l!==i)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${i} voxels) but the voxel matrix contains ${l} voxels.`);let m={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new ve;let u=null,d=null,p=t.bounds,M=t.size,v=Rt(M.x),F=Rt(M.y),y=Rt(M.z),x=t.materials.materials;for(let V=0,w=n.length;V<w;V++){let g=null,_=n[V],b=_[0];b!=="-"&&(g=b,e.has(g)||(r===null&&(r=t.materials.createMaterial(Ae,je,.5,0,!1,1,!1)),u=t.materials.materials.indexOf(r),e.set(g,ps("#FF00FF")),a.set(g,u)),u=a.get(g),d=x[u].bounds);let C=_[1];if(e.has(g)){let A=e.get(g);this._setVoxels(p,d,u,v,F,y,A,C,m,f)}else this._advanceContext(C,v,F,y,m)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=Ut.fromHex(t.split(" ")[0]),a=Math.abs(parseFloat(t.split(" ")[1]||1)),r=parseFloat(t.split(" ")[2]||1),o=parseFloat(t.split(" ")[3]||70);o=Math.max(0,Math.min(90,Math.round(o))),s={color:e,maxDistance:a,strength:r,angle:o}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let a=t.split(/\s+/);if(a.length<2||a.length%2!==0)e=!0;else for(let r=0;r<a.length/2;r++){let o=a[r*2+0],n=a[r*2+1];if(!/^[A-Z][a-z]*$/.test(o)||!/^([-+]?[0-9]*\.?[0-9]+)*$/.test(n)){e=!0;break}else s.push({colorId:a[r*2],distance:a[r*2+1]})}}if(e)throw new Error(`SyntaxError: shell '${t}' must be 'none' or one or more color ID's and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(a,r){return a.distance-r.distance})),s}static _resolveShellColors(t,s,e,a){!t||t.length===0||t.forEach(function(r){if(!e.has(r.colorId))throw new Error(`SyntaxError: shell color ID '${r.colorId}' is not a known color`);r.voxBgr=e.get(r.colorId),r.materialIndex=a.get(r.colorId)},this)}static _parseVertexData(t,s){if(t){let e=[],a=t.split(/\s+/),r=null;for(let n=0;n<a.length;n++){let i=a[n];if(isNaN(i))r={name:i,values:[]},e.push(r);else if(r)r.values.push(parseFloat(i));else break}let o=e.length===0;for(let n=0;n<e.length;n++)o=o||e[n].values.length===0||e[n].values.length>=4;if(o)throw new Error(`SyntaxError: The data property '${e.data}' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let a=0;a<t.length;a++)e=e||t[a].name!==s[a].name,e=e||t[a].values.length!==s[a].values.length}}catch{e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,a){let r=this._parseXYZFloat(t,s,e,a);return{x:Math.trunc(r.x),y:Math.trunc(r.y),z:Math.trunc(r.z)}}static _parseXYZFloat(t,s,e,a){if(!s&&e&&(s=e),!s)return null;let r=s.split(/[\s/]+/);if(r.length===1&&a&&(r.push(r[0]),r.push(r[0])),r.length!==3)throw new Error(`SyntaxError: '${t}' must have three values.`);if(r={x:parseFloat(r[0]),y:parseFloat(r[1]),z:parseFloat(r[2])},Number.isNaN(r.x)||Number.isNaN(r.y)||Number.isNaN(r.z))throw new Error(`SyntaxError: Invalid value '${s}' for ${t}'.`);return r}static _unpackRle(t){let s=[],e=1,a=t.next();for(;!a.done;){let r=a.value[0],o=r[0],n=r[1];if(o>="0"&&o<="9")e=parseInt(r,10);else if(r==="("){let i=this._unpackRle(t);for(let l=0;l<e;l++)Array.prototype.push.apply(s,i);e=1}else{if(r===")")return s;r.length>1&&o>="A"&&o<="Z"&&n===o?(e>1?(s.push([o,e]),s.push([o,r.length-1])):s.push([o,r.length]),e=1):r.length>1&&o==="-"&&n==="-"?(e>1?(s.push(["-",e]),s.push(["-",r.length-1])):s.push(["-",r.length]),e=1):(s.push([r,e]),e=1)}a=t.next()}return s}static _setVoxels(t,s,e,a,r,o,n,i,l,h){let{x:c,y:f,z:m,maxx:u,maxy:d,minx:p,miny:M}=l;c-=a,f-=r,m-=o,p-=a,M-=r,u-=a,d-=r;let v=(n|e<<24)>>>0;for(;i-- >0;)t.set(c,f,m),s.set(c,f,m),h.setColorAt(c,f,m,v),c++,c>u&&(c=p,f++),f>d&&(f=M,m++);l.x=c+a,l.y=f+r,l.z=m+o}static _advanceContext(t,s,e,a,r){let{x:o,y:n,z:i,maxx:l,maxy:h,minx:c,miny:f}=r;for(o-=s,n-=e,i-=a,c-=s,f-=e,l-=s,h-=e;t-- >0;)o++,o>l&&(o=c,n++),n>h&&(n=f,i++);r.x=o+s,r.y=n+e,r.z=i+a}static _validateModel(t){this._validateProperties(t,Bs,Ps,"model");for(let s of t.lights)this._validateLight(s);for(let s of t.textures)this._validateTexture(s);for(let s of t.materials)this._validateMaterial(s)}static _validateLight(t){if(this._validateProperties(t,Rs,ks,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,Ls,Us,"texture")}static _validateMaterial(t){this._validateProperties(t,$s,qs,"material")}static _validateProperties(t,s,e,a){for(let r of s)if(!Object.hasOwn(t,r))throw new Error("SyntaxError: "+a+' is missing mandatory property "'+r+'".');for(let r in t)if(!s.includes(r)&&!e.includes(r))throw new Error("SyntaxError: "+a+' has unrecognized property "'+r+'".')}};var We=class{constructor(t){let s=Math.floor(t/8),e=t/4,a=Math.floor(e/8),r=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=wt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=wt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=wt.create(new Uint8Array(a).buffer,1,0),this.faceClamped=wt.create(new Uint8Array(a).buffer,1,0),this.faceSmooth=wt.create(new Uint8Array(a).buffer,1,0),this.faceEquidistant=wt.create(new Uint8Array(a).buffer,1,0),this.faceCulled=wt.create(new Uint8Array(a).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(r),this.faceVertNormalX=new Float32Array(r),this.faceVertNormalY=new Float32Array(r),this.faceVertNormalZ=new Float32Array(r),this.faceVertFlatNormalX=new Float32Array(r),this.faceVertFlatNormalY=new Float32Array(r),this.faceVertFlatNormalZ=new Float32Array(r),this.faceVertSmoothNormalX=new Float32Array(r),this.faceVertSmoothNormalY=new Float32Array(r),this.faceVertSmoothNormalZ=new Float32Array(r),this.faceVertBothNormalX=new Float32Array(r),this.faceVertBothNormalY=new Float32Array(r),this.faceVertBothNormalZ=new Float32Array(r),this.faceVertColorR=new Float32Array(r),this.faceVertColorG=new Float32Array(r),this.faceVertColorB=new Float32Array(r),this.faceVertLightR=new Float32Array(r),this.faceVertLightG=new Float32Array(r),this.faceVertLightB=new Float32Array(r),this.faceVertAO=new Float32Array(r),this.faceVertUs=new Float32Array(r),this.faceVertVs=new Float32Array(r),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var xt=new Map,ie=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,a=ie._getAllShells(t),r=a.map(n=>n.length).reduce((n,i)=>Math.max(n,i),0)+1,o={materials:[],groups:[],indices:new Uint32Array(e*4*6*r),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3*r),normals:new Float32Array(e*4*3*r),colors:new Float32Array(e*4*3*r),uvs:new Float32Array(e*4*2*r),data:null};return t.materials.baseMaterials.forEach(function(n){n.index=o.materials.length,o.materials.push(ie._generateMaterial(n,t))},this),xt.clear(),ie._generateAll(t,o,s,a),o}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===pe?pe:jt};return t.type!==Je&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e,a){let r=t.materials.materials,{faceMaterials:o,faceCulled:n}=e,i=t.scale.x,l=t.scale.y,h=t.scale.z;t.materials.baseMaterials.forEach(function(f){let m=s.indicesIndex,u=!1;for(let d=0,p=t.faceCount;d<p;d++){if(n.get(d)!==0)continue;let M=o[d],v=r[M];v._baseMaterial===f&&(ie._generateFace(t,e,d,s),u||(u=!0));for(let F=0,y=a.length;F<y;F++){let[x,V,w,g,_,b]=a[F];V._baseMaterial===f&&x===v&&(ie._generateShellFace(t,e,d,s,w*i,w*l,w*h,g,_,b,V,i,l,h),u||(u=!0))}}if(u){let d=s.indicesIndex;s.groups.push({start:m,count:d-m,materialIndex:f.index})}},this);let c=s.maxIndex+1;s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,c*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,c*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,c*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,c*2)}static _generateFace(t,s,e,a){let{faceVertIndices:r,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,vertX:l,vertY:h,vertZ:c,faceVertColorR:f,faceVertColorG:m,faceVertColorB:u,faceVertUs:d,faceVertVs:p,faceMaterials:M,faceSmooth:v}=s,y=t.materials.materials[M[e]],x=r[e*4],V=r[e*4+1],w=r[e*4+2],g=r[e*4+3],_=l[x],b=h[x],C=c[x],A=l[V],X=h[V],O=c[V],Y=l[w],B=h[w],T=c[w],E=l[g],R=h[g],q=c[g],L=o[e*4],U=n[e*4],S=i[e*4],k=o[e*4+1],N=n[e*4+1],G=i[e*4+1],I=o[e*4+2],P=n[e*4+2],K=i[e*4+2],H=o[e*4+3],j=n[e*4+3],rt=i[e*4+3],Z=f[e*4],mt=m[e*4],ut=u[e*4],It=f[e*4+1],At=m[e*4+1],nt=u[e*4+1],Et=f[e*4+2],Mt=m[e*4+2],kt=u[e*4+2],bt=f[e*4+3],Gt=m[e*4+3],Qt=u[e*4+3],ne=d[e*4],yt=p[e*4],zt=d[e*4+1],Nt=p[e*4+1],St=d[e*4+2],Xt=p[e*4+2],Lt=d[e*4+3],gt=p[e*4+3];if(y.side===ge){let $,Q,D;$=_,Q=b,D=C,_=Y,b=B,C=T,Y=$,B=Q,T=D,$=L,Q=U,D=S,L=I,U=P,S=K,I=$,P=Q,K=D,$=Z,Q=mt,D=ut,Z=Et,mt=Mt,ut=kt,Et=$,Mt=Q,kt=D,$=ne,Q=yt,ne=St,yt=Xt,St=$,Xt=Q}let vt=v.get(e)===1;if(!(y.lighting===me||y.lighting===ue&&vt)){let $=I+k+L,Q=P+N+U,D=K+G+S,ft=L+H+I,Vt=U+j+P,ae=S+rt+K,xe=Math.sqrt($*$+Q*Q+D*D),oe=Math.sqrt(ft*ft+Vt*Vt+ae*ae),Pt=1/xe,ee=1/oe;if($*=Pt,Q*=Pt,D*=Pt,ft*=ee,Vt*=ee,ae*=ee,y.lighting===_e){let Jt=Math.sqrt($*$+Q*Q+D*D)+Math.sqrt(ft*ft+Vt*Vt+ae*ae),Kt=1/Jt;$=ft=($+ft)*Kt,Q=Vt=(Q+Vt)*Kt,D=ae=(D+ae)*Kt}L=$,U=Q,S=D,k=$,N=Q,G=D,I=$,P=Q,K=D,H=ft,j=Vt,rt=ae}let lt=a.indices,at=a.positions,ot=a.normals,it=a.colors,Ot=a.uvs,$t=_*3+b*61673+C*87119+L*2766691+U*73091+S*5040949+Z*8636137+mt*2360719+ut*4739729+Math.round(ne*1e3)*719959+Math.round(yt*1e3)*172741,Wt=A*3+X*61673+O*87119+k*2766691+N*73091+G*5040949+It*8636137+At*2360719+nt*4739729+Math.round(zt*1e3)*719959+Math.round(Nt*1e3)*172741,te=Y*3+B*61673+T*87119+I*2766691+P*73091+K*5040949+Et*8636137+Mt*2360719+kt*4739729+Math.round(St*1e3)*719959+Math.round(Xt*1e3)*172741,Yt=E*3+R*61673+q*87119+H*2766691+j*73091+rt*5040949+bt*8636137+Gt*2360719+Qt*4739729+Math.round(Lt*1e3)*719959+Math.round(gt*1e3)*172741,Zt=xt.has($t),Bt=xt.has(Wt),le=xt.has(te),ce=xt.has(Yt),_t,pt,ht,dt;if(Zt)_t=xt.get($t);else{_t=a.maxIndex+1;let $=_t*3,Q=$+1,D=$+2,ft=_t*2,Vt=ft+1;a.maxIndex=_t,at[$]=_,at[Q]=b,at[D]=C,ot[$]=L,ot[Q]=U,ot[D]=S,it[$]=Z,it[Q]=mt,it[D]=ut,Ot[ft]=ne,Ot[Vt]=yt,xt.set($t,_t)}if(Bt)pt=xt.get(Wt);else{pt=a.maxIndex+1;let $=pt*3,Q=$+1,D=$+2,ft=pt*2,Vt=ft+1;a.maxIndex=pt,at[$]=A,at[Q]=X,at[D]=O,ot[$]=k,ot[Q]=N,ot[D]=G,it[$]=It,it[Q]=At,it[D]=nt,Ot[ft]=zt,Ot[Vt]=Nt,xt.set(Wt,pt)}if(le)ht=xt.get(te);else{ht=a.maxIndex+1;let $=ht*3,Q=$+1,D=$+2,ft=ht*2,Vt=ft+1;a.maxIndex=ht,at[$]=Y,at[Q]=B,at[D]=T,ot[$]=I,ot[Q]=P,ot[D]=K,it[$]=Et,it[Q]=Mt,it[D]=kt,Ot[ft]=St,Ot[Vt]=Xt,xt.set(te,ht)}if(ce)dt=xt.get(Yt);else{dt=a.maxIndex+1;let $=dt*3,Q=$+1,D=$+2,ft=dt*2,Vt=ft+1;a.maxIndex=dt,at[$]=E,at[Q]=R,at[D]=q,ot[$]=H,ot[Q]=j,ot[D]=rt,it[$]=bt,it[Q]=Gt,it[D]=Qt,Ot[ft]=Lt,Ot[Vt]=gt,xt.set(Yt,dt)}let Ft=a.indicesIndex;lt[Ft]=ht,lt[Ft+1]=pt,lt[Ft+2]=_t,lt[Ft+3]=_t,lt[Ft+4]=dt,lt[Ft+5]=ht,a.indicesIndex+=6}static _generateShellFace(t,s,e,a,r,o,n,i,l,h,c){let{faceVertIndices:f,faceVertBothNormalX:m,faceVertBothNormalY:u,faceVertBothNormalZ:d,faceVertSmoothNormalX:p,faceVertSmoothNormalY:M,faceVertSmoothNormalZ:v,faceVertFlatNormalX:F,faceVertFlatNormalY:y,faceVertFlatNormalZ:x,faceVertNormalX:V,faceVertNormalY:w,faceVertNormalZ:g,vertX:_,vertY:b,vertZ:C,faceVertColorR:A,faceVertColorG:X,faceVertColorB:O,faceVertUs:Y,faceVertVs:B,faceSmooth:T}=s,E=f[e*4],R=f[e*4+1],q=f[e*4+2],L=f[e*4+3],U=_[E],S=b[E],k=C[E],N=_[R],G=b[R],I=C[R],P=_[q],K=b[q],H=C[q],j=_[L],rt=b[L],Z=C[L],mt=p[e*4],ut=M[e*4],It=v[e*4],At=p[e*4+1],nt=M[e*4+1],Et=v[e*4+1],Mt=p[e*4+2],kt=M[e*4+2],bt=v[e*4+2],Gt=p[e*4+3],Qt=M[e*4+3],ne=v[e*4+3],yt,zt,Nt,St,Xt,Lt,gt,vt,lt,at,ot,it,Ot=T.get(e)===1;switch(c.lighting){case me:yt=p[e*4],zt=M[e*4],Nt=v[e*4],St=p[e*4+1],Xt=M[e*4+1],Lt=v[e*4+1],gt=p[e*4+2],vt=M[e*4+2],lt=v[e*4+2],at=p[e*4+3],ot=M[e*4+3],it=v[e*4+3];break;case ue:Ot?(yt=m[e*4],zt=u[e*4],Nt=d[e*4],St=m[e*4+1],Xt=u[e*4+1],Lt=d[e*4+1],gt=m[e*4+2],vt=u[e*4+2],lt=d[e*4+2],at=m[e*4+3],ot=u[e*4+3],it=d[e*4+3]):(yt=F[e*4],zt=y[e*4],Nt=x[e*4],St=F[e*4+1],Xt=y[e*4+1],Lt=x[e*4+1],gt=F[e*4+2],vt=y[e*4+2],lt=x[e*4+2],at=F[e*4+3],ot=y[e*4+3],it=x[e*4+3]);break;default:yt=F[e*4],zt=y[e*4],Nt=x[e*4],St=F[e*4+1],Xt=y[e*4+1],Lt=x[e*4+1],gt=F[e*4+2],vt=y[e*4+2],lt=x[e*4+2],at=F[e*4+3],ot=y[e*4+3],it=x[e*4+3];break}let $t=Y[e*4],Wt=B[e*4],te=Y[e*4+1],Yt=B[e*4+1],Zt=Y[e*4+2],Bt=B[e*4+2],le=Y[e*4+3],ce=B[e*4+3];if(c.side===ge){let W,J,tt;W=U,J=S,tt=k,U=P,S=K,k=H,P=W,K=J,H=tt,W=yt,J=zt,tt=Nt,yt=gt,zt=vt,Nt=lt,gt=W,vt=J,lt=tt,W=$t,J=Wt,$t=Zt,Wt=Bt,Zt=W,Bt=J,W=mt,J=ut,tt=It,mt=Mt,ut=kt,It=bt,Mt=W,kt=J,bt=tt}if(U+=r*mt,S+=o*ut,k+=n*It,N+=r*At,G+=o*nt,I+=n*Et,P+=r*Mt,K+=o*kt,H+=n*bt,j+=r*Gt,rt+=o*Qt,Z+=n*ne,!(c.lighting===me||c.lighting===ue&&Ot)){let W=gt+St+yt,J=vt+Xt+zt,tt=lt+Lt+Nt,ct=yt+at+gt,Ct=zt+ot+vt,se=Nt+it+lt,we=Math.sqrt(W*W+J*J+tt*tt),De=Math.sqrt(ct*ct+Ct*Ct+se*se),Me=1/we,ye=1/De;if(W*=Me,J*=Me,tt*=Me,ct*=ye,Ct*=ye,se*=ye,c.lighting===_e){let as=Math.sqrt(W*W+J*J+tt*tt)+Math.sqrt(ct*ct+Ct*Ct+se*se),Ie=1/as;W=ct=(W+ct)*Ie,J=Ct=(J+Ct)*Ie,tt=se=(tt+se)*Ie}yt=W,zt=J,Nt=tt,St=W,Xt=J,Lt=tt,gt=W,vt=J,lt=tt,at=ct,ot=Ct,it=se}let _t=a.indices,pt=a.positions,ht=a.normals,dt=a.colors,Ft=a.uvs,$=U*3+S*61673+k*87119+yt*2766691+zt*73091+Nt*5040949+i*8636137+l*2360719+h*4739729+Math.round($t*1e3)*719959+Math.round(Wt*1e3)*172741,Q=N*3+G*61673+I*87119+St*2766691+Xt*73091+Lt*5040949+i*8636137+l*2360719+h*4739729+Math.round(te*1e3)*719959+Math.round(Yt*1e3)*172741,D=P*3+K*61673+H*87119+gt*2766691+vt*73091+lt*5040949+i*8636137+l*2360719+h*4739729+Math.round(Zt*1e3)*719959+Math.round(Bt*1e3)*172741,ft=j*3+rt*61673+Z*87119+at*2766691+ot*73091+it*5040949+i*8636137+l*2360719+h*4739729+Math.round(le*1e3)*719959+Math.round(ce*1e3)*172741,Vt=xt.has($),ae=xt.has(Q),xe=xt.has(D),oe=xt.has(ft),Pt,ee,Jt,Kt;if(Vt)Pt=xt.get($);else{Pt=a.maxIndex+1;let W=Pt*3,J=W+1,tt=W+2,ct=Pt*2,Ct=ct+1;a.maxIndex=Pt,pt[W]=U,pt[J]=S,pt[tt]=k,ht[W]=yt,ht[J]=zt,ht[tt]=Nt,dt[W]=i,dt[J]=l,dt[tt]=h,Ft[ct]=$t,Ft[Ct]=Wt,xt.set($,Pt)}if(ae)ee=xt.get(Q);else{ee=a.maxIndex+1;let W=ee*3,J=W+1,tt=W+2,ct=ee*2,Ct=ct+1;a.maxIndex=ee,pt[W]=N,pt[J]=G,pt[tt]=I,ht[W]=St,ht[J]=Xt,ht[tt]=Lt,dt[W]=i,dt[J]=l,dt[tt]=h,Ft[ct]=te,Ft[Ct]=Yt,xt.set(Q,ee)}if(xe)Jt=xt.get(D);else{Jt=a.maxIndex+1;let W=Jt*3,J=W+1,tt=W+2,ct=Jt*2,Ct=ct+1;a.maxIndex=Jt,pt[W]=P,pt[J]=K,pt[tt]=H,ht[W]=gt,ht[J]=vt,ht[tt]=lt,dt[W]=i,dt[J]=l,dt[tt]=h,Ft[ct]=Zt,Ft[Ct]=Bt,xt.set(D,Jt)}if(oe)Kt=xt.get(ft);else{Kt=a.maxIndex+1;let W=Kt*3,J=W+1,tt=W+2,ct=Kt*2,Ct=ct+1;a.maxIndex=Kt,pt[W]=j,pt[J]=rt,pt[tt]=Z,ht[W]=at,ht[J]=ot,ht[tt]=it,dt[W]=i,dt[J]=l,dt[tt]=h,Ft[ct]=le,Ft[Ct]=ce,xt.set(ft,Kt)}let he=a.indicesIndex;_t[he]=Jt,_t[he+1]=ee,_t[he+2]=Pt,_t[he+3]=Pt,_t[he+4]=Kt,_t[he+5]=Jt,a.indicesIndex+=6}static _getAllShells(t){let s=[];return t.materials.forEach(function(e){let a;t.shell&&t.shell.length>0&&!e.shell&&(a=t.shell),e.shell&&e.shell.length>0&&(a=e.shell),a&&a.forEach(function(r){let o=r.voxBgr,n=(o>>16&255)/255,i=(o>>8&255)/255,l=(o>>0&255)/255;s.push([e,t.materials.materials[r.materialIndex],r.distance,l,i,n])},this)},this),s.sort((e,a)=>e[1]-a[1]),s}};var Dt=class{static generate(t){let s=[];t.materials.forEach(function(r){s.push(Dt._generateMaterial(r))},this);let e=new THREE.BufferGeometry;if(e.setAttribute("position",new THREE.Float32BufferAttribute(t.positions,3)),e.setAttribute("normal",new THREE.Float32BufferAttribute(t.normals,3)),e.setAttribute("color",new THREE.Float32BufferAttribute(t.colors,3)),t.uvs&&e.setAttribute("uv",new THREE.Float32BufferAttribute(t.uvs,2)),t.data)for(let r=0;r<t.data.length;r++)e.setAttribute(t.data[r].name,new THREE.Float32BufferAttribute(t.data[r].values,t.data[r].width));return e.setIndex(new THREE.BufferAttribute(t.indices,1)),t.groups.forEach(function(r){e.addGroup(r.start,r.count,r.materialIndex)},this),e.computeBoundingBox(),e.uvsNeedUpdate=!0,new THREE.Mesh(e,s)}static _generateMaterial(t){switch(t.reflectivity=(1-t.roughness)*(t.metalness*.95+.05),t.shininess=Math.pow(10,5*Math.pow(1-t.roughness,1.1))*.1,t.side){case"back":t.side=THREE.BackSide;break;case"double":t.side=THREE.DoubleSide;break;default:t.side=THREE.FrontSide;break}t.map&&(t.map=Dt._generateTexture(t.map.image,THREE.sRGBEncoding,t.map.uscale,t.map.vscale,t.map.uoffset,t.map.voffset,t.map.rotation)),t.normalMap&&(t.normalMap=Dt._generateTexture(t.normalMap.image,THREE.LinearEncoding,t.normalMap.uscale,t.normalMap.vscale,t.normalMap.uoffset,t.normalMap.voffset,t.normalMap.rotation)),t.roughnessMap&&(t.roughnessMap=Dt._generateTexture(t.roughnessMap.image,THREE.LinearEncoding,t.roughnessMap.uscale,t.roughnessMap.vscale,t.roughnessMap.uoffset,t.roughnessMap.voffset,t.roughnessMap.rotation)),t.metalnessMap&&(t.metalnessMap=Dt._generateTexture(t.metalnessMap.image,THREE.LinearEncoding,t.metalnessMap.uscale,t.metalnessMap.vscale,t.metalnessMap.uoffset,t.metalnessMap.voffset,t.metalnessMap.rotation)),t.emissiveMap&&(t.emissiveMap=Dt._generateTexture(t.emissiveMap.image,THREE.sRGBEncoding,t.emissiveMap.uscale,t.emissiveMap.vscale,t.emissiveMap.uoffset,t.emissiveMap.voffset,t.emissiveMap.rotation)),t.matcap&&(t.matcap=Dt._generateTexture(t.matcap.image,THREE.sRGBEncoding)),t.reflectionMap&&(t.envMap=new THREE.TextureLoader().load(t.reflectionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularReflectionMapping,delete t.reflectionMap),t.refractionMap&&(t.envMap=new THREE.TextureLoader().load(t.refractionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularRefractionMapping,delete t.refractionMap);let s=null,e=t.type;switch(delete t.index,delete t.type,e){case"standard":delete t.reflectivity,delete t.shininess,s=new THREE.MeshStandardMaterial(t);break;case"basic":delete t.roughness,delete t.metalness,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,s=new THREE.MeshBasicMaterial(t);break;case"lambert":delete t.roughness,delete t.metalness,delete t.shininess,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshLambertMaterial(t);break;case"phong":delete t.roughness,delete t.metalness,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshPhongMaterial(t);break;case"matcap":delete t.roughness,delete t.metalness,delete t.wireframe,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshMatcapMaterial(t);break;case"toon":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshToonMaterial(t);break;case"normal":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.map,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshNormalMaterial(t);break;default:throw new Error(`SyntaxError: Unknown material type ${e}`)}return s}static _generateTexture(t,s,e,a,r,o,n){let i=new THREE.TextureLoader().load(t);return i.encoding=s,i.repeat.set(1/e,1/a),i.wrapS=THREE.RepeatWrapping,i.wrapT=THREE.RepeatWrapping,i.offset=new THREE.Vector2(r,o),i.rotation=n*Math.PI/180,i}};function vs(z){let t=new Blob([z],{type:"text/javascript"}),s=URL.createObjectURL(t),e=new Worker(s);return URL.revokeObjectURL(s),e}function Fs(){return vs('var bs=Object.defineProperty;var Ys=(N,t,s)=>t in N?bs(N,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):N[t]=s;var ds=(N,t,s)=>(Ys(N,typeof t!="symbol"?t+"":t,s),s);var et=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\\s+(?:none|-x|x|\\+x|-y|y|\\+y|-z|z|\\+z|\\s))+\\s*$/.test(t))throw new Error(`SyntaxError: Planar expression \'${t}\' is only allowed to be \'none\' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var Ae="standard",We="basic",gs="lambert",vs="phong",Fs="matcap",Vs="toon",Qe="normal",we="bounds",fe="model",Je="flat",ye="quad",he="smooth",me="both",jt="front",de="back",ue="double",As=["nx","px","ny","py","nz","pz"],ys=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Ms=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],_s=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],Cs=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var rs=(N,t,s)=>Math.min(Math.max(N,t),s),kt=class{static fromHex(t){let s=new kt;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(rs(t,0,1)*255),s=Math.round(rs(s,0,1)*255),e=Math.round(rs(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return kt.fromHex(r)}clone(){let t=new kt;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof kt?kt.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):kt.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((o,n)=>o+n.r,0),e=this.g+t.reduce((o,n)=>o+n.g,0),r=this.b+t.reduce((o,n)=>o+n.b,0);return kt.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ze=class{constructor(t,s,e,r,o,n,i,a,c,f,l,h,m,u,x,p,V,v,F,A,d,_,I,g,M){switch(t=t||Ae,t){case Ae:case We:case gs:case vs:case Vs:case Fs:case Qe:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||x&&x.cube||p&&p.cube||V&&V.cube)&&!(d===-1&&_===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(F&&A)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof o=="number"?o:0,this.transparent=!!n,this.refractionRatio=typeof i=="number"?i:.9,this.wireframe=!!a,this.side=c||jt,[jt,de,ue].includes(this.side)||(this.side=jt),this.setEmissive(f,l),this.fog=typeof h=="boolean"?h:!0,this.map=m,this.normalMap=u,this.roughnessMap=x,this.metalnessMap=p,this.emissiveMap=V,this.matcap=v,this.reflectionMap=F,this.refractionMap=A,this.mapTransform={uscale:d||-1,vscale:_||-1,uoffset:I||0,voffset:g||0,rotation:M||0},this.aoActive=!1}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:kt.fromHex(t),intensity:s}}get emissive(){return this._emissive}};var ge=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var Oe=class{constructor(t,s,e,r,o){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=et.parse(""),this._clamp=et.parse(""),this._skip=et.parse(""),this._ao=void 0,this.lights=!0,this._side=o,this._colors=[],this.bounds=new ge}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t==null?1:t,0),s=s==null?1:s,e=e==null?1:e,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=et.parse(t)}get flatten(){return et.toString(this._flatten)}set clamp(t){this._clamp=et.parse(t)}get clamp(){return et.toString(this._clamp)}set skip(t){this._skip=et.parse(t)}get skip(){return et.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=et.parse(t)}get aoSides(){return et.toString(this._aoSides)}};var Xe=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,o,n,i,a,c,f,l,h,m,u,x,p,V,v,F,A,d,_,I,g,M,z,C,y){h=h||jt,[jt,de,ue].includes(h)||(h=jt);let b=h===ue?ue:jt,Y=new ze(t,e,r,i,a,c,f,l,b,m,u,x,p,V,v,F,A,d,_,I,g,M,z,C,y),Z=Y.baseId,B=this.baseMaterials.find(X=>X.baseId===Z);B?Y=B:this.baseMaterials.push(Y);let E=new Oe(Y,s,o,n,h);return this.materials.push(E),E}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}getMaterialListIndex(t){return this.materials.indexOf(t)}};function Se(N,t,s,e){let r=s*N;for(let o=0;o<s;){let n=r&7,i=r>>3,a=s-o,c=8-n,f=a<c?a:c,l=~(255<<f),h=t&l;t>>=f;let m=~(l<<n);e[i]=e[i]&m|h<<n,r+=f,o+=f}}var os=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Se(t,s,1,this.view)}clear(){this.view.fill(0)}},ns=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Se(t,s,2,this.view)}clear(){this.view.fill(0)}},as=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Se(t,s,4,this.view)}clear(){this.view.fill(0)}},is=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Se(t,s,8,this.view)}clear(){this.view.fill(0)}},cs=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,o=0;for(let n=0;n<e;){let i=r&7,a=r>>3,c=e-n,f=8-i,l=c<f?c:f,h=s[a],m=~(255<<l);o|=(h>>i&m)<<n,r+=l,n+=l}return o>>>0}set(t,s){Se(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},It=class{static create(t,s,e,r=null){let o=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new os(o);case 2:return new ns(o);case 4:return new as(o);case 8:return new is(o);default:return new cs(o)}}};var Es=0,Is=0,ls=128,be=8;var Zs=255,Ns=Zs<<24>>>0,fs={NONE:0,PAINT:1,KEEP:2},$t=1,ve=new Map,Lt=N=>Math.floor(N%2===0?N/2-1:N/2),Et=N=>{let[t,s,e]=N,r=Lt(t),o=Lt(s),n=Lt(e),i=t-r-1,a=s-o-1,c=e-n-1,f=-r,l=-o,h=-n;return[f,i,l,a,h,c]},Ye=1,ws=Ye*4;function hs(N,t,s=null){let e=2**t-$t,r=ws*e,o=N[0]*N[1]*N[2]*t,n=Math.floor(o/8)+1,i=be+r+n;s==null&&(typeof Buffer!="undefined"?s=Buffer.alloc(i).buffer:s=new ArrayBuffer(i));let a=new Uint8Array(s,0,be),c=r/ws,f=new Uint32Array(s,be,c),l=It.create(s,t,be+r);return a[0]=Es,[a[1],a[2],a[3]]=N,a[4]=t,[s,f,l]}var Gt=class{constructor(t=null,s=8,e=null,r=null,o=0,n=null,i=0,a=null){ds(this,"createInverse",(t,s)=>{ve.clear();let e=t.size,[r,o,n,i,a,c]=Et(e),{size:f}=this,l=new Gt(f),[h,m,u,x,p,V]=Et(f);for(let v=h;v<=m;v+=1)for(let F=u;F<=x;F+=1)for(let A=p;A<=V;A+=1){if(this.getPaletteIndexAt(v,F,A)===0)continue;let _=v+s[0],I=F+s[1],g=A+s[2];if(_>o||_<r||I>i||I<n||g>c||g<a||!t.hasVoxelAt(_,I,g))l.setColorAt(v,F,A,Ns);else{let M=t.getColorAt(_,I,g);l.setColorAt(v,F,A,M)}}return l});if(e&&r)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,n=n||e.length,a=a||r.length,this.palette=new Uint32Array(e,o||0,n/4),this.indices=It.create(r,s,i,a),this.xShift=Lt(t[0]),this.yShift=Lt(t[1]),this.zShift=Lt(t[2]),this._rebuildRefCounts();else if(t){let[c,f,l]=hs(t,s);this.palette=f,this.indices=l,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(c)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,be);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=Lt(this.size[0]),this.yShift=Lt(this.size[1]),this.zShift=Lt(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,o=this._getOffset(t,s,e);return r.get(o)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==Is}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,Is)}getVoxColorCounts(){let t=new Map;for(let s=0;s<this._refCounts.length;s+=1){let e=this._refCounts[s];if(e===0)continue;let r=this.colorForPaletteIndex(s+$t);t.set(r,e)}return t}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-$t)*Ye]}setPaletteColor(t,s){this.palette[(t-$t)*Ye]=s}paletteHasReferences(t){return this._refCounts[t-$t]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-$t]=1}incrementPaletteRefcount(t){this._refCounts[t-$t]+=1}decrementPaletteRefcount(t){this._refCounts[t-$t]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let o=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(o,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);Gt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),Gt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let o=this._getOffset(t,s,e);return this.setColorAtOffset(o,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,o=this.getPaletteIndexAtOffset(t),n=Gt.isNonEmptyPaletteIndex(o);n&&this.decrementPaletteRefcount(o);for(let a=0;a<e.length;a+=1){let c=a+$t;if(this.getPaletteColor(c)===s)return this.incrementPaletteRefcount(c),r.set(t,c),c}if(n&&!this.paletteHasReferences(o))return this.setPaletteColor(o,s),this.resetPaletteRefcountToOne(o),o;let i=this._getFreePaletteIndex();return this.setPaletteColor(i,s),this.resetPaletteRefcountToOne(i),this.indices.set(t,i),i}colorForPaletteIndex(t){return this.palette[(t-$t)*Ye]}filterByChunk(t,s,e,r,o){if(o===fs.NONE)return;let n=t.size,[i,a,c,f,l,h]=Et(n),{size:m}=this,[u,x,p,V,v,F]=Et(m);for(let A=u;A<=x;A+=1)for(let d=p;d<=V;d+=1)for(let _=v;_<=F;_+=1){if(this.getPaletteIndexAt(A,d,_)===0)continue;let g=A+s,M=d+e,z=_+r,y=!(g>a||g<i||M>f||M<c||z>h||z<l)&&t.hasVoxelAt(g,M,z);(o===fs.PAINT&&!y||o===fs.KEEP&&y)&&this.setEmptyAt(A,d,_)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let c=0;c<t.length;c+=1){let f=c+$t;if(!this.paletteHasReferences(f))return f}let o=r*2,[n,i,a]=hs(s,o);for(let c=0;c<t.length*Ye;c+=1)i[c]=t[c];for(;this._refCounts.length<i.length;)this._refCounts.push(0);for(let c=0,f=s[0]*s[1]*s[2];c<f;c+=1){let l=e.get(c);a.set(c,l)}return this.palette=i,this.indices=a,this._recomputeSizeFieldsForBuffer(n),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,o=Math.max(1,r[0],Math.abs(t)*2+1),n=Math.max(1,r[1],Math.abs(s)*2+1),i=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([o,n,i])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Gt(t),[e,r,o,n,i,a]=Et(this.size);for(let m=e;m<=r;m+=1)for(let u=o;u<=n;u+=1)for(let x=i;x<=a;x+=1)this.getPaletteIndexAt(m,u,x)!==0&&s.setColorAt(m,u,x,this.getColorAt(m,u,x));let{buffer:c}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:f}=s;this.bitsPerIndex=f;let[,l,h]=hs(t,f,c);this.palette=l,this.indices=h,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(c)}static fromJSON(t){if(typeof t=="string")return Gt.deserialize(t);let{size:s,palette:e,indices:r}=t,o=new Gt(s);for(let n=0;n<e.length+$t;n+=1)for(let i=0;i<r.length;i+=1){let a=r[i];if(a===n)if(a>=$t){let c=e[a-$t];o.setColorAtOffset(i,c)}else a===n&&o.setPaletteIndexAtOffset(i,a)}return o}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let o=0;o<this.palette.length;o+=1){let n=o+$t,i=this.getPaletteColor(n);i>0&&e.push(i)}for(let o=0,n=this.size[0]*this.size[1]*this.size[2];o<n;o+=1)r.push(this.indices.get(o));return{size:[...this.size],palette:e,indices:r}}clone(){return new Gt(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:o,yShift:n,zShift:i}=this,a=r[2];return(t+o)*r[1]*a+(s+n)*a+(e+i)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Gt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,r=0){ve.clear();let o=t.size,[n,i,a,c,f,l]=Et(o),{size:h}=this,[m,u,x,p,V,v]=Et(h);for(let F=m;F<=u;F+=1)for(let A=x;A<=p;A+=1)for(let d=V;d<=v;d+=1){let _=this.getPaletteIndexAt(F,A,d);if(_!==0){let I=F+s,g=A+e,M=d+r,z=o[0],C=o[1],y=o[2];if(I>i&&(z=I*2),I<n&&(z=Math.max(z,-I*2+1)),g>c&&(C=g*2),g<a&&(C=Math.max(C,-g*2+1)),M>l&&(y=M*2),M<f&&(y=Math.max(y,-M*2+1)),z>ls||C>ls||y>ls)continue;(o[0]<z||o[1]<C||o[2]<y)&&(t.resizeTo([z,C,y]),o=t.size,[n,i,a,c,f,l]=Et(o),ve.clear());let b=ve.get(_);if(b===void 0){let Y=this.getColorAt(F,A,d);if(Y===Ns)t.setEmptyAt(I,g,M);else{let Z=t.setColorAt(I,g,M,Y);ve.set(_,Z)}}else t.getPaletteIndexAt(I,g,M)!==b&&t.setPaletteIndexAt(I,g,M,b)}}}mergeWith(t,s,e,r=!1){ve.clear();let o=ve,n=e[0]-s[0],i=e[1]-s[1],a=e[2]-s[2],c=t.size,[f,l,h,m,u,x]=Et(c),{size:p}=this,[V,v,F,A,d,_]=Et(p);for(let I=V;I<=v;I+=1)for(let g=F;g<=A;g+=1)for(let M=d;M<=_;M+=1){let z=this.getPaletteIndexAt(I,g,M);if(z===0)continue;let C=I+n,y=g+i,b=M+a;if(!!(!(C>l||C<f||y>m||y<h||b>x||b<u)&&t.hasVoxelAt(C,y,b)))if(o.has(z))this.setPaletteIndexAt(I,g,M,o.get(z));else{(r||t.getColorAt(C,y,b)>this.getColorAt(I,g,M))&&this.removeVoxelAt(I,g,M);let B=this.getPaletteIndexAt(I,g,M);o.set(z,B)}}}};function ms(N){return N=N.trim().toUpperCase(),N.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/)?(N=N.replace("#",""),N.length===3?N=N[2]+N[2]+N[1]+N[1]+N[0]+N[0]:N=N[4]+N[5]+N[2]+N[3]+N[0]+N[1],parseInt(N,16)):0}function zs(){let N=[];for(let r=0;r<256;r++)N[r]=Math.floor(Math.random()*256),N[r+256]=N[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,o,n){return o+r*(n-o)}function e(r,o,n,i){let a=r&15,c=a<8?o:n,f=a<4?n:a===12||a===14?o:i;return((a&1)===0?c:-c)+((a&2)===0?f:-f)}return{noise:function(r,o,n){let i=Math.floor(r),a=Math.floor(o),c=Math.floor(n),f=i&255,l=a&255,h=c&255;r-=i,o-=a,n-=c;let m=r-1,u=o-1,x=n-1,p=t(r),V=t(o),v=t(n),F=N[f]+l,A=N[F]+h,d=N[F+1]+h,_=N[f+1]+l,I=N[_]+h,g=N[_+1]+h;return s(v,s(V,s(p,e(N[A],r,o,n),e(N[I],m,o,n)),s(p,e(N[d],r,u,n),e(N[g],m,u,n))),s(V,s(p,e(N[A+1],r,o,x),e(N[I+1],m,o,n-1)),s(p,e(N[d+1],r,u,x),e(N[g+1],m,u,x))))}}}var pe=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let o=0,n=t.faceCount;o<n;o++)r.set(o,0);break}}static _circularDeform(t,s,e,r,o){let[n,i,a,c,f,l]=Et(t.voxels.size),h=(n+i)/2+.5,m=(a+c)/2+.5,u=(f+l)/2+.5,{vertX:x,vertY:p,vertZ:V,vertRing:v}=s;for(let F=0,A=t.vertCount;F<A;F++){let d=x[F],_=p[F],I=V[F],g=d-h,M=_-m,z=I-u,C=Math.max(Math.abs(g*e),Math.abs(M*r),Math.abs(z*o)),y=Math.sqrt(g*g*e+M*M*r+z*z*o);if(y===0)continue;let b=C/y;x[F]=g*(1-e+e*b)+h,p[F]=M*(1-r+r*b)+m,V[F]=z*(1-o+o*b)+u,v[F]=C}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:o}=s;for(let n=0,i=t.faceCount;n<i;n++){let a=n*4,c=a+1,f=a+2,l=a+3;o.set(n,r[e[a]]===r[e[c]]&&r[e[a]]===r[e[f]]&&r[e[a]]===r[e[l]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:o,vertDeformCount:n,vertDeformDamping:i,vertDeformStrength:a,vertFlattenedX:c,vertFlattenedY:f,vertFlattenedZ:l,vertClampedX:h,vertClampedY:m,vertClampedZ:u,vertX:x,vertY:p,vertZ:V,vertTmpX:v,vertTmpY:F,vertTmpZ:A,vertHasTmp:d}=s;for(let _=0;_<e;_++){let I=!1;for(let g=0,M=t.vertCount;g<M;g++){if(n[g]<=_)continue;let C=o[g];if(C===0)continue;I=!0;let y=x[g],b=p[g],Y=V[g],Z=i[g],B=a[g],E=1-(h.get(g)|c.get(g)),X=1-(m.get(g)|f.get(g)),L=1-(u.get(g)|l.get(g)),$=0,U=0,k=0;for(let w=0;w<C;w++){let P=r[g*6+w];$+=x[P],U+=p[P],k+=V[P]}let S=Math.pow(Z,_)*B,R=$/C-y,O=U/C-b,H=k/C-Y;v[g]=y+E*R*S,F[g]=b+X*O*S,A[g]=Y+L*H*S,d.set(g,E|X|L)}if(I){for(let g=0,M=t.vertCount;g<M;g++)d.get(g)!==0&&(x[g]=v[g],p[g]=F[g],V[g]=A[g]);d.clear()}}}static warpAndScatter(t,s){let e=zs().noise,{nx:r,px:o,ny:n,py:i,nz:a,pz:c}=t._tile,[f,l,h,m,u,x]=Et(t.voxels.size),{vertX:p,vertY:V,vertZ:v,vertWarpAmplitude:F,vertWarpFrequency:A,vertScatter:d,vertFlattenedX:_,vertFlattenedY:I,vertFlattenedZ:g,vertClampedX:M,vertClampedY:z,vertClampedZ:C}=s;f+=.1,h+=.1,u+=.1,l+=.9,m+=.9,x+=.9;for(let y=0,b=t.vertCount;y<b;y++){let Y=p[y],Z=V[y],B=v[y];if(r&&Y<f||o&&Y>l||n&&Z<h||i&&Z>m||a&&B<u||c&&B>x)continue;let E=F[y],X=A[y],L=d[y],$=E>0,U=L>0;if($||U){let k=0,S=0,R=0;$&&(k=e((Y+.19)*X,Z*X,B*X)*E,S=e((Z+.17)*X,B*X,Y*X)*E,R=e((B+.13)*X,Y*X,Z*X)*E),U&&(k+=(Math.random()*2-1)*L,S+=(Math.random()*2-1)*L,R+=(Math.random()*2-1)*L);let O=1-(M.get(y)|_.get(y)),H=1-(z.get(y)|I.get(y)),w=1-(C.get(y)|g.get(y));p[y]=Y+O*k,V[y]=Z+H*S,v[y]=B+w*R}}}};var Me=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:o,faceVertIndices:n,vertLinkIndices:i,vertLinkCounts:a}=s;if(r.get(e)===1)for(let f=0;f<4;f++){let l=n[e*4+f],h=!1;for(let m=0,u=a[l];m<u;m++)if(i[l*6+m]===l){h=!0;break}h||(i[l*6+a[l]]=l,a[l]++,o[l]++)}else for(let f=0;f<4;f++){let l=n[e*4+f],h=n[e*4+(f+1)%4],m=!1;for(let x=0,p=a[l];x<p;x++)if(i[l*6+x]===h){m=!0;break}m||(i[l*6+a[l]]=h,a[l]++);let u=!1;for(let x=0,p=a[h];x<p;x++)if(i[h*6+x]===l){u=!0;break}u||(i[h*6+a[h]]=l,a[h]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:o,vertLinkCounts:n,vertLinkIndices:i}=s;for(let a=0,c=t.vertCount;a<c;a++){let f=r[a],l=n[a];f===l&&(o.set(a,1),n[a]=0)}for(let a=0,c=t.faceCount;a<c;a++)for(let f=0;f<4;f++){let l=e[a*4+f],h=e[a*4+(f+1)%4];if(o.get(l)===1){let m=!1;for(let u=0,x=n[l];u<x;u++)if(i[l*6+u]===h){m=!0;break}m||(i[l*6+n[l]]=h,n[l]++)}if(o.get(h)===1){let m=!1;for(let u=0,x=n[h];u<x;u++)if(i[h*6+u]===l){m=!0;break}m||(i[h*6+n[h]]=l,n[h]++)}}}};var Ee=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:o,faceSmooth:n,faceFlattened:i,faceClamped:a,vertX:c,vertY:f,vertZ:l,faceVertFlatNormalX:h,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:x,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:V,faceVertBothNormalX:v,faceVertBothNormalY:F,faceVertBothNormalZ:A,faceVertNormalX:d,faceVertNormalY:_,faceVertNormalZ:I,faceMaterials:g,faceVertIndices:M,vertSmoothNormalX:z,vertSmoothNormalY:C,vertSmoothNormalZ:y,vertBothNormalX:b,vertBothNormalY:Y,vertBothNormalZ:Z}=s,[B,E,X,L,$,U]=Et(t.voxels.size);for(let S=0,R=t.faceCount;S<R;S++){let O=S*4;for(let H=0;H<4;H++){let w=M[O+H];z[w]=0,C[w]=0,y[w]=0,b[w]=0,Y[w]=0,Z[w]=0}}for(let S=0,R=t.faceCount;S<R;S++){let O=r[S],H=o.get(S),w=i.get(S),P=a.get(S),W=H|1-(w|P);n.set(S,W);let G=M[S*4],D=M[S*4+1],rt=M[S*4+2],T=M[S*4+3],mt=(c[G]+c[D]+c[rt]+c[T])/4,ut=(f[G]+f[D]+f[rt]+f[T])/4,Nt=(l[G]+l[D]+l[rt]+l[T])/4;for(let yt=0;yt<4;yt++){let it=M[S*4+yt],Xt=M[S*4+(yt+3)%4],Vt=c[it],Rt=c[Xt],wt=f[it],Ht=f[Xt],Qt=l[it],ae=l[Xt],At=z[it],zt=C[it],Ot=y[it],St=b[it],bt=Y[it],Ut=Z[it],gt=Rt-Vt,vt=Ht-wt,ct=ae-Qt,ot=mt-Vt,nt=ut-wt,at=Nt-Qt,Yt=Math.sqrt(gt*gt+vt*vt+ct*ct),qt=Math.sqrt(ot*ot+nt*nt+at*at);Yt=Yt===0?1:Yt,qt=qt===0?1:qt;let Kt=1/Yt;gt*=Kt,vt*=Kt,ct*=Kt;let Dt=1/qt;ot*=Dt,nt*=Dt,at*=Dt;let Zt=vt*at-ct*nt,Tt=ct*ot-gt*at,Bt=gt*nt-vt*ot,ie=B+.1,ce=E+.9,Mt=X+.1,pt=L+.9,ft=$+.1,xt=U+.9;e&&((e.nx&&O===0||e.px&&O===1)&&(wt<Mt||wt>pt||Qt<ft||Qt>xt)&&(Tt=0,Bt=0),(e.ny&&O===2||e.py&&O===3)&&(Vt<ie||Vt>ce||Qt<ft||Qt>xt)&&(Zt=0,Bt=0),(e.nz&&O===4||e.pz&&O===5)&&(Vt<ie||Vt>ce||wt<Mt||wt>pt)&&(Zt=0,Tt=0));let Ft=Math.sqrt(Zt*Zt+Tt*Tt+Bt*Bt);Ft=Ft===0?1:Ft;let q=1/Ft;Zt*=q,Tt*=q,Bt*=q,h[S*4+yt]=Zt,m[S*4+yt]=Tt,u[S*4+yt]=Bt;let J=gt*ot+vt*nt+ct*at,Q=Math.acos(J);At+=Zt*Q,zt+=Tt*Q,Ot+=Bt*Q,St+=W*(Zt*Q),bt+=W*(Tt*Q),Ut+=W*(Bt*Q),z[it]=At,C[it]=zt,y[it]=Ot,b[it]=St,Y[it]=bt,Z[it]=Ut}}for(let S=0,R=t.vertCount;S<R;S++){let O=z[S],H=C[S],w=y[S],P=b[S],W=Y[S],G=Z[S],D=Math.sqrt(O*O+H*H+w*w),rt=Math.sqrt(P*P+W*W+G*G);D!==0&&(z[S]=O/D,C[S]=H/D,y[S]=w/D),rt!==0&&(b[S]=P/rt,Y[S]=W/rt,Z[S]=G/rt)}let k=t.materials.materials;for(let S=0,R=t.faceCount;S<R;S++){let O=n.get(S)===1,H=k[g[S]];for(let w=0;w<4;w++){let P=S*4+w,W=M[S*4+w];switch(x[P]=z[W],p[P]=C[W],V[P]=y[W],v[P]=!O||b[W]===0?h[P]:b[W],F[P]=!O||Y[W]===0?m[P]:Y[W],A[P]=!O||Z[W]===0?u[P]:Z[W],H.lighting){case he:d[P]=x[P],_[P]=p[P],I[P]=V[P];break;case me:d[P]=v[P],_[P]=F[P],I[P]=A[P];break;default:d[P]=h[P],_[P]=m[P],I[P]=u[P];break}}}}};var st=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,o=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,n=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=o,t.z=n}transformPointInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[12]*o+a[13]*n+a[14]*i+a[15],f=(a[0]*o+a[1]*n+a[2]*i+a[3])/c,l=(a[4]*o+a[5]*n+a[6]*i+a[7])/c,h=(a[8]*o+a[9]*n+a[10]*i+a[11])/c;t[r]=f,s[r]=l,e[r]=h}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,o=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=o}transformVectorInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[0]*o+a[1]*n+a[2]*i,f=a[4]*o+a[5]*n+a[6]*i,l=a[8]*o+a[9]*n+a[10]*i;t[r]=c,s[r]=f,e[r]=l}static identity(t){t=t||new st;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new st;let r=t.m,o=s.m,n=e.m;return n[0]=r[0]*o[0]+r[1]*o[4]+r[2]*o[8]+r[3]*o[12],n[1]=r[0]*o[1]+r[1]*o[5]+r[2]*o[9]+r[3]*o[13],n[2]=r[0]*o[2]+r[1]*o[6]+r[2]*o[10]+r[3]*o[14],n[3]=r[0]*o[3]+r[1]*o[7]+r[2]*o[11]+r[3]*o[15],n[4]=r[4]*o[0]+r[5]*o[4]+r[6]*o[8]+r[7]*o[12],n[5]=r[4]*o[1]+r[5]*o[5]+r[6]*o[9]+r[7]*o[13],n[6]=r[4]*o[2]+r[5]*o[6]+r[6]*o[10]+r[7]*o[14],n[7]=r[4]*o[3]+r[5]*o[7]+r[6]*o[11]+r[7]*o[15],n[8]=r[8]*o[0]+r[9]*o[4]+r[10]*o[8]+r[11]*o[12],n[9]=r[8]*o[1]+r[9]*o[5]+r[10]*o[9]+r[11]*o[13],n[10]=r[8]*o[2]+r[9]*o[6]+r[10]*o[10]+r[11]*o[14],n[11]=r[8]*o[3]+r[9]*o[7]+r[10]*o[11]+r[11]*o[15],n[12]=r[12]*o[0]+r[13]*o[4]+r[14]*o[8]+r[15]*o[12],n[13]=r[12]*o[1]+r[13]*o[5]+r[14]*o[9]+r[15]*o[13],n[14]=r[12]*o[2]+r[13]*o[6]+r[14]*o[10]+r[15]*o[14],n[15]=r[12]*o[3]+r[13]*o[7]+r[14]*o[11]+r[15]*o[15],e}static transpose(t,s){s=s||new st;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new st;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let o=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let n=0;n<16;n++)r[n]/=o;return s}static scale(t,s,e,r){r=r||new st;let o=r.m;return o[0]=t,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static translate(t,s,e,r){r=r||new st;let o=r.m;return o[0]=1,o[1]=0,o[2]=0,o[3]=t,o[4]=0,o[5]=1,o[6]=0,o[7]=s,o[8]=0,o[9]=0,o[10]=1,o[11]=e,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static rotate(t,s,e,r,o){if(!t||!s&&!e&&!r)return st.identity(o);o=o||new st;let n=o.m,i=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=i,e/=i,r/=i;let a=Math.cos(t),c=Math.sin(t),f=1-a;return n[0]=s*s*f+a,n[1]=s*e*f-r*c,n[2]=s*r*f+e*c,n[3]=0,n[4]=e*s*f+r*c,n[5]=e*e*f+a,n[6]=e*r*f-s*c,n[7]=0,n[8]=r*s*f-e*c,n[9]=r*e*f+s*c,n[10]=r*r*f+a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,o}static lookAtORIGINAL(t,s,e,r,o,n,i,a,c,f){f=f||new st;let l=f.m,h=t-r,m=s-o,u=e-n,x=Math.sqrt(h*h+m*m+u*u);h/=x,m/=x,u/=x;let p=a*u-c*m,V=c*h-i*u,v=i*m-a*h;x=Math.sqrt(p*p+V*V+v*v),p/=x,V/=x,v/=x;let F=m*v-u*V,A=u*p-h*v,d=h*V-m*p;return x=Math.sqrt(F*F+A*A+d*d),F/=x,A/=x,d/=x,l[0]=p,l[1]=V,l[2]=v,l[3]=-(p*t+V*s+v*e),l[4]=F,l[5]=A,l[6]=d,l[7]=-(F*t+A*s+d*e),l[8]=h,l[9]=m,l[10]=u,l[11]=-(h*t+m*s+u*e),l[12]=0,l[13]=0,l[14]=0,l[15]=1,f}static lookAtTRYOUT(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e);return o[0]=e/n,o[1]=0,o[2]=-t/n,o[3]=0,o[4]=t*s/n,o[5]=-n,o[6]=e*s/n,o[7]=0,o[8]=t,o[9]=s,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static lookAt(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e),i=n?t/n:1,a=n?e/n:0;return o[0]=t,o[1]=-a,o[2]=-e*i,o[3]=0,o[4]=s,o[5]=0,o[6]=n,o[7]=0,o[8]=e,o[9]=i,o[10]=-e*a,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}};var _e=[null,null,null,null],Ze=[null,null,null,null],Te=[null,null,null,null],Be=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:o,faceVertNormalX:n,faceVertFlatNormalX:i,faceVertNormalY:a,faceVertFlatNormalY:c,faceVertNormalZ:f,faceVertFlatNormalZ:l,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:V}=s,v=t.determineBoundsOffsetAndRescale(t.resize,s),F=new st;F=st.multiply(F,st.translate(t.position.x,t.position.y,t.position.z)),F=st.multiply(F,st.rotate(t.rotation.z,0,0,1)),F=st.multiply(F,st.rotate(t.rotation.y,0,1,0)),F=st.multiply(F,st.rotate(t.rotation.x,1,0,0)),F=st.multiply(F,st.scale(t.scale.x,t.scale.y,t.scale.z)),F=st.multiply(F,st.scale(v.rescale,v.rescale,v.rescale)),F=st.multiply(F,st.translate(v.offset.x,v.offset.y,v.offset.z));let A=st.inverse(F);A=st.transpose(A);for(let d=0,_=t.vertCount;d<_;d++)F.transformPointInline(e,r,o,d);_e[0]=n,Ze[0]=a,Te[0]=f,_e[1]=i,Ze[1]=c,Te[1]=l,_e[2]=h,Ze[2]=m,Te[2]=u,_e[3]=x,Ze[3]=p,Te[3]=V;for(let d=0,_=t.faceCount;d<_;d++){let I=d*4;for(let g=0;g<4;g++)for(let M=0,z=_e.length;M<z;M++){let C=_e[M],y=Ze[M],b=Te[M],Y=I+g;A.transformVectorInline(C,y,b,Y);let Z=C[Y],B=y[Y],E=b[Y],X=Math.sqrt(Z*Z+B*B+E*E);if(X>0){let L=1/X;C[Y]=Z*L,y[Y]=B*L,b[Y]=E*L}}}}};var Pe=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let V=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},V>0){let v=1/V;p.normalizedDirection.x*=v}}let r=t.materials.materials,{faceMaterials:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,faceVertIndices:c,vertX:f,vertY:l,vertZ:h,faceVertLightR:m,faceVertLightG:u,faceVertLightB:x}=s;for(let p=0,V=t.faceCount;p<V;p++){let v=r[o[p]],F=p*4;if(v.lights)for(let A=0;A<4;A++){let d=F+A,_=c[d],I=f[_],g=l[_],M=h[_],z=n[d],C=i[d],y=a[d];m[d]=0,u[d]=0,x[d]=0;for(let b of e){let{color:Y,strength:Z,distance:B,normalizedDirection:E,position:X}=b,L=Z,$=0;if(X){let U=X.x-I,k=X.y-g,S=X.z-M;$=Math.sqrt(U*U+k*k+S*S);let R=1/$;L=Z*Math.max(z*U*R+C*k*R+y*S*R,0)}else E&&(L=Z*Math.max(z*E.x+C*E.y+y*E.z,0));X&&B&&(L=L*(1-Math.min($/B,1))),m[d]+=Y.r*L,u[d]+=Y.g*L,x[d]+=Y.b*L}}else for(let A=0;A<4;A++){let d=F+A;m[d]=1,u[d]=1,x[d]=1}}}};var Os=[],us=new Map,ps=()=>Os.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Xs=N=>{for(let t of N.partitions)t&&Xs(t);N.minx=Number.MAX_VALUE,N.miny=Number.MAX_VALUE,N.minz=Number.MAX_VALUE,N.maxx=-Number.MAX_VALUE,N.maxy=-Number.MAX_VALUE,N.maxz=-Number.MAX_VALUE,N.partitions.fill(null),N.triangles.length=0,Os.push(N)},Le=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(_){return _.ao})))return;let{faceMaterials:r,faceVertIndices:o,faceVertAO:n,vertX:i,vertY:a,vertZ:c,faceVertNormalX:f,faceVertNormalY:l,faceVertNormalZ:h}=s,{faceCount:m}=t,u=t.materials.materials,x=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(x,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let V=t.aoSamples,v=this._generateFibonacciSamples(V);us.clear();let F=t.scale.x,A=t.scale.y,d=t.scale.z;for(let _=0;_<m;_++){let I=u[r[_]],g=I.ao||t.ao,M=_*4;if(n[M]=0,n[M+1]=0,n[M+2]=0,n[M+3]=0,!g||g.maxDistance===0||g.strength===0||g.angle<1||I.opacity===0)continue;let z=g.maxDistance*Math.max(F,A,d),C=g.strength,y=Math.cos(g.angle/180*Math.PI);for(let b=0;b<4;b++){let Y=M+b,Z=o[Y],B=i[Z],E=a[Z],X=c[Z],L=f[Y],$=l[Y],U=h[Y],k=B*16384+E*128+X,S=L*1e7+$*1e5+U*1e3,R=k*1e9+S,O=us.get(R);if(O!==void 0){n[Y]=O;continue}let H=o[M+(b+2)%4],w=i[H],P=a[H],W=c[H],G=B*.99999+w*1e-5+L*1e-5,D=E*.99999+P*1e-5+$*1e-5,rt=X*.99999+W*1e-5+U*1e-5,T=0,mt=0;for(let[Nt,yt,it]of v){if(Nt*L+yt*$+it*U<=y)continue;let Vt=G+Nt*z,Rt=D+yt*z,wt=rt+it*z,Ht=this._distanceToOctree(t,s,p,G,D,rt,Nt,yt,it,z,Vt,Rt,wt);Ht?Ht=Ht/z:Ht=1,T+=Ht,mt++}let ut=0;mt!==0&&(T=Math.max(Math.min(T/mt,1),0),ut=1-Math.pow(T,C)),n[Y]=ut,us.set(R,ut)}}Xs(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,o=[],n=t.materials.materials;for(let i=0;i<r;i++){if(n[e[i]].opacity<.75)continue;let c=i*2;o.push(c),o.push(c+1)}return o}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:o,vertY:n,vertZ:i}=e,a=t.length;if(a<=32){let c=ps();c.triangles=t;for(let f=0;f<a;f++){let l=t[f],m=(l>>1)*4,u,x,p;(l&1)===0?(u=r[m+2],x=r[m+1],p=r[m+0]):(u=r[m+0],x=r[m+3],p=r[m+2]);let V=o[u],v=n[u],F=i[u],A=o[x],d=n[x],_=i[x],I=o[p],g=n[p],M=i[p];c.minx=Math.min(c.minx,V,A,I),c.miny=Math.min(c.miny,v,d,g),c.minz=Math.min(c.minz,F,_,M),c.maxx=Math.max(c.maxx,V,A,I),c.maxy=Math.max(c.maxy,v,d,g),c.maxz=Math.max(c.maxz,F,_,M)}return c}else{let c=0,f=0,l=0;for(let x=0;x<a;x++){let p=t[x],v=(p>>1)*4,F,A,d;(p&1)===0?(F=r[v+2],A=r[v+1],d=r[v+0]):(F=r[v+0],A=r[v+3],d=r[v+2]);let _=o[F],I=n[F],g=i[F],M=o[A],z=n[A],C=i[A],y=o[d],b=n[d],Y=i[d];c+=_+M+y,f+=I+z+b,l+=g+C+Y}let h=1/a;c*=h,f*=h,l*=h;let m=Array(8).fill(null);for(let x=0;x<a;x++){let p=t[x],v=(p>>1)*4,F,A,d;(p&1)===0?(F=r[v+2],A=r[v+1],d=r[v+0]):(F=r[v+0],A=r[v+3],d=r[v+2]);let _=o[F],I=n[F],g=i[F],M=o[A],z=n[A],C=i[A],y=o[d],b=n[d],Y=i[d],Z=_+M+y<c?0:1,B=I+z+b<f?0:1,E=g+C+Y<l?0:1,X=Z+B*2+E*4;m[X]===null?m[X]=[p]:m[X].push(p)}let u=ps();for(let x=0;x<8;x++){if(m[x]===null)continue;let p=this._trianglesToOctree(m[x],s,e);u.partitions[x]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,o,n,i,a,c,f,l,h,m){if(this._hitsBox(r,o,n,l,h,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,o,n,i,a,c,f);let u=f,x=e.partitions;for(let p=0;p<8;p++){let V=x[p];if(V===null)continue;let v=this._distanceToOctree(t,s,V,r,o,n,i,a,c,f,l,h,m);v&&(u=Math.min(u,v))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(fe,s).bounds,{vertCount:o,faceCount:n}=t,{faceVertIndices:i,faceCulled:a,vertX:c,vertY:f,vertZ:l}=s,h=(u,x,p,V,v,F,A,d,_)=>{let I=n*4;c[o]=u,f[o]=x,l[o]=p,c[o+1]=V,f[o+1]=v,l[o+1]=F,c[o+2]=A,f[o+2]=d,l[o+2]=_,i[I]=o+2,i[I+1]=o+1,i[I+2]=o+0,a.set(n,1);let g=n*2;return n++,o+=3,g},m=[];if(t._aoSides.nx&&m.push(h(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(h(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(h(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(h(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(h(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(h(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),x=ps();x.partitions=[x,u]}return e}static _hitsBox(t,s,e,r,o,n,i){let a=i.minx;if(t<a&&r<a)return!1;let c=i.maxx;if(t>c&&r>c)return!1;let f=i.miny;if(s<f&&o<f)return!1;let l=i.maxy;if(s>l&&o>l)return!1;let h=i.minz;if(e<h&&n<h)return!1;let m=i.maxz;if(e>m&&n>m)return!1;let u=t-(a+c)*.5,x=(c-a)*.5,p=(r-t)*.5,V=Math.abs(p);if(Math.abs(u)>x+V)return!1;let v=(l-f)*.5,F=(o-s)*.5,A=Math.abs(F),d=s-(f+l)*.5;if(Math.abs(d)>v+A)return!1;let _=(m-h)*.5,I=(n-e)*.5,g=Math.abs(I),M=e-(h+m)*.5;return!(Math.abs(M)>_+g||Math.abs(F*M-I*d)>v*g+_*A+Number.EPSILON||Math.abs(I*u-p*M)>_*V+x*g+Number.EPSILON||Math.abs(p*d-F*u)>x*A+v*V+Number.EPSILON)}static _distanceToModel(t,s,e,r,o,n,i,a,c,f){let l=null,{faceVertIndices:h}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,V,v,F;(u&1)===0?(V=h[p+2],v=h[p+1],F=h[p+0]):(V=h[p+0],v=h[p+3],F=h[p+2]);let A=this._triangleDistance(t,s,V,v,F,r,o,n,i,a,c);A&&(l?l=Math.min(l,A):A<f&&(l=A))}return l}static _triangleDistance(t,s,e,r,o,n,i,a,c,f,l){let{vertX:h,vertY:m,vertZ:u}=s,x=h[e],p=m[e],V=u[e],v=h[r],F=m[r],A=u[r],d=h[o],_=m[o],I=u[o],g=v-x,M=F-p,z=A-V,C=d-x,y=_-p,b=I-V,Y=f*b-l*y,Z=l*C-c*b,B=c*y-f*C,E=g*Y+M*Z+z*B;if(E<Number.EPSILON)return null;let X=1/E,L=n-x,$=i-p,U=a-V,k=X*(L*Y+$*Z+U*B);if(k<0||k>1)return null;let S=$*z-U*M,R=U*g-L*z,O=L*M-$*g,H=X*(c*S+f*R+l*O);if(H<0||k+H>1)return null;let w=X*(C*S+y*R+b*O);return w<=Number.EPSILON?null:w}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let o=1;o<=t;++o){let n=Math.asin(-1+2*o/(t+1)),i=r*o,a=Math.cos(i)*Math.cos(n),c=Math.sin(n),f=Math.sin(i)*Math.cos(n);s.push([a,c,f])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let o=r*e,n=Math.cos(o),i=Math.sin(o),a=Math.max(1,r*4),c=Math.PI*2/a;for(let f=0;f<a;f++){let l=f*c,h=i*Math.sin(l),m=i*Math.cos(l);s.push({x:h,y:n,z:m}),r<t&&s.push({x:h,y:-n,z:m})}a+=4}return s}};var Re=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:o,faceVertVs:n}=s,i=[],a=[],c=[],f=t.materials.materials;for(let l=0;l<f.length;l++){let h=f[l],m=0,u=1,x=1;if(h.map||h.normalMap||h.roughnessMap||h.metalnessMap||h.emissiveMap){let p=t.voxels.size[0],V=t.voxels.size[1],v=t.voxels.size[2];h.mapTransform.uscale===-1&&(u=1/Math.max(p,V,v)),h.mapTransform.vscale===-1&&(x=1/Math.max(p,V,v)),(h.map&&h.map.cube||h.normalMap&&h.normalMap.cube||h.roughnessMap&&h.roughnessMap.cube||h.metalnessMap&&h.metalnessMap.cube||h.emissiveMap&&h.emissiveMap.cube)&&(m=1,u=u/4,x=x/2)}i.push(m),a.push(u),c.push(x)}for(let l=0,h=t.faceCount;l<h;l++){let m=e[l],u=i[m],x=a[m],p=c[m],V=_s[r[l]],v=l*4,F=o[v+V.order[0]],A=n[v+V.order[0]],d=o[v+V.order[1]],_=n[v+V.order[1]],I=o[v+V.order[2]],g=n[v+V.order[2]],M=o[v+V.order[3]],z=n[v+V.order[3]],C=v+V.order[0],y=v+V.order[1],b=v+V.order[2],Y=v+V.order[3],Z=u*V.uo,B=u*V.vo,E=V.ud*x,X=V.vd*p;o[C]=Z+(F+1e-4)*E,n[C]=B+(A+1e-4)*X,o[y]=Z+(d+1e-4)*E,n[y]=B+(_+.9999)*X,o[b]=Z+(I+.9999)*E,n[b]=B+(g+.9999)*X,o[Y]=Z+(M+.9999)*E,n[Y]=B+(z+1e-4)*X}}};var Ue=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:o,vertColorCount:n,faceVertColorR:i,faceVertColorG:a,faceVertColorB:c,faceVertLightR:f,faceVertLightG:l,faceVertLightB:h,faceVertIndices:m,faceMaterials:u,faceVertAO:x}=s,p=t.materials.materials,V=!!t.materials.find(d=>d.fade),v=Array(p.length).fill(!1);for(let d=0,_=p.length;d<_;d++)V&&p[d].fade&&(v[d]=!0);for(let d=0,_=t.faceCount;d<_;d++)if(v[u[d]])for(let g=0;g<4;g++){let M=0,z=0,C=0,y=0,b=d*4+g,Y=m[b],Z=n[Y];for(let E=0;E<Z;E++){let X=Y*6+E;M+=e[X],z+=r[X],C+=o[X],y++}let B=1/y;i[b]=M*B,a[b]=z*B,c[b]=C*B}let F=t.ao||t.materials.find(function(d){return d.ao}),A=t.lights.length>0;if(F&&A)for(let d=0,_=t.faceCount;d<_;d++){let g=p[u[d]].ao||t.ao,M=g?g.color:null;for(let z=0;z<4;z++){let C=d*4+z,y=i[C],b=a[C],Y=c[C],Z=M?M.r:y,B=M?M.g:b,E=M?M.b:Y,X=1-x[C];i[C]=y*f[C]*X+Z*(1-X),a[C]=b*l[C]*X+B*(1-X),c[C]=Y*h[C]*X+E*(1-X)}}else if(A&&!F)for(let d=0,_=t.faceCount;d<_;d++)for(let I=0;I<4;I++){let g=d*4+I;i[g]=i[g]*f[g],a[g]=a[g]*l[g],c[g]=c[g]*h[g]}else if(!A&&F)for(let d=0,_=t.faceCount;d<_;d++){let g=p[u[d]].ao||t.ao;if(!g)continue;let M=g.color;for(let z=0;z<4;z++){let C=d*4+z,y=i[C],b=a[C],Y=c[C],Z=M?M.r:y,B=M?M.g:b,E=M?M.b:Y,X=1-x[C];i[C]=X*y+Z*(1-X),a[C]=X*b+B*(1-X),c[C]=X*Y+E*(1-X)}}}};var je={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},De={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},ts={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},es={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},ke=class{static simplify(t,s){if(!t.simplify)return;let e=function(){je.filled=!1,De.filled=!1,ts.filled=!1,es.filled=!1},r=t.materials.materials,{faceCulled:o,faceNameIndices:n,vertX:i,vertY:a,vertZ:c,voxelXZYFaceIndices:f,voxelXYZFaceIndices:l,voxelYZXFaceIndices:h}=s;for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let x=f[m],p=x&(1<<28)-1;if(o.get(p))continue;let V=x/(1<<28),v=V>>16&255,F=V>>8&255,A=V&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,je,p,v,F,A,i,c,a,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,De,p,v,F,A,i,c,a,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,ts,p,v,F,A,i,c,a,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,es,p,v,F,A,i,c,a,0,1,2,3);break}}e();for(let m=l.length-t.faceCount,u=l.length;m<u;m++){let x=l[m],p=x&(1<<28)-1;if(o.get(p))continue;let V=x/(1<<28),v=V>>16&255,F=V>>8&255,A=V&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,je,p,v,F,A,i,a,c,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,De,p,v,F,A,i,a,c,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,ts,p,v,F,A,i,a,c,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,es,p,v,F,A,i,a,c,2,3,0,1);break}}e();for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let x=h[m],p=x&(1<<28)-1;if(o.get(p))continue;let V=x/(1<<28),v=V>>16&255,F=V>>8&255,A=V&255;switch(n[p]){case 2:this._mergeFaces(r,t,s,je,p,v,F,A,a,c,i,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,De,p,v,F,A,a,c,i,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,ts,p,v,F,A,a,c,i,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,es,p,v,F,A,a,c,i,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,o,n,i,a,c,f,l,h,m,u,x){let{faceCulled:p,faceMaterials:V,vertX:v,vertY:F,vertZ:A,faceVertIndices:d,faceVertNormalX:_,faceVertNormalY:I,faceVertNormalZ:g,faceVertColorR:M,faceVertColorG:z,faceVertColorB:C,faceVertUs:y,faceVertVs:b,faceVertFlatNormalX:Y,faceVertFlatNormalY:Z,faceVertFlatNormalZ:B,faceVertSmoothNormalX:E,faceVertSmoothNormalY:X,faceVertSmoothNormalZ:L,faceVertBothNormalX:$,faceVertBothNormalY:U,faceVertBothNormalZ:k}=e,S=V[o],R=t[S];if(r.filled&&r.lastVoxelAxis1===n&&r.lastVoxelAxis2===i&&(R.simplify===!0||R.simplify===null&&s.simplify===!0)&&p.get(o)===0){if(r.maxVoxelAxis3!==a-1){r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o;return}let O=o*4,H=r.lastFaceIndex,w=H*4;if(V[H]!==S)return;let P=_[O],W=I[O],G=g[O],D=_[O+1],rt=I[O+1],T=g[O+1],mt=_[O+2],ut=I[O+2],Nt=g[O+2],yt=_[O+3],it=I[O+3],Xt=g[O+3],Vt=_[w],Rt=I[w],wt=g[w],Ht=_[w+1],Qt=I[w+1],ae=g[w+1],At=_[w+2],zt=I[w+2],Ot=g[w+2],St=_[w+3],bt=I[w+3],Ut=g[w+3];if(!(this._normalEquals(P,W,G,Vt,Rt,wt)&&this._normalEquals(D,rt,T,Ht,Qt,ae)&&this._normalEquals(mt,ut,Nt,At,zt,Ot)&&this._normalEquals(yt,it,Xt,St,bt,Ut)))return;let vt=M[O],ct=z[O],ot=C[O],nt=M[O+1],at=z[O+1],Yt=C[O+1],qt=M[O+2],Kt=z[O+2],Dt=C[O+2],Zt=M[O+3],Tt=z[O+3],Bt=C[O+3],ie=M[w],ce=z[w],Mt=C[w],pt=M[w+1],ft=z[w+1],xt=C[w+1],Ft=M[w+2],q=z[w+2],J=C[w+2],Q=M[w+3],ht=z[w+3],_t=C[w+3];if(!(vt===ie&&ct===ce&&ot===Mt&&nt===pt&&at===ft&&Yt===xt&&qt===Ft&&Kt===q&&Dt===J&&Zt===Q&&Tt===ht&&Bt===_t))return;let xe=d[O+h],oe=d[O+m],Pt=d[O+u],te=d[O+x],Jt=v[xe],Wt=F[xe],le=A[xe],K=v[oe],j=F[oe],tt=A[oe],lt=d[w+h],Ct=d[w+m],ee=d[w+u],Ie=d[w+x],Ke=v[lt],Fe=F[lt],Ve=A[lt],ss=Math.sqrt((K-Jt)*(K-Jt)+(j-Wt)*(j-Wt)+(tt-le)*(tt-le)),Ne=Math.sqrt((K-Ke)*(K-Ke)+(j-Fe)*(j-Fe)+(tt-Ve)*(tt-Ve)),se=ss/Ne;return Math.abs(c[Ct]-(1-se)*c[oe]-se*c[lt])<=1e-4&&Math.abs(f[Ct]-(1-se)*f[oe]-se*f[lt])<=1e-4&&Math.abs(l[Ct]-(1-se)*l[oe]-se*l[lt])<=1e-4&&Math.abs(c[ee]-(1-se)*c[Pt]-se*c[Ie])<=1e-4&&Math.abs(f[ee]-(1-se)*f[Pt]-se*f[Ie])<=1e-4&&Math.abs(l[ee]-(1-se)*l[Pt]-se*l[Ie])<=1e-4?(d[w+m]=oe,d[w+u]=Pt,y[w+m]=y[O+m],b[w+m]=b[O+m],y[w+u]=y[O+u],b[w+u]=b[O+u],Y[w+m]=Y[O+m],Z[w+m]=Z[O+m],B[w+m]=B[O+m],Y[w+u]=Y[O+u],Z[w+u]=Z[O+u],B[w+u]=B[O+u],E[w+m]=E[O+m],X[w+m]=X[O+m],L[w+m]=L[O+m],E[w+u]=E[O+u],X[w+u]=X[O+u],L[w+u]=L[O+u],$[w+m]=$[O+m],U[w+m]=U[O+m],k[w+m]=k[O+m],$[w+u]=$[O+u],U[w+u]=U[O+u],k[w+u]=k[O+u],r.maxVoxelAxis3=a,p.set(o,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o,!1}static _normalEquals(t,s,e,r,o,n){return Math.abs(t-r)<.01&&Math.abs(s-o)<.01&&Math.abs(e-n)<.01}};var qe=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:o,vertX:n,vertY:i,vertZ:a,faceVertFlatNormalX:c,faceVertFlatNormalY:f,faceVertFlatNormalZ:l,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:V,faceVertUs:v,faceVertVs:F,faceVertColorR:A,faceVertColorG:d,faceVertColorB:_,faceVertNormalX:I,faceVertNormalY:g,faceVertNormalZ:M}=s;for(let z=0,C=t.faceCount;z<C;z++){if(r.get(z)===1)continue;let y=z*4,b=o[y],Y=o[y+1],Z=o[y+2],B=o[y+3],E=n[b],X=i[b],L=a[b],$=n[Y],U=i[Y],k=a[Y],S=n[Z],R=i[Z],O=a[Z],H=n[B],w=i[B],P=a[B],W=(E+S)/2,G=(X+R)/2,D=(L+O)/2,rt=($-W)*($-W)+(U-G)*(U-G)+(k-D)*(k-D),T=(H-W)*(H-W)+(w-G)*(w-G)+(P-D)*(P-D),mt=($+H)/2,ut=(U+w)/2,Nt=(k+P)/2,yt=(E-mt)*(E-mt)+(X-ut)*(X-ut)+(L-Nt)*(L-Nt),it=(S-mt)*(S-mt)+(R-ut)*(R-ut)+(O-Nt)*(O-Nt);if(rt<e||T<e)this._shiftFaceVertsAtOffset(y,o),this._shiftFaceVertsAtOffset(y,I),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,_);else if(!(yt<e||it<e)){let Xt=this._getVertexSumInline(E,X,L);for(;this._getVertexSumInline($,U,k)<Xt||this._getVertexSumInline(S,R,O)<Xt||this._getVertexSumInline(H,w,P)<Xt;){this._shiftFaceVertsAtOffset(y,o),this._shiftFaceVertsAtOffset(y,I),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,_);let Vt=E,Rt=X,wt=L;E=$,X=U,L=k,$=S,U=R,k=O,S=H,R=w,O=P,H=Vt,w=Rt,P=wt,Xt=this._getVertexSumInline(E,X,L)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var xs=(N,t)=>N-t,$e=class{set origin(t){this._origin=et.parse(t)}get origin(){return et.toString(this._origin)}set flatten(t){this._flatten=et.parse(t)}get flatten(){return et.toString(this._flatten)}set clamp(t){this._clamp=et.parse(t)}get clamp(){return et.toString(this._clamp)}set skip(t){this._skip=et.parse(t)}get skip(){return et.toString(this._skip)}set tile(t){this._tile=et.parse(t||" "),this._tile.x&&(this._tile=et.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=et.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=et.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return et.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=et.parse(t)}get aoSides(){return et.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new Xe,this.voxColorToColorId=new Map,this.voxels=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=et.parse("x y z"),this._flatten=et.parse(""),this._clamp=et.parse(""),this._skip=et.parse(""),this._tile=et.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=et.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:o}=t,{voxels:n}=this,i=pe.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let{maxFaces:a}=t,c=i>0,[f,l,h,m,u,x]=Et(n.size),p=this.materials.materials,V=Lt(n.size[0]),v=Lt(n.size[1]),F=Lt(n.size[2]);for(let A=f;A<=l;A++)for(let d=h;d<=m;d++)for(let _=u;_<=x;_++){let I=n.getPaletteIndexAt(A,d,_);if(I===0)continue;let g=A+V,M=d+v,z=_+F,C=g<<16,y=z<<8,b=(C|y|M)*(1<<28),Y=(C|M<<8|z)*(1<<28),Z=(M<<16|y|g)*(1<<28);for(let B=0,E=As.length;B<E;B++){let X=Ms[B],L,$=A+X[0],U=d+X[1],k=_+X[2];if($<f||$>l||U<h||U>m||k<u||k>x?L=0:L=n.getPaletteIndexAt($,U,k),this._createFace(n,t,p,A,d,_,V,v,F,I,L,B,c,s)){let R=this.faceCount-1;if(this.faceCount>=a)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[R]=b+R,r[R]=Y+R,o[R]=Z+R}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=o.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(xs),t.voxelXYZFaceIndices.sort(xs),t.voxelYZXFaceIndices.sort(xs),Me.fixClampedLinks(this,t),pe.changeShape(this,t,this._shape),pe.deform(this,t,i),pe.warpAndScatter(this,t),Ee.calculateNormals(this,t),Be.transformVertices(this,t),Pe.calculateLights(this,t),Le.calculateAmbientOcclusion(this,t),Ue.combineColors(this,t),Re.assignUVs(this,t),ke.simplify(this,t),qe.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},r,o,n,i,a,c,{vertX:f,vertY:l,vertZ:h}=s;if(t===we||t===fe){r=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=Number.NEGATIVE_INFINITY;for(let p=0,V=this.vertCount;p<V;p++){let v=f[p],F=l[p],A=h[p];v<r&&(r=v),F<o&&(o=F),A<n&&(n=A),v>i&&(i=v),F>a&&(a=F),A>c&&(c=A)}if(t===fe){let[p,V,v,F,A,d]=Et(this.voxels.size),_=(V-p+1)/(V-p),I=(F-v+1)/(F-v),g=(d-A+1)/(d-A);e.rescale=Math.min(_,I,g)}}t||(r=this.bounds.minX,i=this.bounds.maxX+1,o=this.bounds.minY,a=this.bounds.maxY+1,n=this.bounds.minZ,c=this.bounds.maxZ+1);let m=-(r+i)/2,u=-(o+a)/2,x=-(n+c)/2;return this._origin.nx&&(m=-r),this._origin.px&&(m=-i),this._origin.ny&&(u=-o),this._origin.py&&(u=-a),this._origin.nz&&(x=-n),this._origin.pz&&(x=-c),e.bounds={minX:r,minY:o,minZ:n,maxX:i,maxY:a,maxZ:c},e.offset={x:m,y:u,z:x},e}_createFace(t,s,e,r,o,n,i,a,c,f,l,h,m,u){let x=t.colorForPaletteIndex(f),p=(x&4278190080)>>24,V=e[p];if(V.opacity===0)return!1;if(l!==0){let G=(t.colorForPaletteIndex(l)&4278190080)>>24;if(!e[G].isTransparent&&!V.wireframe)return!1;if(!(!V.isTransparent&&!V.wireframe)){if(!(V.isTransparent&&!V.wireframe&&l!==0&&e[(t.colorForPaletteIndex(l)&4278190080)>>24].wireframe))return!1}}let v=this._isFacePlanar(V,r,o,n,h,V._flatten,this._flatten),F=this._isFacePlanar(V,r,o,n,h,V._clamp,this._clamp);if(this._isFacePlanar(V,r,o,n,h,V._skip,this._skip))return!1;let{faceVertIndices:d,faceVertColorR:_,faceVertColorG:I,faceVertColorB:g,faceFlattened:M,faceClamped:z,faceSmooth:C,faceCulled:y,faceMaterials:b,faceNameIndices:Y,faceVertUs:Z,faceVertVs:B}=s,{faceCount:E}=this,X=E*4,L=(x&255)/255,$=((x&65280)>>8)/255,U=((x&16711680)>>16)/255;d[X]=this._createVertex(s,V,r,o,n,L,$,U,i,a,c,h,0,v,F,u),d[X+1]=this._createVertex(s,V,r,o,n,L,$,U,i,a,c,h,1,v,F,u),d[X+2]=this._createVertex(s,V,r,o,n,L,$,U,i,a,c,h,2,v,F,u),d[X+3]=this._createVertex(s,V,r,o,n,L,$,U,i,a,c,h,3,v,F,u);for(let G=0;G<4;G++)_[X+G]=L,I[X+G]=$,g[X+G]=U;M.set(E,v?1:0),z.set(E,F?1:0),C.set(E,0),y.set(E,0),b[E]=p,Y[E]=h;let k=Cs[h],S=k[0],R=k[1],O=r+i,H=o+a,w=n+c,P=O*S[0]+H*S[1]+w*S[2],W=O*R[0]+H*R[1]+w*R[2];for(let G=0;G<4;G++)Z[X+G]=P,B[X+G]=W;return m&&Me.linkVertices(this,s,E),this.faceCount++,!0}_createVertex(t,s,e,r,o,n,i,a,c,f,l,h,m,u,x,p){let V=ys[h][m],v=e+V[0],F=r+V[1],A=o+V[2],d=v+c<<20|F+f<<10|A+l,{_clamp:_,_flatten:I}=this,{vertDeformCount:g,vertDeformDamping:M,vertDeformStrength:z,vertWarpAmplitude:C,vertWarpFrequency:y,vertScatter:b,vertX:Y,vertY:Z,vertZ:B,vertLinkCounts:E,vertFullyClamped:X,vertRing:L,vertClampedX:$,vertClampedY:U,vertClampedZ:k,vertColorR:S,vertColorG:R,vertColorB:O,vertColorCount:H,vertFlattenedX:w,vertFlattenedY:P,vertFlattenedZ:W}=t,{deform:G,warp:D,scatter:rt}=s,T;if(p.has(d)?(T=p.get(d),G?g[T]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,T)&&(z[T]=G.strength,M[T]=G.damping,g[T]=G.count):(g[T]=0,M[T]=0,z[T]=0),D?C[T]!==0&&(D.amplitude<C[T]||D.amplitude===C[T]&&D.frequency>y[T])&&(C[T]=D.amplitude,y[T]=D.frequency):(C[T]=0,y[T]=0),rt?b[T]!==0&&Math.abs(rt)<Math.abs(b[T])&&(b[T]=rt):b[T]=0):(T=this.vertCount,p.set(d,T),Y[T]=v,Z[T]=F,B[T]=A,G?(M[T]=G.damping,g[T]=G.count,z[T]=G.strength,E[T]=0,X.set(T,0)):g[T]=0,D?(C[T]=D.amplitude,y[T]=D.frequency):C[T]=0,rt?b[T]=rt:b[T]=0,H[T]=0,L[T]=0,$.set(T,0),U.set(T,0),k.set(T,0),w.set(T,0),P.set(T,0),W.set(T,0)),this._setIsVertexPlanar(s,v,F,A,s._flatten,I,w,P,W,T),this._setIsVertexPlanar(s,v,F,A,s._clamp,_,$,U,k,T),s.fade){let mt=H[T],ut=T*6;S[ut+mt]=n,R[ut+mt]=i,O[ut+mt]=a,H[T]++}return this.vertCount++,T}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:o}=t,n=e[s],i=o[s],a=r[s];return n===1?a*(i+1):a*(1-Math.pow(n,i+1))/(1-n)}_isFacePlanar(t,s,e,r,o,n,i){let a=n,c=t.bounds;if(a||(a=i,c=this.bounds),!a)return!1;switch(o){case 0:return a.x||a.nx&&s===c.minX;case 1:return a.x||a.px&&s===c.maxX;case 2:return a.y||a.ny&&e===c.minY;case 3:return a.y||a.py&&e===c.maxY;case 4:return a.z||a.nz&&r===c.minZ;case 5:return a.z||a.pz&&r===c.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,o,n,i,a,c,f){let l=o,h=t.bounds;l||(l=n,h=this.bounds),l?(i.set(f,l.x||l.nx&&s<h.minX+.5||l.px&&s>h.maxX+.5?1:i.get(f)|0),a.set(f,l.y||l.ny&&e<h.minY+.5||l.py&&e>h.maxY+.5?1:a.get(f)|0),c.set(f,l.z||l.nz&&r<h.minZ+.5||l.pz&&r>h.maxZ+.5?1:c.get(f)|0)):(i.set(f,i.get(f)|0),a.set(f,a.get(f)|0),c.set(f,c.get(f)|0))}};var Ge=class{constructor(t,s,e,r,o,n,i){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=o,this.size=n,this.detail=i}};var Ss={linecontinuation:/_\\s*[\\r\\n]/gm,modelparts:new RegExp(/\\s*(\\/\\/(.*?)\\r?\\n)/.source+"|"+/\\s*(texture|light|model|material|voxels)\\s+/.source+"|"+/\\s*([^=,\\r\\n]+=\\s*data:image.*?base64,.*$)\\s*/.source+"|"+/\\s*([^=,\\r\\n]+=[^\\r\\n=;,/]+)\\s*/.source+"|"+/\\s*([A-Za-z ()\\d -]+)\\s*/.source,"gm")},Ts=["size","materials","textures","lights","voxels"],Bs=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Ps=["color"],Ls=["direction","position","distance","size","detail"],Rs=["id","image"],Us=["cube"],ks=["colors"],qs=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],Ce=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,r=null;return Array.from(t.replaceAll(Ss.linecontinuation," ").matchAll(Ss.modelparts),n=>n[0].trim()).filter(n=>n).forEach(function(n){if(!n.startsWith("//"))if(n==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(n==="light")e={color:"#FFF"},s.lights.push(e);else if(n==="model")e=s;else if(n==="material")e={},s.materials.push(e);else if(n==="voxels")e=s,r="";else if(r!==null)r+=n.replace(/\\s/g,"");else{let i=n.indexOf("=");if(i===-1)throw new Error(`SyntaxError: Invalid definition \'${n}\'.`);let a=n.substring(0,i).trim().toLowerCase(),c=n.substring(i+1).trim();e[a]=c}},this),s.voxels=r,s}static _createModel(t){let s=new $e;s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===we?s.resize=we:t.resize===fe?s.resize=fe:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=fe),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(n=>n.size)&&s.materials.createMaterial(We,Je,1,0,!1,!1,1,0,!1,1,!1,jt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0);for(let n of t.lights)this._createLight(s,n);for(let n of t.textures)this._createTexture(s,n);let e=new Map,r=new Map,o=new Set;for(let n of t.materials)this._createMaterial(s,n,e,r,o);return this._resolveShellColors(s.shell,s,e,r),s.materials.forEach(function(n){this._resolveShellColors(n.shell,s,e,r)},this),this._createVoxels(s,t.voxels,e,r),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=kt.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new Ge(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s,e,r,o){let n=Je;s.lighting===ye&&(n=ye),s.lighting===he&&(n=he),s.lighting===me&&(n=me),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let i=null;t.simplify&&s.simplify==="false"&&(i=!1),!t.simplify&&s.simplify==="true"&&(i=!0);let a=t.materials.createMaterial(s.type||Ae,n,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,i,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0)),c=t.materials.materials.indexOf(a);s.deform&&a.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&a.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(a.scatter=parseFloat(s.scatter)),a.flatten=s.flatten,a.clamp=s.clamp,a.skip=s.skip,a.setAo(this._parseAo(s.ao)),a.shell=this._parseShell(s.shell),a.lights=s.lights!=="false",a.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,a.data);let f=/\\s*\\(\\s*(\\d+)\\s*\\)\\s*/g,l=/([A-Z][a-z]*)\\s*(\\(\\d+\\))?[:]\\s*(#[a-fA-F0-9]*)\\s*/g;s.colors=s.colors.replace(f,"($1)"),s.colors=s.colors.replace(l,"$1$2:$3 ");let h=s.colors.split(" ").filter(u=>u),{voxColorToColorId:m}=t;h.forEach(function(u){let x=u.split(":")[0];x.includes("(")&&(x=x.split("(")[0]);let p=u.split(":")[1];if(o.has(x))throw new Error(`SyntaxError: Duplicate ID \'${x}\'`);if(!e.has(x)){let V=ms(p);if(!/^[A-Z][a-z]*$/.test(x))throw new Error(`SyntaxError: Invalid color ID \'${x}\'`);e.set(x,V),r.set(x,c),o.add(x),m.set((V|c<<24)>>>0,x)}},this)}static _createVoxels(t,s,e,r){let o=null,n=[];if(s.matchAll)n=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let _=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,I;for(;(I=_.exec(s))!==null;)n.push(I);n=n[Symbol.iterator]()}let i=this._unpackRle(n),a=t.size.x*t.size.y*t.size.z,c=0,f=e.size,l=1;f>=2&&(l=2),f>=4&&(l=4),f>=16&&(l=8);let h=t.voxels=new Gt([t.size.x,t.size.y,t.size.z],l);for(let _=0;_<i.length;_++)c+=i[_][1];if(c!==a)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${a} voxels) but the voxel matrix contains ${c} voxels.`);let m={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new ge;let u=null,x=null,p=t.bounds,V=t.size,v=Lt(V.x),F=Lt(V.y),A=Lt(V.z),d=t.materials.materials;for(let _=0,I=i.length;_<I;_++){let g=null,M=i[_],z=M[0];z!=="-"&&(g=z,e.has(g)||(o===null&&(o=t.materials.createMaterial(Ae,Je,.5,0,!1,1,!1)),u=t.materials.materials.indexOf(o),e.set(g,ms("#FF00FF")),r.set(g,u)),u=r.get(g),x=d[u].bounds);let C=M[1];if(e.has(g)){let y=e.get(g);this._setVoxels(p,x,u,v,F,A,y,C,m,h)}else this._advanceContext(C,v,F,A,m)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=kt.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),o=parseFloat(t.split(" ")[2]||1),n=parseFloat(t.split(" ")[3]||70);n=Math.max(0,Math.min(90,Math.round(n))),s={color:e,maxDistance:r,strength:o,angle:n}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let o=0;o<r.length/2;o++){let n=r[o*2+0],i=r[o*2+1];if(!/^[A-Z][a-z]*$/.test(n)||!/^([-+]?[0-9]*\\.?[0-9]+)*$/.test(i)){e=!0;break}else s.push({colorId:r[o*2],distance:r[o*2+1]})}}if(e)throw new Error(`SyntaxError: shell \'${t}\' must be \'none\' or one or more color ID\'s and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,o){return r.distance-o.distance})),s}static _resolveShellColors(t,s,e,r){!t||t.length===0||t.forEach(function(o){if(!e.has(o.colorId))throw new Error(`SyntaxError: shell color ID \'${o.colorId}\' is not a known color`);o.voxBgr=e.get(o.colorId),o.materialIndex=r.get(o.colorId)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\\s+/),o=null;for(let i=0;i<r.length;i++){let a=r[i];if(isNaN(a))o={name:a,values:[]},e.push(o);else if(o)o.values.push(parseFloat(a));else break}let n=e.length===0;for(let i=0;i<e.length;i++)n=n||e[i].values.length===0||e[i].values.length>=4;if(n)throw new Error(`SyntaxError: The data property \'${e.data}\' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch(r){e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let o=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(o.x),y:Math.trunc(o.y),z:Math.trunc(o.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let o=s.split(/[\\s/]+/);if(o.length===1&&r&&(o.push(o[0]),o.push(o[0])),o.length!==3)throw new Error(`SyntaxError: \'${t}\' must have three values.`);if(o={x:parseFloat(o[0]),y:parseFloat(o[1]),z:parseFloat(o[2])},Number.isNaN(o.x)||Number.isNaN(o.y)||Number.isNaN(o.z))throw new Error(`SyntaxError: Invalid value \'${s}\' for ${t}\'.`);return o}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let o=r.value[0],n=o[0],i=o[1];if(n>="0"&&n<="9")e=parseInt(o,10);else if(o==="("){let a=this._unpackRle(t);for(let c=0;c<e;c++)Array.prototype.push.apply(s,a);e=1}else{if(o===")")return s;o.length>1&&n>="A"&&n<="Z"&&i===n?(e>1?(s.push([n,e]),s.push([n,o.length-1])):s.push([n,o.length]),e=1):o.length>1&&n==="-"&&i==="-"?(e>1?(s.push(["-",e]),s.push(["-",o.length-1])):s.push(["-",o.length]),e=1):(s.push([o,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,o,n,i,a,c,f){let{x:l,y:h,z:m,maxx:u,maxy:x,minx:p,miny:V}=c;l-=r,h-=o,m-=n,p-=r,V-=o,u-=r,x-=o;let v=(i|e<<24)>>>0;for(;a-- >0;)t.set(l,h,m),s.set(l,h,m),f.setColorAt(l,h,m,v),l++,l>u&&(l=p,h++),h>x&&(h=V,m++);c.x=l+r,c.y=h+o,c.z=m+n}static _advanceContext(t,s,e,r,o){let{x:n,y:i,z:a,maxx:c,maxy:f,minx:l,miny:h}=o;for(n-=s,i-=e,a-=r,l-=s,h-=e,c-=s,f-=e;t-- >0;)n++,n>c&&(n=l,i++),i>f&&(i=h,a++);o.x=n+s,o.y=i+e,o.z=a+r}static _validateModel(t){this._validateProperties(t,Ts,Bs,"model");for(let s of t.lights)this._validateLight(s);for(let s of t.textures)this._validateTexture(s);for(let s of t.materials)this._validateMaterial(s)}static _validateLight(t){if(this._validateProperties(t,Ps,Ls,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,Rs,Us,"texture")}static _validateMaterial(t){this._validateProperties(t,ks,qs,"material")}static _validateProperties(t,s,e,r){for(let o of s)if(!Object.hasOwn(t,o))throw new Error("SyntaxError: "+r+\' is missing mandatory property "\'+o+\'".\');for(let o in t)if(!s.includes(o)&&!e.includes(o))throw new Error("SyntaxError: "+r+\' has unrecognized property "\'+o+\'".\')}};var dt=new Map,ne=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r=ne._getAllShells(t),o=r.map(i=>i.length).reduce((i,a)=>Math.max(i,a),0)+1,n={materials:[],groups:[],indices:new Uint32Array(e*4*6*o),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3*o),normals:new Float32Array(e*4*3*o),colors:new Float32Array(e*4*3*o),uvs:new Float32Array(e*4*2*o),data:null};return t.materials.baseMaterials.forEach(function(i){i.index=n.materials.length,n.materials.push(ne._generateMaterial(i,t))},this),dt.clear(),ne._generateAll(t,n,s,r),n}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===ue?ue:jt};return t.type!==Qe&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e,r){let o=t.materials.materials,{faceMaterials:n,faceCulled:i}=e,a=t.scale.x,c=t.scale.y,f=t.scale.z;t.materials.baseMaterials.forEach(function(h){let m=s.indicesIndex,u=!1;for(let x=0,p=t.faceCount;x<p;x++){if(i.get(x)!==0)continue;let V=n[x],v=o[V];v._baseMaterial===h&&(ne._generateFace(t,e,x,s),u||(u=!0));for(let F=0,A=r.length;F<A;F++){let[d,_,I,g,M,z]=r[F];_._baseMaterial===h&&d===v&&(ne._generateShellFace(t,e,x,s,I*a,I*c,I*f,g,M,z,_,a,c,f),u||(u=!0))}}if(u){let x=s.indicesIndex;s.groups.push({start:m,count:x-m,materialIndex:h.index})}},this);let l=s.maxIndex+1;s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,l*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,l*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,l*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,l*2)}static _generateFace(t,s,e,r){let{faceVertIndices:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,vertX:c,vertY:f,vertZ:l,faceVertColorR:h,faceVertColorG:m,faceVertColorB:u,faceVertUs:x,faceVertVs:p,faceMaterials:V,faceSmooth:v}=s,A=t.materials.materials[V[e]],d=o[e*4],_=o[e*4+1],I=o[e*4+2],g=o[e*4+3],M=c[d],z=f[d],C=l[d],y=c[_],b=f[_],Y=l[_],Z=c[I],B=f[I],E=l[I],X=c[g],L=f[g],$=l[g],U=n[e*4],k=i[e*4],S=a[e*4],R=n[e*4+1],O=i[e*4+1],H=a[e*4+1],w=n[e*4+2],P=i[e*4+2],W=a[e*4+2],G=n[e*4+3],D=i[e*4+3],rt=a[e*4+3],T=h[e*4],mt=m[e*4],ut=u[e*4],Nt=h[e*4+1],yt=m[e*4+1],it=u[e*4+1],Xt=h[e*4+2],Vt=m[e*4+2],Rt=u[e*4+2],wt=h[e*4+3],Ht=m[e*4+3],Qt=u[e*4+3],ae=x[e*4],At=p[e*4],zt=x[e*4+1],Ot=p[e*4+1],St=x[e*4+2],bt=p[e*4+2],Ut=x[e*4+3],gt=p[e*4+3];if(A.side===de){let q,J,Q;q=M,J=z,Q=C,M=Z,z=B,C=E,Z=q,B=J,E=Q,q=U,J=k,Q=S,U=w,k=P,S=W,w=q,P=J,W=Q,q=T,J=mt,Q=ut,T=Xt,mt=Vt,ut=Rt,Xt=q,Vt=J,Rt=Q,q=ae,J=At,ae=St,At=bt,St=q,bt=J}let vt=v.get(e)===1;if(!(A.lighting===he||A.lighting===me&&vt)){let q=w+R+U,J=P+O+k,Q=W+H+S,ht=U+G+w,_t=k+D+P,re=S+rt+W,xe=Math.sqrt(q*q+J*J+Q*Q),oe=Math.sqrt(ht*ht+_t*_t+re*re),Pt=1/xe,te=1/oe;if(q*=Pt,J*=Pt,Q*=Pt,ht*=te,_t*=te,re*=te,A.lighting===ye){let Jt=Math.sqrt(q*q+J*J+Q*Q)+Math.sqrt(ht*ht+_t*_t+re*re),Wt=1/Jt;q=ht=(q+ht)*Wt,J=_t=(J+_t)*Wt,Q=re=(Q+re)*Wt}U=q,k=J,S=Q,R=q,O=J,H=Q,w=q,P=J,W=Q,G=ht,D=_t,rt=re}let ct=r.indices,ot=r.positions,nt=r.normals,at=r.colors,Yt=r.uvs,qt=M*3+z*61673+C*87119+U*2766691+k*73091+S*5040949+T*8636137+mt*2360719+ut*4739729+Math.round(ae*1e3)*719959+Math.round(At*1e3)*172741,Kt=y*3+b*61673+Y*87119+R*2766691+O*73091+H*5040949+Nt*8636137+yt*2360719+it*4739729+Math.round(zt*1e3)*719959+Math.round(Ot*1e3)*172741,Dt=Z*3+B*61673+E*87119+w*2766691+P*73091+W*5040949+Xt*8636137+Vt*2360719+Rt*4739729+Math.round(St*1e3)*719959+Math.round(bt*1e3)*172741,Zt=X*3+L*61673+$*87119+G*2766691+D*73091+rt*5040949+wt*8636137+Ht*2360719+Qt*4739729+Math.round(Ut*1e3)*719959+Math.round(gt*1e3)*172741,Tt=dt.has(qt),Bt=dt.has(Kt),ie=dt.has(Dt),ce=dt.has(Zt),Mt,pt,ft,xt;if(Tt)Mt=dt.get(qt);else{Mt=r.maxIndex+1;let q=Mt*3,J=q+1,Q=q+2,ht=Mt*2,_t=ht+1;r.maxIndex=Mt,ot[q]=M,ot[J]=z,ot[Q]=C,nt[q]=U,nt[J]=k,nt[Q]=S,at[q]=T,at[J]=mt,at[Q]=ut,Yt[ht]=ae,Yt[_t]=At,dt.set(qt,Mt)}if(Bt)pt=dt.get(Kt);else{pt=r.maxIndex+1;let q=pt*3,J=q+1,Q=q+2,ht=pt*2,_t=ht+1;r.maxIndex=pt,ot[q]=y,ot[J]=b,ot[Q]=Y,nt[q]=R,nt[J]=O,nt[Q]=H,at[q]=Nt,at[J]=yt,at[Q]=it,Yt[ht]=zt,Yt[_t]=Ot,dt.set(Kt,pt)}if(ie)ft=dt.get(Dt);else{ft=r.maxIndex+1;let q=ft*3,J=q+1,Q=q+2,ht=ft*2,_t=ht+1;r.maxIndex=ft,ot[q]=Z,ot[J]=B,ot[Q]=E,nt[q]=w,nt[J]=P,nt[Q]=W,at[q]=Xt,at[J]=Vt,at[Q]=Rt,Yt[ht]=St,Yt[_t]=bt,dt.set(Dt,ft)}if(ce)xt=dt.get(Zt);else{xt=r.maxIndex+1;let q=xt*3,J=q+1,Q=q+2,ht=xt*2,_t=ht+1;r.maxIndex=xt,ot[q]=X,ot[J]=L,ot[Q]=$,nt[q]=G,nt[J]=D,nt[Q]=rt,at[q]=wt,at[J]=Ht,at[Q]=Qt,Yt[ht]=Ut,Yt[_t]=gt,dt.set(Zt,xt)}let Ft=r.indicesIndex;ct[Ft]=ft,ct[Ft+1]=pt,ct[Ft+2]=Mt,ct[Ft+3]=Mt,ct[Ft+4]=xt,ct[Ft+5]=ft,r.indicesIndex+=6}static _generateShellFace(t,s,e,r,o,n,i,a,c,f,l){let{faceVertIndices:h,faceVertBothNormalX:m,faceVertBothNormalY:u,faceVertBothNormalZ:x,faceVertSmoothNormalX:p,faceVertSmoothNormalY:V,faceVertSmoothNormalZ:v,faceVertFlatNormalX:F,faceVertFlatNormalY:A,faceVertFlatNormalZ:d,faceVertNormalX:_,faceVertNormalY:I,faceVertNormalZ:g,vertX:M,vertY:z,vertZ:C,faceVertColorR:y,faceVertColorG:b,faceVertColorB:Y,faceVertUs:Z,faceVertVs:B,faceSmooth:E}=s,X=h[e*4],L=h[e*4+1],$=h[e*4+2],U=h[e*4+3],k=M[X],S=z[X],R=C[X],O=M[L],H=z[L],w=C[L],P=M[$],W=z[$],G=C[$],D=M[U],rt=z[U],T=C[U],mt=p[e*4],ut=V[e*4],Nt=v[e*4],yt=p[e*4+1],it=V[e*4+1],Xt=v[e*4+1],Vt=p[e*4+2],Rt=V[e*4+2],wt=v[e*4+2],Ht=p[e*4+3],Qt=V[e*4+3],ae=v[e*4+3],At,zt,Ot,St,bt,Ut,gt,vt,ct,ot,nt,at,Yt=E.get(e)===1;switch(l.lighting){case he:At=p[e*4],zt=V[e*4],Ot=v[e*4],St=p[e*4+1],bt=V[e*4+1],Ut=v[e*4+1],gt=p[e*4+2],vt=V[e*4+2],ct=v[e*4+2],ot=p[e*4+3],nt=V[e*4+3],at=v[e*4+3];break;case me:Yt?(At=m[e*4],zt=u[e*4],Ot=x[e*4],St=m[e*4+1],bt=u[e*4+1],Ut=x[e*4+1],gt=m[e*4+2],vt=u[e*4+2],ct=x[e*4+2],ot=m[e*4+3],nt=u[e*4+3],at=x[e*4+3]):(At=F[e*4],zt=A[e*4],Ot=d[e*4],St=F[e*4+1],bt=A[e*4+1],Ut=d[e*4+1],gt=F[e*4+2],vt=A[e*4+2],ct=d[e*4+2],ot=F[e*4+3],nt=A[e*4+3],at=d[e*4+3]);break;default:At=F[e*4],zt=A[e*4],Ot=d[e*4],St=F[e*4+1],bt=A[e*4+1],Ut=d[e*4+1],gt=F[e*4+2],vt=A[e*4+2],ct=d[e*4+2],ot=F[e*4+3],nt=A[e*4+3],at=d[e*4+3];break}let qt=Z[e*4],Kt=B[e*4],Dt=Z[e*4+1],Zt=B[e*4+1],Tt=Z[e*4+2],Bt=B[e*4+2],ie=Z[e*4+3],ce=B[e*4+3];if(l.side===de){let K,j,tt;K=k,j=S,tt=R,k=P,S=W,R=G,P=K,W=j,G=tt,K=At,j=zt,tt=Ot,At=gt,zt=vt,Ot=ct,gt=K,vt=j,ct=tt,K=qt,j=Kt,qt=Tt,Kt=Bt,Tt=K,Bt=j,K=mt,j=ut,tt=Nt,mt=Vt,ut=Rt,Nt=wt,Vt=K,Rt=j,wt=tt}if(k+=o*mt,S+=n*ut,R+=i*Nt,O+=o*yt,H+=n*it,w+=i*Xt,P+=o*Vt,W+=n*Rt,G+=i*wt,D+=o*Ht,rt+=n*Qt,T+=i*ae,!(l.lighting===he||l.lighting===me&&Yt)){let K=gt+St+At,j=vt+bt+zt,tt=ct+Ut+Ot,lt=At+ot+gt,Ct=zt+nt+vt,ee=Ot+at+ct,Ie=Math.sqrt(K*K+j*j+tt*tt),Ke=Math.sqrt(lt*lt+Ct*Ct+ee*ee),Fe=1/Ie,Ve=1/Ke;if(K*=Fe,j*=Fe,tt*=Fe,lt*=Ve,Ct*=Ve,ee*=Ve,l.lighting===ye){let ss=Math.sqrt(K*K+j*j+tt*tt)+Math.sqrt(lt*lt+Ct*Ct+ee*ee),Ne=1/ss;K=lt=(K+lt)*Ne,j=Ct=(j+Ct)*Ne,tt=ee=(tt+ee)*Ne}At=K,zt=j,Ot=tt,St=K,bt=j,Ut=tt,gt=K,vt=j,ct=tt,ot=lt,nt=Ct,at=ee}let Mt=r.indices,pt=r.positions,ft=r.normals,xt=r.colors,Ft=r.uvs,q=k*3+S*61673+R*87119+At*2766691+zt*73091+Ot*5040949+a*8636137+c*2360719+f*4739729+Math.round(qt*1e3)*719959+Math.round(Kt*1e3)*172741,J=O*3+H*61673+w*87119+St*2766691+bt*73091+Ut*5040949+a*8636137+c*2360719+f*4739729+Math.round(Dt*1e3)*719959+Math.round(Zt*1e3)*172741,Q=P*3+W*61673+G*87119+gt*2766691+vt*73091+ct*5040949+a*8636137+c*2360719+f*4739729+Math.round(Tt*1e3)*719959+Math.round(Bt*1e3)*172741,ht=D*3+rt*61673+T*87119+ot*2766691+nt*73091+at*5040949+a*8636137+c*2360719+f*4739729+Math.round(ie*1e3)*719959+Math.round(ce*1e3)*172741,_t=dt.has(q),re=dt.has(J),xe=dt.has(Q),oe=dt.has(ht),Pt,te,Jt,Wt;if(_t)Pt=dt.get(q);else{Pt=r.maxIndex+1;let K=Pt*3,j=K+1,tt=K+2,lt=Pt*2,Ct=lt+1;r.maxIndex=Pt,pt[K]=k,pt[j]=S,pt[tt]=R,ft[K]=At,ft[j]=zt,ft[tt]=Ot,xt[K]=a,xt[j]=c,xt[tt]=f,Ft[lt]=qt,Ft[Ct]=Kt,dt.set(q,Pt)}if(re)te=dt.get(J);else{te=r.maxIndex+1;let K=te*3,j=K+1,tt=K+2,lt=te*2,Ct=lt+1;r.maxIndex=te,pt[K]=O,pt[j]=H,pt[tt]=w,ft[K]=St,ft[j]=bt,ft[tt]=Ut,xt[K]=a,xt[j]=c,xt[tt]=f,Ft[lt]=Dt,Ft[Ct]=Zt,dt.set(J,te)}if(xe)Jt=dt.get(Q);else{Jt=r.maxIndex+1;let K=Jt*3,j=K+1,tt=K+2,lt=Jt*2,Ct=lt+1;r.maxIndex=Jt,pt[K]=P,pt[j]=W,pt[tt]=G,ft[K]=gt,ft[j]=vt,ft[tt]=ct,xt[K]=a,xt[j]=c,xt[tt]=f,Ft[lt]=Tt,Ft[Ct]=Bt,dt.set(Q,Jt)}if(oe)Wt=dt.get(ht);else{Wt=r.maxIndex+1;let K=Wt*3,j=K+1,tt=K+2,lt=Wt*2,Ct=lt+1;r.maxIndex=Wt,pt[K]=D,pt[j]=rt,pt[tt]=T,ft[K]=ot,ft[j]=nt,ft[tt]=at,xt[K]=a,xt[j]=c,xt[tt]=f,Ft[lt]=ie,Ft[Ct]=ce,dt.set(ht,Wt)}let le=r.indicesIndex;Mt[le]=Jt,Mt[le+1]=te,Mt[le+2]=Pt,Mt[le+3]=Pt,Mt[le+4]=Wt,Mt[le+5]=Jt,r.indicesIndex+=6}static _getAllShells(t){let s=[];return t.materials.forEach(function(e){let r;t.shell&&t.shell.length>0&&!e.shell&&(r=t.shell),e.shell&&e.shell.length>0&&(r=e.shell),r&&r.forEach(function(o){let n=o.voxBgr,i=(n>>16&255)/255,a=(n>>8&255)/255,c=(n>>0&255)/255;s.push([e,t.materials.materials[o.materialIndex],o.distance,c,a,i])},this)},this),s.sort((e,r)=>e[1]-r[1]),s}};var He=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),o=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=It.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=It.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=It.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=It.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=It.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=It.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=It.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=It.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=It.create(new Uint8Array(r).buffer,1,0),this.faceClamped=It.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=It.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=It.create(new Uint8Array(r).buffer,1,0),this.faceCulled=It.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(o),this.faceVertNormalX=new Float32Array(o),this.faceVertNormalY=new Float32Array(o),this.faceVertNormalZ=new Float32Array(o),this.faceVertFlatNormalX=new Float32Array(o),this.faceVertFlatNormalY=new Float32Array(o),this.faceVertFlatNormalZ=new Float32Array(o),this.faceVertSmoothNormalX=new Float32Array(o),this.faceVertSmoothNormalY=new Float32Array(o),this.faceVertSmoothNormalZ=new Float32Array(o),this.faceVertBothNormalX=new Float32Array(o),this.faceVertBothNormalY=new Float32Array(o),this.faceVertBothNormalZ=new Float32Array(o),this.faceVertColorR=new Float32Array(o),this.faceVertColorG=new Float32Array(o),this.faceVertColorB=new Float32Array(o),this.faceVertLightR=new Float32Array(o),this.faceVertLightG=new Float32Array(o),this.faceVertLightB=new Float32Array(o),this.faceVertAO=new Float32Array(o),this.faceVertUs=new Float32Array(o),this.faceVertVs=new Float32Array(o),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var $s=new He(1024*768*2);onmessage=function(N){try{let t=Gs(N.data.svoxmodel);postMessage({svoxmesh:t,elementId:N.data.elementId,worker:N.data.worker},[t.positions.buffer,t.normals.buffer,t.colors.buffer,t.indices.buffer,t.uvs.buffer])}catch(t){console.error(t)}};function Gs(N){let t="model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",s="model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",e;(!N||N.trim()==="")&&(e={name:"ConfigError",message:"Model not found"},N=t);let r=null;try{r=Ce.readFromString(N)}catch(n){e=n,r=Ce.readFromString(s)}let o=ne.generate(r,$s);return o.error=e,o}\n')}var Ke=class{constructor(t,s){this._resultHandler=t,this._resultCallback=s,this._nrOfWorkers=window.navigator.hardwareConcurrency,this._workers=[],this._free=[],this._tasks=[]}executeTask(t){if(this._workers.length<this._nrOfWorkers){let s=new Fs,e=this;s.onmessage=function(a){e._free.push(event.data.worker),e._processNextTask(),e._resultCallback.apply(e._resultHandler,[event.data])},this._free.push(this._workers.length),this._workers.push(s)}this._tasks.push(t),this._processNextTask()}_processNextTask(){if(this._tasks.length>0&&this._free.length>0){let t=this._tasks.shift();t.worker=this._free.shift(),this._workers[t.worker].postMessage(t)}}};if(typeof window<"u"&&typeof AFRAME<"u"){let z=null;AFRAME.registerComponent("svox",{schema:{model:{type:"string"},worker:{type:"boolean",default:!1}},multiple:!1,_MISSING:"model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",_ERROR:"model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",_workerPool:null,init:function(){let t=this.el,s=this.data,e=s.worker,a=!1,r=s.model,o=window.SVOX.models[r];o||(this._logError({name:"ConfigError",message:"Model not found"}),o=this._MISSING,a=!0,e=!1),e?this._generateModelInWorker(o,t):this._generateModel(o,t,a)},_generateModel:function(t,s,e){let a;a=window.model=Ge.readFromString(t);let r=new We(1024*768*2),o=performance.now(),n=ie.generate(a,r),i=performance.now();this.mesh=Dt.generate(n);let l=`Time: ${Math.round(i-o)}ms. Verts:${n.maxIndex+1} Faces:${n.indices.length/3} Materials:${this.mesh.material.length}`,h=document.getElementById("svoxstats");h&&!e&&(h.innerHTML="Last render: "+l),s.setObject3D("mesh",this.mesh)},_generateModelInWorker:function(t,s){s.id||(s.id=new Date().valueOf().toString(36)+Math.random().toString(36).substr(2));let e={svoxmodel:t,elementId:s.id};z||(z=new Ke(this,this._processResult)),z.executeTask(e)},_processResult:function(t){if(t.svoxmesh.error)this._logError(t.svoxmesh.error);else{let s=Dt.generate(t.svoxmesh);document.querySelector("#"+t.elementId).setObject3D("mesh",s)}},_toSharedArrayBuffer(t){let s=new Float32Array(new ArrayBuffer(t.length*4));return s.set(t,0),s},_logError:function(t){let s=t.name+": "+t.message,e=document.getElementById("svoxerrors");e&&(e.innerHTML=s),console.error(`SVOXERROR (${this.data.model}) ${s}`)},update:function(t){},remove:function(){let t=["map","normalMap","roughnessMap","metalnessMap","emissiveMap","matcap"];if(this.mesh){for(;this.mesh.material.length>0;)t.forEach(function(s){this.mesh.material[0][s]&&this.mesh.material[0][s].dispose()},this),this.mesh.material[0].dispose(),this.mesh.material.shift();this.mesh.geometry.dispose(),this.el.removeObject3D("mesh"),delete this.mesh}},pause:function(){},play:function(){},events:{}})}
