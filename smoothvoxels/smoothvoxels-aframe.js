var tt=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\s+(?:none|-x|x|\+x|-y|y|\+y|-z|z|\+z|\s))+\s*$/.test(t))throw new Error(`SyntaxError: Planar expression '${t}' is only allowed to be 'none' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var Me="standard",He="basic",Ms="lambert",ys="phong",Fs="matcap",As="toon",Ge="normal",ts="bounds",me="model",_s="skip",We="flat",ye="quad",ne="smooth",le="both",Jt="front",de="back",ce="double",Vs=["nx","px","ny","py","nz","pz"],Cs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Is=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],bs=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],ws=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var es=(N,t,s)=>Math.min(Math.max(N,t),s),Ut=class{static fromHex(t){let s=new Ut;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(es(t,0,1)*255),s=Math.round(es(s,0,1)*255),e=Math.round(es(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return Ut.fromHex(r)}clone(){let t=new Ut;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof Ut?Ut.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):Ut.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((a,o)=>a+o.r,0),e=this.g+t.reduce((a,o)=>a+o.g,0),r=this.b+t.reduce((a,o)=>a+o.b,0);return Ut.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var Ce=class{constructor(t,s,e,r,a,o,n,i,l,f,c,m,h,u,d,p,v,M,y,F,x,C,V,g,_){switch(t=t||Me,t){case Me:case He:case Ms:case ys:case As:case Fs:case Ge:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(h&&h.cube||u&&u.cube||d&&d.cube||p&&p.cube||v&&v.cube)&&!(x===-1&&C===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(y&&F)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof a=="number"?a:0,this.transparent=!!o,this.refractionRatio=typeof n=="number"?n:.9,this.wireframe=!!i,this.side=l||Jt,[Jt,de,ce].includes(this.side)||(this.side=Jt),this.setEmissive(f,c),this.fog=typeof m=="boolean"?m:!0,this.map=h,this.normalMap=u,this.roughnessMap=d,this.metalnessMap=p,this.emissiveMap=v,this.matcap=M,this.reflectionMap=y,this.refractionMap=F,this.mapTransform={uscale:x||-1,vscale:C||-1,uoffset:V||0,voffset:g||0,rotation:_||0},this.aoActive=!1}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:Ut.fromHex(t),intensity:s}}get emissive(){return this._emissive}};var he=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var Ie=class{constructor(t,s,e,r,a){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._ao=void 0,this.lights=!0,this._side=a,this._colors=[],this.bounds=new he}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t??1,0),s=s??1,e=e??1,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}};var be=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,a,o,n,i,l,f,c,m,h,u,d,p,v,M,y,F,x,C,V,g,_,b,I,A){m=m||Jt,[Jt,de,ce].includes(m)||(m=Jt);let E=m===ce?ce:Jt,S=new Ce(t,e,r,n,i,l,f,c,E,h,u,d,p,v,M,y,F,x,C,V,g,_,b,I,A),T=S.baseId,Z=this.baseMaterials.find(z=>z.baseId===T);Z?S=Z:this.baseMaterials.push(S);let O=new Ie(S,s,a,o,m);return this.materials.push(O),O}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}getMaterialListIndex(t){return this.materials.indexOf(t)}};function we(N,t,s,e){let r=s*N;for(let a=0;a<s;){let o=r&7,n=r>>3,i=s-a,l=8-o,f=i<l?i:l,c=~(255<<f),m=t&c;t>>=f;let h=~(c<<o);e[n]=e[n]&h|m<<o,r+=f,a+=f}}var ss=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return we(t,s,1,this.view)}clear(){this.view.fill(0)}},rs=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return we(t,s,2,this.view)}clear(){this.view.fill(0)}},as=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return we(t,s,4,this.view)}clear(){this.view.fill(0)}},os=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return we(t,s,8,this.view)}clear(){this.view.fill(0)}},is=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,a=0;for(let o=0;o<e;){let n=r&7,i=r>>3,l=e-o,f=8-n,c=l<f?l:f,m=s[i],h=~(255<<c);a|=(m>>n&h)<<o,r+=c,o+=c}return a>>>0}set(t,s){we(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},wt=class{static create(t,s,e,r=null){let a=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new ss(a);case 2:return new rs(a);case 4:return new as(a);case 8:return new os(a);default:return new is(a)}}};var Zs=0,Fe=0,ns=128,ze=8;var Bs=255,zs=Bs<<24>>>0,ls={NONE:0,PAINT:1,KEEP:2},Gt=1,xe=new Map,Ft=N=>Math.floor(N%2===0?N/2-1:N/2),Xt=N=>{let[t,s,e]=N,r=Ft(t),a=Ft(s),o=Ft(e),n=t-r-1,i=s-a-1,l=e-o-1,f=-r,c=-a,m=-o;return[f,n,c,i,m,l]},Ne=1,Ns=Ne*4;function cs(N,t,s=null){let e=2**t-Gt,r=Ns*e,a=N[0]*N[1]*N[2]*t,o=Math.floor(a/8)+1,n=ze+r+o;s==null&&(typeof Buffer<"u"?s=Buffer.alloc(n).buffer:s=new ArrayBuffer(n));let i=new Uint8Array(s,0,ze),l=r/Ns,f=new Uint32Array(s,ze,l),c=wt.create(s,t,ze+r);return i[0]=Zs,[i[1],i[2],i[3]]=N,i[4]=t,[s,f,c]}var Wt=class{constructor(t=null,s=8,e=null,r=null,a=0,o=null,n=0,i=null){if(e&&r)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,o=o||e.length,i=i||r.length,this.palette=new Uint32Array(e,a||0,o/4),this.indices=wt.create(r,s,n,i),this.xShift=Ft(t[0]),this.yShift=Ft(t[1]),this.zShift=Ft(t[2]),this._rebuildRefCounts();else if(t){let[l,f,c]=cs(t,s);this.palette=f,this.indices=c,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(l)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,ze);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=Ft(this.size[0]),this.yShift=Ft(this.size[1]),this.zShift=Ft(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,a=this._getOffset(t,s,e);return r.get(a)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==Fe}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,Fe)}getVoxColorCounts(){let t=new Map;for(let s=0;s<this._refCounts.length;s+=1){let e=this._refCounts[s];if(e===0)continue;let r=this.colorForPaletteIndex(s+Gt);t.set(r,e)}return t}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-Gt)*Ne]}setPaletteColor(t,s){this.palette[(t-Gt)*Ne]=s}paletteHasReferences(t){return this._refCounts[t-Gt]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-Gt]=1}incrementPaletteRefcount(t){this._refCounts[t-Gt]+=1}decrementPaletteRefcount(t){this._refCounts[t-Gt]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let a=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(a,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);Wt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),Wt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let a=this._getOffset(t,s,e);return this.setColorAtOffset(a,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,a=this.getPaletteIndexAtOffset(t),o=Wt.isNonEmptyPaletteIndex(a);o&&this.decrementPaletteRefcount(a);for(let i=0;i<e.length;i+=1){let l=i+Gt;if(this.getPaletteColor(l)===s)return this.incrementPaletteRefcount(l),r.set(t,l),l}if(o&&!this.paletteHasReferences(a))return this.setPaletteColor(a,s),this.resetPaletteRefcountToOne(a),a;let n=this._getFreePaletteIndex();return this.setPaletteColor(n,s),this.resetPaletteRefcountToOne(n),this.indices.set(t,n),n}colorForPaletteIndex(t){return this.palette[(t-Gt)*Ne]}filterByVoxels(t,s,e,r,a){if(a===ls.NONE)return;let o=t.size,[n,i,l,f,c,m]=Xt(o),{size:h}=this,[u,d,p,v,M,y]=Xt(h);for(let F=u;F<=d;F+=1)for(let x=p;x<=v;x+=1)for(let C=M;C<=y;C+=1){if(this.getPaletteIndexAt(F,x,C)===0)continue;let g=F+s,_=x+e,b=C+r,A=!(g>i||g<n||_>f||_<l||b>m||b<c)&&t.hasVoxelAt(g,_,b);(a===ls.PAINT&&!A||a===ls.KEEP&&A)&&this.setEmptyAt(F,x,C)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let l=0;l<t.length;l+=1){let f=l+Gt;if(!this.paletteHasReferences(f))return f}let a=r*2,[o,n,i]=cs(s,a);for(let l=0;l<t.length*Ne;l+=1)n[l]=t[l];for(;this._refCounts.length<n.length;)this._refCounts.push(0);for(let l=0,f=s[0]*s[1]*s[2];l<f;l+=1){let c=e.get(l);i.set(l,c)}return this.palette=n,this.indices=i,this._recomputeSizeFieldsForBuffer(o),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,a=Math.max(1,r[0],Math.abs(t)*2+1),o=Math.max(1,r[1],Math.abs(s)*2+1),n=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([a,o,n])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Wt(t),[e,r,a,o,n,i]=Xt(this.size);for(let h=e;h<=r;h+=1)for(let u=a;u<=o;u+=1)for(let d=n;d<=i;d+=1)this.getPaletteIndexAt(h,u,d)!==0&&s.setColorAt(h,u,d,this.getColorAt(h,u,d));let{buffer:l}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:f}=s;this.bitsPerIndex=f;let[,c,m]=cs(t,f,l);this.palette=c,this.indices=m,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(l)}static fromJSON(t){if(typeof t=="string")return Wt.deserialize(t);let{size:s,palette:e,indices:r}=t,a=new Wt(s);for(let o=0;o<e.length+Gt;o+=1)for(let n=0;n<r.length;n+=1){let i=r[n];if(i===o)if(i>=Gt){let l=e[i-Gt];a.setColorAtOffset(n,l)}else i===o&&a.setPaletteIndexAtOffset(n,i)}return a}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let a=0;a<this.palette.length;a+=1){let o=a+Gt,n=this.getPaletteColor(o);n>0&&e.push(n)}for(let a=0,o=this.size[0]*this.size[1]*this.size[2];a<o;a+=1)r.push(this.indices.get(a));return{size:[...this.size],palette:e,indices:r}}clone(){return new Wt(this.size,this.bitsPerIndex,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:a,yShift:o,zShift:n}=this,i=r[2];return(t+a)*r[1]*i+(s+o)*i+(e+n)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Wt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToVoxels(t,s=0,e=0,r=0){xe.clear();let a=t.size,[o,n,i,l,f,c]=Xt(a),{size:m}=this,[h,u,d,p,v,M]=Xt(m);for(let y=h;y<=u;y+=1)for(let F=d;F<=p;F+=1)for(let x=v;x<=M;x+=1){let C=this.getPaletteIndexAt(y,F,x);if(C!==0){let V=y+s,g=F+e,_=x+r,b=a[0],I=a[1],A=a[2];if(V>n&&(b=V*2),V<o&&(b=Math.max(b,-V*2+1)),g>l&&(I=g*2),g<i&&(I=Math.max(I,-g*2+1)),_>c&&(A=_*2),_<f&&(A=Math.max(A,-_*2+1)),b>ns||I>ns||A>ns)continue;(a[0]<b||a[1]<I||a[2]<A)&&(t.resizeTo([b,I,A]),a=t.size,[o,n,i,l,f,c]=Xt(a),xe.clear());let E=xe.get(C);if(E===void 0){let S=this.getColorAt(y,F,x);if(S===zs)t.setEmptyAt(V,g,_);else{let T=t.setColorAt(V,g,_,S);xe.set(C,T)}}else t.getPaletteIndexAt(V,g,_)!==E&&t.setPaletteIndexAt(V,g,_,E)}}}createInverse=(t,s)=>{xe.clear();let e=t.size,[r,a,o,n,i,l]=Xt(e),{size:f}=this,c=new Wt(f),[m,h,u,d,p,v]=Xt(f);for(let M=m;M<=h;M+=1)for(let y=u;y<=d;y+=1)for(let F=p;F<=v;F+=1){if(this.getPaletteIndexAt(M,y,F)===0)continue;let C=M+s[0],V=y+s[1],g=F+s[2];if(C>a||C<r||V>n||V<o||g>l||g<i||!t.hasVoxelAt(C,V,g))c.setColorAt(M,y,F,zs);else{let _=t.getColorAt(C,V,g);c.setColorAt(M,y,F,_)}}return c};mergeWith(t,s,e,r=!1){xe.clear();let a=xe,o=e[0]-s[0],n=e[1]-s[1],i=e[2]-s[2],l=t.size,[f,c,m,h,u,d]=Xt(l),{size:p}=this,[v,M,y,F,x,C]=Xt(p);for(let V=v;V<=M;V+=1)for(let g=y;g<=F;g+=1)for(let _=x;_<=C;_+=1){let b=this.getPaletteIndexAt(V,g,_);if(b===0)continue;let I=V+o,A=g+n,E=_+i;if(!!(!(I>c||I<f||A>h||A<m||E>d||E<u)&&t.hasVoxelAt(I,A,E)))if(a.has(b))this.setPaletteIndexAt(V,g,_,a.get(b));else{(r||t.getColorAt(I,A,E)>this.getColorAt(V,g,_))&&this.removeVoxelAt(V,g,_);let Z=this.getPaletteIndexAt(V,g,_);a.set(b,Z)}}}};function hs(N){return N=N.trim().toUpperCase(),N.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/)?(N=N.replace("#",""),N.length===3?N=N[2]+N[2]+N[1]+N[1]+N[0]+N[0]:N=N[4]+N[5]+N[2]+N[3]+N[0]+N[1],parseInt(N,16)):0}function Es(){let N=[];for(let r=0;r<256;r++)N[r]=Math.floor(Math.random()*256),N[r+256]=N[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,a,o){return a+r*(o-a)}function e(r,a,o,n){let i=r&15,l=i<8?a:o,f=i<4?o:i===12||i===14?a:n;return((i&1)===0?l:-l)+((i&2)===0?f:-f)}return{noise:function(r,a,o){let n=Math.floor(r),i=Math.floor(a),l=Math.floor(o),f=n&255,c=i&255,m=l&255;r-=n,a-=i,o-=l;let h=r-1,u=a-1,d=o-1,p=t(r),v=t(a),M=t(o),y=N[f]+c,F=N[y]+m,x=N[y+1]+m,C=N[f+1]+c,V=N[C]+m,g=N[C+1]+m;return s(M,s(v,s(p,e(N[F],r,a,o),e(N[V],h,a,o)),s(p,e(N[x],r,u,o),e(N[g],h,u,o))),s(v,s(p,e(N[F+1],r,a,d),e(N[V+1],h,a,o-1)),s(p,e(N[x+1],r,u,d),e(N[g+1],h,u,d))))}}}var ue=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let a=0,o=t.faceCount;a<o;a++)r.set(a,0);break}}static _circularDeform(t,s,e,r,a){let[o,n,i,l,f,c]=Xt(t.voxels.size),m=(o+n)/2+.5,h=(i+l)/2+.5,u=(f+c)/2+.5,{vertX:d,vertY:p,vertZ:v,vertRing:M}=s;for(let y=0,F=t.vertCount;y<F;y++){let x=d[y],C=p[y],V=v[y],g=x-m,_=C-h,b=V-u,I=Math.max(Math.abs(g*e),Math.abs(_*r),Math.abs(b*a)),A=Math.sqrt(g*g*e+_*_*r+b*b*a);if(A===0)continue;let E=I/A;d[y]=g*(1-e+e*E)+m,p[y]=_*(1-r+r*E)+h,v[y]=b*(1-a+a*E)+u,M[y]=I}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:a}=s;for(let o=0,n=t.faceCount;o<n;o++){let i=o*4,l=i+1,f=i+2,c=i+3;a.set(o,r[e[i]]===r[e[l]]&&r[e[i]]===r[e[f]]&&r[e[i]]===r[e[c]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:a,vertDeformCount:o,vertDeformDamping:n,vertDeformStrength:i,vertFlattenedX:l,vertFlattenedY:f,vertFlattenedZ:c,vertClampedX:m,vertClampedY:h,vertClampedZ:u,vertX:d,vertY:p,vertZ:v,vertTmpX:M,vertTmpY:y,vertTmpZ:F,vertHasTmp:x}=s;for(let C=0;C<e;C++){let V=!1;for(let g=0,_=t.vertCount;g<_;g++){if(o[g]<=C)continue;let I=a[g];if(I===0)continue;V=!0;let A=d[g],E=p[g],S=v[g],T=n[g],Z=i[g],O=1-(m.get(g)|l.get(g)),z=1-(h.get(g)|f.get(g)),P=1-(u.get(g)|c.get(g)),$=0,R=0,L=0;for(let w=0;w<I;w++){let k=r[g*6+w];$+=d[k],R+=p[k],L+=v[k]}let Y=Math.pow(T,C)*Z,U=$/I-A,X=R/I-E,W=L/I-S;M[g]=A+O*U*Y,y[g]=E+z*X*Y,F[g]=S+P*W*Y,x.set(g,O|z|P)}if(V){for(let g=0,_=t.vertCount;g<_;g++)x.get(g)!==0&&(d[g]=M[g],p[g]=y[g],v[g]=F[g]);x.clear()}}}static warpAndScatter(t,s){let e=Es().noise,{nx:r,px:a,ny:o,py:n,nz:i,pz:l}=t._tile,[f,c,m,h,u,d]=Xt(t.voxels.size),{vertX:p,vertY:v,vertZ:M,vertWarpAmplitude:y,vertWarpFrequency:F,vertScatter:x,vertFlattenedX:C,vertFlattenedY:V,vertFlattenedZ:g,vertClampedX:_,vertClampedY:b,vertClampedZ:I}=s;f+=.1,m+=.1,u+=.1,c+=.9,h+=.9,d+=.9;for(let A=0,E=t.vertCount;A<E;A++){let S=p[A],T=v[A],Z=M[A];if(r&&S<f||a&&S>c||o&&T<m||n&&T>h||i&&Z<u||l&&Z>d)continue;let O=y[A],z=F[A],P=x[A],$=O>0,R=P>0;if($||R){let L=0,Y=0,U=0;$&&(L=e((S+.19)*z,T*z,Z*z)*O,Y=e((T+.17)*z,Z*z,S*z)*O,U=e((Z+.13)*z,S*z,T*z)*O),R&&(L+=(Math.random()*2-1)*P,Y+=(Math.random()*2-1)*P,U+=(Math.random()*2-1)*P);let X=1-(_.get(A)|C.get(A)),W=1-(b.get(A)|V.get(A)),w=1-(I.get(A)|g.get(A));p[A]=S+X*L,v[A]=T+W*Y,M[A]=Z+w*U}}}};var Ae=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:a,faceVertIndices:o,vertLinkIndices:n,vertLinkCounts:i}=s;if(r.get(e)===1)for(let f=0;f<4;f++){let c=o[e*4+f],m=!1;for(let h=0,u=i[c];h<u;h++)if(n[c*6+h]===c){m=!0;break}m||(n[c*6+i[c]]=c,i[c]++,a[c]++)}else for(let f=0;f<4;f++){let c=o[e*4+f],m=o[e*4+(f+1)%4],h=!1;for(let d=0,p=i[c];d<p;d++)if(n[c*6+d]===m){h=!0;break}h||(n[c*6+i[c]]=m,i[c]++);let u=!1;for(let d=0,p=i[m];d<p;d++)if(n[m*6+d]===c){u=!0;break}u||(n[m*6+i[m]]=c,i[m]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:a,vertLinkCounts:o,vertLinkIndices:n}=s;for(let i=0,l=t.vertCount;i<l;i++){let f=r[i],c=o[i];f===c&&(a.set(i,1),o[i]=0)}for(let i=0,l=t.faceCount;i<l;i++)for(let f=0;f<4;f++){let c=e[i*4+f],m=e[i*4+(f+1)%4];if(a.get(c)===1){let h=!1;for(let u=0,d=o[c];u<d;u++)if(n[c*6+u]===m){h=!0;break}h||(n[c*6+o[c]]=m,o[c]++)}if(a.get(m)===1){let h=!1;for(let u=0,d=o[m];u<d;u++)if(n[m*6+u]===c){h=!0;break}h||(n[m*6+o[m]]=c,o[m]++)}}}};var Ee=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:a,faceSmooth:o,faceFlattened:n,faceClamped:i,vertX:l,vertY:f,vertZ:c,faceVertFlatNormalX:m,faceVertFlatNormalY:h,faceVertFlatNormalZ:u,faceVertSmoothNormalX:d,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:v,faceVertBothNormalX:M,faceVertBothNormalY:y,faceVertBothNormalZ:F,faceVertNormalX:x,faceVertNormalY:C,faceVertNormalZ:V,faceMaterials:g,faceVertIndices:_,vertSmoothNormalX:b,vertSmoothNormalY:I,vertSmoothNormalZ:A,vertBothNormalX:E,vertBothNormalY:S,vertBothNormalZ:T}=s,[Z,O,z,P,$,R]=Xt(t.voxels.size);for(let Y=0,U=t.faceCount;Y<U;Y++){let X=Y*4;for(let W=0;W<4;W++){let w=_[X+W];b[w]=0,I[w]=0,A[w]=0,E[w]=0,S[w]=0,T[w]=0}}for(let Y=0,U=t.faceCount;Y<U;Y++){let X=r[Y],W=a.get(Y),w=n.get(Y),k=i.get(Y),D=W|1-(w|k);o.set(Y,D);let K=_[Y*4],et=_[Y*4+1],ot=_[Y*4+2],B=_[Y*4+3],ft=(l[K]+l[et]+l[ot]+l[B])/4,mt=(f[K]+f[et]+f[ot]+f[B])/4,zt=(c[K]+c[et]+c[ot]+c[B])/4;for(let Vt=0;Vt<4;Vt++){let it=_[Y*4+Vt],St=_[Y*4+(Vt+3)%4],at=l[it],gt=l[St],nt=f[it],At=f[St],Ct=c[it],Tt=c[St],_t=b[it],Nt=I[it],Et=A[it],Yt=E[it],Ot=S[it],kt=T[it],Qt=gt-at,$t=At-nt,It=Tt-Ct,vt=ft-at,Mt=mt-nt,ht=zt-Ct,bt=Math.sqrt(Qt*Qt+$t*$t+It*It),jt=Math.sqrt(vt*vt+Mt*Mt+ht*ht);bt=bt===0?1:bt,jt=jt===0?1:jt;let te=1/bt;Qt*=te,$t*=te,It*=te;let Rt=1/jt;vt*=Rt,Mt*=Rt,ht*=Rt;let lt=$t*ht-It*Mt,ut=It*vt-Qt*ht,pt=Qt*Mt-$t*vt,qt=Z+.1,oe=O+.9,Zt=z+.1,Lt=P+.9,Bt=$+.1,Dt=R+.9;e&&((e.nx&&X===0||e.px&&X===1)&&(nt<Zt||nt>Lt||Ct<Bt||Ct>Dt)&&(ut=0,pt=0),(e.ny&&X===2||e.py&&X===3)&&(at<qt||at>oe||Ct<Bt||Ct>Dt)&&(lt=0,pt=0),(e.nz&&X===4||e.pz&&X===5)&&(at<qt||at>oe||nt<Zt||nt>Lt)&&(lt=0,ut=0));let Ht=Math.sqrt(lt*lt+ut*ut+pt*pt);Ht=Ht===0?1:Ht;let H=1/Ht;lt*=H,ut*=H,pt*=H,m[Y*4+Vt]=lt,h[Y*4+Vt]=ut,u[Y*4+Vt]=pt;let j=Qt*vt+$t*Mt+It*ht,G=Math.acos(j);_t+=lt*G,Nt+=ut*G,Et+=pt*G,Yt+=D*(lt*G),Ot+=D*(ut*G),kt+=D*(pt*G),b[it]=_t,I[it]=Nt,A[it]=Et,E[it]=Yt,S[it]=Ot,T[it]=kt}}for(let Y=0,U=t.vertCount;Y<U;Y++){let X=b[Y],W=I[Y],w=A[Y],k=E[Y],D=S[Y],K=T[Y],et=Math.sqrt(X*X+W*W+w*w),ot=Math.sqrt(k*k+D*D+K*K);et!==0&&(b[Y]=X/et,I[Y]=W/et,A[Y]=w/et),ot!==0&&(E[Y]=k/ot,S[Y]=D/ot,T[Y]=K/ot)}let L=t.materials.materials;for(let Y=0,U=t.faceCount;Y<U;Y++){let X=o.get(Y)===1,W=L[g[Y]];for(let w=0;w<4;w++){let k=Y*4+w,D=_[Y*4+w];switch(d[k]=b[D],p[k]=I[D],v[k]=A[D],M[k]=!X||E[D]===0?m[k]:E[D],y[k]=!X||S[D]===0?h[k]:S[D],F[k]=!X||T[D]===0?u[k]:T[D],W.lighting){case ne:x[k]=d[k],C[k]=p[k],V[k]=v[k];break;case le:x[k]=M[k],C[k]=y[k],V[k]=F[k];break;default:x[k]=m[k],C[k]=h[k],V[k]=u[k];break}}}}};var st=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,a=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,o=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=a,t.z=o}transformPointInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[12]*a+i[13]*o+i[14]*n+i[15],f=(i[0]*a+i[1]*o+i[2]*n+i[3])/l,c=(i[4]*a+i[5]*o+i[6]*n+i[7])/l,m=(i[8]*a+i[9]*o+i[10]*n+i[11])/l;t[r]=f,s[r]=c,e[r]=m}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,a=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=a}transformVectorInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[0]*a+i[1]*o+i[2]*n,f=i[4]*a+i[5]*o+i[6]*n,c=i[8]*a+i[9]*o+i[10]*n;t[r]=l,s[r]=f,e[r]=c}static identity(t){t=t||new st;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new st;let r=t.m,a=s.m,o=e.m;return o[0]=r[0]*a[0]+r[1]*a[4]+r[2]*a[8]+r[3]*a[12],o[1]=r[0]*a[1]+r[1]*a[5]+r[2]*a[9]+r[3]*a[13],o[2]=r[0]*a[2]+r[1]*a[6]+r[2]*a[10]+r[3]*a[14],o[3]=r[0]*a[3]+r[1]*a[7]+r[2]*a[11]+r[3]*a[15],o[4]=r[4]*a[0]+r[5]*a[4]+r[6]*a[8]+r[7]*a[12],o[5]=r[4]*a[1]+r[5]*a[5]+r[6]*a[9]+r[7]*a[13],o[6]=r[4]*a[2]+r[5]*a[6]+r[6]*a[10]+r[7]*a[14],o[7]=r[4]*a[3]+r[5]*a[7]+r[6]*a[11]+r[7]*a[15],o[8]=r[8]*a[0]+r[9]*a[4]+r[10]*a[8]+r[11]*a[12],o[9]=r[8]*a[1]+r[9]*a[5]+r[10]*a[9]+r[11]*a[13],o[10]=r[8]*a[2]+r[9]*a[6]+r[10]*a[10]+r[11]*a[14],o[11]=r[8]*a[3]+r[9]*a[7]+r[10]*a[11]+r[11]*a[15],o[12]=r[12]*a[0]+r[13]*a[4]+r[14]*a[8]+r[15]*a[12],o[13]=r[12]*a[1]+r[13]*a[5]+r[14]*a[9]+r[15]*a[13],o[14]=r[12]*a[2]+r[13]*a[6]+r[14]*a[10]+r[15]*a[14],o[15]=r[12]*a[3]+r[13]*a[7]+r[14]*a[11]+r[15]*a[15],e}static transpose(t,s){s=s||new st;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new st;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let a=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let o=0;o<16;o++)r[o]/=a;return s}static scale(t,s,e,r){r=r||new st;let a=r.m;return a[0]=t,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=s,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static translate(t,s,e,r){r=r||new st;let a=r.m;return a[0]=1,a[1]=0,a[2]=0,a[3]=t,a[4]=0,a[5]=1,a[6]=0,a[7]=s,a[8]=0,a[9]=0,a[10]=1,a[11]=e,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static rotate(t,s,e,r,a){if(!t||!s&&!e&&!r)return st.identity(a);a=a||new st;let o=a.m,n=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=n,e/=n,r/=n;let i=Math.cos(t),l=Math.sin(t),f=1-i;return o[0]=s*s*f+i,o[1]=s*e*f-r*l,o[2]=s*r*f+e*l,o[3]=0,o[4]=e*s*f+r*l,o[5]=e*e*f+i,o[6]=e*r*f-s*l,o[7]=0,o[8]=r*s*f-e*l,o[9]=r*e*f+s*l,o[10]=r*r*f+i,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,a}static lookAtORIGINAL(t,s,e,r,a,o,n,i,l,f){f=f||new st;let c=f.m,m=t-r,h=s-a,u=e-o,d=Math.sqrt(m*m+h*h+u*u);m/=d,h/=d,u/=d;let p=i*u-l*h,v=l*m-n*u,M=n*h-i*m;d=Math.sqrt(p*p+v*v+M*M),p/=d,v/=d,M/=d;let y=h*M-u*v,F=u*p-m*M,x=m*v-h*p;return d=Math.sqrt(y*y+F*F+x*x),y/=d,F/=d,x/=d,c[0]=p,c[1]=v,c[2]=M,c[3]=-(p*t+v*s+M*e),c[4]=y,c[5]=F,c[6]=x,c[7]=-(y*t+F*s+x*e),c[8]=m,c[9]=h,c[10]=u,c[11]=-(m*t+h*s+u*e),c[12]=0,c[13]=0,c[14]=0,c[15]=1,f}static lookAtTRYOUT(t,s,e,r){r=r||new st;let a=r.m,o=Math.sqrt(t*t+e*e);return a[0]=e/o,a[1]=0,a[2]=-t/o,a[3]=0,a[4]=t*s/o,a[5]=-o,a[6]=e*s/o,a[7]=0,a[8]=t,a[9]=s,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static lookAt(t,s,e,r){r=r||new st;let a=r.m,o=Math.sqrt(t*t+e*e),n=o?t/o:1,i=o?e/o:0;return a[0]=t,a[1]=-i,a[2]=-e*n,a[3]=0,a[4]=s,a[5]=0,a[6]=o,a[7]=0,a[8]=e,a[9]=n,a[10]=-e*i,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}};var _e=[null,null,null,null],Xe=[null,null,null,null],Se=[null,null,null,null],Ye=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:a,faceVertNormalX:o,faceVertFlatNormalX:n,faceVertNormalY:i,faceVertFlatNormalY:l,faceVertNormalZ:f,faceVertFlatNormalZ:c,faceVertSmoothNormalX:m,faceVertSmoothNormalY:h,faceVertSmoothNormalZ:u,faceVertBothNormalX:d,faceVertBothNormalY:p,faceVertBothNormalZ:v}=s,M=t.determineBoundsOffsetAndRescale(t.resize,s),y=new st;y=st.multiply(y,st.translate(t.position.x,t.position.y,t.position.z)),y=st.multiply(y,st.rotate(t.rotation.z,0,0,1)),y=st.multiply(y,st.rotate(t.rotation.y,0,1,0)),y=st.multiply(y,st.rotate(t.rotation.x,1,0,0)),y=st.multiply(y,st.scale(t.scale.x,t.scale.y,t.scale.z)),y=st.multiply(y,st.scale(M.rescale,M.rescale,M.rescale)),y=st.multiply(y,st.translate(M.offset.x,M.offset.y,M.offset.z));let F=st.inverse(y);F=st.transpose(F);for(let x=0,C=t.vertCount;x<C;x++)y.transformPointInline(e,r,a,x);_e[0]=o,Xe[0]=i,Se[0]=f,_e[1]=n,Xe[1]=l,Se[1]=c,_e[2]=m,Xe[2]=h,Se[2]=u,_e[3]=d,Xe[3]=p,Se[3]=v;for(let x=0,C=t.faceCount;x<C;x++){let V=x*4;for(let g=0;g<4;g++)for(let _=0,b=_e.length;_<b;_++){let I=_e[_],A=Xe[_],E=Se[_],S=V+g;F.transformVectorInline(I,A,E,S);let T=I[S],Z=A[S],O=E[S],z=Math.sqrt(T*T+Z*Z+O*O);if(z>0){let P=1/z;I[S]=T*P,A[S]=Z*P,E[S]=O*P}}}}};var Oe=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let v=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},v>0){let M=1/v;p.normalizedDirection.x*=M}}let r=t.materials.materials,{faceMaterials:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,faceVertIndices:l,vertX:f,vertY:c,vertZ:m,faceVertLightR:h,faceVertLightG:u,faceVertLightB:d}=s;for(let p=0,v=t.faceCount;p<v;p++){let M=r[a[p]],y=p*4;if(M.lights)for(let F=0;F<4;F++){let x=y+F,C=l[x],V=f[C],g=c[C],_=m[C],b=o[x],I=n[x],A=i[x];h[x]=0,u[x]=0,d[x]=0;for(let E of e){let{color:S,strength:T,distance:Z,normalizedDirection:O,position:z}=E,P=T,$=0;if(z){let R=z.x-V,L=z.y-g,Y=z.z-_;$=Math.sqrt(R*R+L*L+Y*Y);let U=1/$;P=T*Math.max(b*R*U+I*L*U+A*Y*U,0)}else O&&(P=T*Math.max(b*O.x+I*O.y+A*O.z,0));z&&Z&&(P=P*(1-Math.min($/Z,1))),h[x]+=S.r*P,u[x]+=S.g*P,d[x]+=S.b*P}}else for(let F=0;F<4;F++){let x=y+F;h[x]=1,u[x]=1,d[x]=1}}}};var Xs=[],fs=new Map,ms=()=>Xs.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Ss=N=>{for(let t of N.partitions)t&&Ss(t);N.minx=Number.MAX_VALUE,N.miny=Number.MAX_VALUE,N.minz=Number.MAX_VALUE,N.maxx=-Number.MAX_VALUE,N.maxy=-Number.MAX_VALUE,N.maxz=-Number.MAX_VALUE,N.partitions.fill(null),N.triangles.length=0,Xs.push(N)},Te=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(C){return C.ao})))return;let{faceMaterials:r,faceVertIndices:a,faceVertAO:o,vertX:n,vertY:i,vertZ:l,faceVertNormalX:f,faceVertNormalY:c,faceVertNormalZ:m}=s,{faceCount:h}=t,u=t.materials.materials,d=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(d,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let v=t.aoSamples,M=this._generateFibonacciSamples(v);fs.clear();let y=t.scale.x,F=t.scale.y,x=t.scale.z;for(let C=0;C<h;C++){let V=u[r[C]],g=V.ao||t.ao,_=C*4;if(o[_]=0,o[_+1]=0,o[_+2]=0,o[_+3]=0,!g||g.maxDistance===0||g.strength===0||g.angle<1||V.opacity===0)continue;let b=g.maxDistance*Math.max(y,F,x),I=g.strength,A=Math.cos(g.angle/180*Math.PI);for(let E=0;E<4;E++){let S=_+E,T=a[S],Z=n[T],O=i[T],z=l[T],P=f[S],$=c[S],R=m[S],L=Z*16384+O*128+z,Y=P*1e7+$*1e5+R*1e3,U=L*1e9+Y,X=fs.get(U);if(X!==void 0){o[S]=X;continue}let W=a[_+(E+2)%4],w=n[W],k=i[W],D=l[W],K=Z*.99999+w*1e-5+P*1e-5,et=O*.99999+k*1e-5+$*1e-5,ot=z*.99999+D*1e-5+R*1e-5,B=0,ft=0;for(let[zt,Vt,it]of M){if(zt*P+Vt*$+it*R<=A)continue;let at=K+zt*b,gt=et+Vt*b,nt=ot+it*b,At=this._distanceToOctree(t,s,p,K,et,ot,zt,Vt,it,b,at,gt,nt);At?At=At/b:At=1,B+=At,ft++}let mt=0;ft!==0&&(B=Math.max(Math.min(B/ft,1),0),mt=1-Math.pow(B,I)),o[S]=mt,fs.set(U,mt)}}Ss(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,a=[],o=t.materials.materials;for(let n=0;n<r;n++){if(o[e[n]].opacity<.75)continue;let l=n*2;a.push(l),a.push(l+1)}return a}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:a,vertY:o,vertZ:n}=e,i=t.length;if(i<=32){let l=ms();l.triangles=t;for(let f=0;f<i;f++){let c=t[f],h=(c>>1)*4,u,d,p;(c&1)===0?(u=r[h+2],d=r[h+1],p=r[h+0]):(u=r[h+0],d=r[h+3],p=r[h+2]);let v=a[u],M=o[u],y=n[u],F=a[d],x=o[d],C=n[d],V=a[p],g=o[p],_=n[p];l.minx=Math.min(l.minx,v,F,V),l.miny=Math.min(l.miny,M,x,g),l.minz=Math.min(l.minz,y,C,_),l.maxx=Math.max(l.maxx,v,F,V),l.maxy=Math.max(l.maxy,M,x,g),l.maxz=Math.max(l.maxz,y,C,_)}return l}else{let l=0,f=0,c=0;for(let d=0;d<i;d++){let p=t[d],M=(p>>1)*4,y,F,x;(p&1)===0?(y=r[M+2],F=r[M+1],x=r[M+0]):(y=r[M+0],F=r[M+3],x=r[M+2]);let C=a[y],V=o[y],g=n[y],_=a[F],b=o[F],I=n[F],A=a[x],E=o[x],S=n[x];l+=C+_+A,f+=V+b+E,c+=g+I+S}let m=1/i;l*=m,f*=m,c*=m;let h=Array(8).fill(null);for(let d=0;d<i;d++){let p=t[d],M=(p>>1)*4,y,F,x;(p&1)===0?(y=r[M+2],F=r[M+1],x=r[M+0]):(y=r[M+0],F=r[M+3],x=r[M+2]);let C=a[y],V=o[y],g=n[y],_=a[F],b=o[F],I=n[F],A=a[x],E=o[x],S=n[x],T=C+_+A<l?0:1,Z=V+b+E<f?0:1,O=g+I+S<c?0:1,z=T+Z*2+O*4;h[z]===null?h[z]=[p]:h[z].push(p)}let u=ms();for(let d=0;d<8;d++){if(h[d]===null)continue;let p=this._trianglesToOctree(h[d],s,e);u.partitions[d]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,a,o,n,i,l,f,c,m,h){if(this._hitsBox(r,a,o,c,m,h,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,a,o,n,i,l,f);let u=f,d=e.partitions;for(let p=0;p<8;p++){let v=d[p];if(v===null)continue;let M=this._distanceToOctree(t,s,v,r,a,o,n,i,l,f,c,m,h);M&&(u=Math.min(u,M))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(me,s).bounds,{vertCount:a,faceCount:o}=t,{faceVertIndices:n,faceCulled:i,vertX:l,vertY:f,vertZ:c}=s,m=(u,d,p,v,M,y,F,x,C)=>{let V=o*4;l[a]=u,f[a]=d,c[a]=p,l[a+1]=v,f[a+1]=M,c[a+1]=y,l[a+2]=F,f[a+2]=x,c[a+2]=C,n[V]=a+2,n[V+1]=a+1,n[V+2]=a+0,i.set(o,1);let g=o*2;return o++,a+=3,g},h=[];if(t._aoSides.nx&&h.push(m(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&h.push(m(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&h.push(m(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&h.push(m(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&h.push(m(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&h.push(m(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),h.length>0){let u=this._trianglesToOctree(h,t,s),d=ms();d.partitions=[d,u]}return e}static _hitsBox(t,s,e,r,a,o,n){let i=n.minx;if(t<i&&r<i)return!1;let l=n.maxx;if(t>l&&r>l)return!1;let f=n.miny;if(s<f&&a<f)return!1;let c=n.maxy;if(s>c&&a>c)return!1;let m=n.minz;if(e<m&&o<m)return!1;let h=n.maxz;if(e>h&&o>h)return!1;let u=t-(i+l)*.5,d=(l-i)*.5,p=(r-t)*.5,v=Math.abs(p);if(Math.abs(u)>d+v)return!1;let M=(c-f)*.5,y=(a-s)*.5,F=Math.abs(y),x=s-(f+c)*.5;if(Math.abs(x)>M+F)return!1;let C=(h-m)*.5,V=(o-e)*.5,g=Math.abs(V),_=e-(m+h)*.5;return!(Math.abs(_)>C+g||Math.abs(y*_-V*x)>M*g+C*F+Number.EPSILON||Math.abs(V*u-p*_)>C*v+d*g+Number.EPSILON||Math.abs(p*x-y*u)>d*F+M*v+Number.EPSILON)}static _distanceToModel(t,s,e,r,a,o,n,i,l,f){let c=null,{faceVertIndices:m}=s;for(let h=0;h<e.length;h++){let u=e[h],p=(u>>1)*4,v,M,y;(u&1)===0?(v=m[p+2],M=m[p+1],y=m[p+0]):(v=m[p+0],M=m[p+3],y=m[p+2]);let F=this._triangleDistance(t,s,v,M,y,r,a,o,n,i,l);F&&(c?c=Math.min(c,F):F<f&&(c=F))}return c}static _triangleDistance(t,s,e,r,a,o,n,i,l,f,c){let{vertX:m,vertY:h,vertZ:u}=s,d=m[e],p=h[e],v=u[e],M=m[r],y=h[r],F=u[r],x=m[a],C=h[a],V=u[a],g=M-d,_=y-p,b=F-v,I=x-d,A=C-p,E=V-v,S=f*E-c*A,T=c*I-l*E,Z=l*A-f*I,O=g*S+_*T+b*Z;if(O<Number.EPSILON)return null;let z=1/O,P=o-d,$=n-p,R=i-v,L=z*(P*S+$*T+R*Z);if(L<0||L>1)return null;let Y=$*b-R*_,U=R*g-P*b,X=P*_-$*g,W=z*(l*Y+f*U+c*X);if(W<0||L+W>1)return null;let w=z*(I*Y+A*U+E*X);return w<=Number.EPSILON?null:w}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let a=1;a<=t;++a){let o=Math.asin(-1+2*a/(t+1)),n=r*a,i=Math.cos(n)*Math.cos(o),l=Math.sin(o),f=Math.sin(n)*Math.cos(o);s.push([i,l,f])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let a=r*e,o=Math.cos(a),n=Math.sin(a),i=Math.max(1,r*4),l=Math.PI*2/i;for(let f=0;f<i;f++){let c=f*l,m=n*Math.sin(c),h=n*Math.cos(c);s.push({x:m,y:o,z:h}),r<t&&s.push({x:m,y:-o,z:h})}i+=4}return s}};var Ze=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:a,faceVertVs:o}=s,n=[],i=[],l=[],f=t.materials.materials;for(let c=0;c<f.length;c++){let m=f[c],h=0,u=1,d=1;if(m.map||m.normalMap||m.roughnessMap||m.metalnessMap||m.emissiveMap){let p=t.voxels.size[0],v=t.voxels.size[1],M=t.voxels.size[2];m.mapTransform.uscale===-1&&(u=1/Math.max(p,v,M)),m.mapTransform.vscale===-1&&(d=1/Math.max(p,v,M)),(m.map&&m.map.cube||m.normalMap&&m.normalMap.cube||m.roughnessMap&&m.roughnessMap.cube||m.metalnessMap&&m.metalnessMap.cube||m.emissiveMap&&m.emissiveMap.cube)&&(h=1,u=u/4,d=d/2)}n.push(h),i.push(u),l.push(d)}for(let c=0,m=t.faceCount;c<m;c++){let h=e[c],u=n[h],d=i[h],p=l[h],v=bs[r[c]],M=c*4,y=a[M+v.order[0]],F=o[M+v.order[0]],x=a[M+v.order[1]],C=o[M+v.order[1]],V=a[M+v.order[2]],g=o[M+v.order[2]],_=a[M+v.order[3]],b=o[M+v.order[3]],I=M+v.order[0],A=M+v.order[1],E=M+v.order[2],S=M+v.order[3],T=u*v.uo,Z=u*v.vo,O=v.ud*d,z=v.vd*p;a[I]=T+(y+1e-4)*O,o[I]=Z+(F+1e-4)*z,a[A]=T+(x+1e-4)*O,o[A]=Z+(C+.9999)*z,a[E]=T+(V+.9999)*O,o[E]=Z+(g+.9999)*z,a[S]=T+(_+.9999)*O,o[S]=Z+(b+1e-4)*z}}};var Be=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:a,vertColorCount:o,faceVertColorR:n,faceVertColorG:i,faceVertColorB:l,faceVertLightR:f,faceVertLightG:c,faceVertLightB:m,faceVertIndices:h,faceMaterials:u,faceVertAO:d}=s,p=t.materials.materials,v=!!t.materials.find(x=>x.fade),M=Array(p.length).fill(!1);for(let x=0,C=p.length;x<C;x++)v&&p[x].fade&&(M[x]=!0);for(let x=0,C=t.faceCount;x<C;x++)if(M[u[x]])for(let g=0;g<4;g++){let _=0,b=0,I=0,A=0,E=x*4+g,S=h[E],T=o[S];for(let O=0;O<T;O++){let z=S*6+O;_+=e[z],b+=r[z],I+=a[z],A++}let Z=1/A;n[E]=_*Z,i[E]=b*Z,l[E]=I*Z}let y=t.ao||t.materials.find(function(x){return x.ao}),F=t.lights.length>0;if(y&&F)for(let x=0,C=t.faceCount;x<C;x++){let g=p[u[x]].ao||t.ao,_=g?g.color:null;for(let b=0;b<4;b++){let I=x*4+b,A=n[I],E=i[I],S=l[I],T=_?_.r:A,Z=_?_.g:E,O=_?_.b:S,z=1-d[I];n[I]=A*f[I]*z+T*(1-z),i[I]=E*c[I]*z+Z*(1-z),l[I]=S*m[I]*z+O*(1-z)}}else if(F&&!y)for(let x=0,C=t.faceCount;x<C;x++)for(let V=0;V<4;V++){let g=x*4+V;n[g]=n[g]*f[g],i[g]=i[g]*c[g],l[g]=l[g]*m[g]}else if(!F&&y)for(let x=0,C=t.faceCount;x<C;x++){let g=p[u[x]].ao||t.ao;if(!g)continue;let _=g.color;for(let b=0;b<4;b++){let I=x*4+b,A=n[I],E=i[I],S=l[I],T=_?_.r:A,Z=_?_.g:E,O=_?_.b:S,z=1-d[I];n[I]=z*A+T*(1-z),i[I]=z*E+Z*(1-z),l[I]=z*S+O*(1-z)}}}};var Ke={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},De={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},je={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Pe=class{static simplify(t,s){if(!t.simplify)return;let e=function(){Ke.filled=!1,De.filled=!1,Qe.filled=!1,je.filled=!1},r=t.materials.materials,{faceCulled:a,faceNameIndices:o,vertX:n,vertY:i,vertZ:l,voxelXZYFaceIndices:f,voxelXYZFaceIndices:c,voxelYZXFaceIndices:m}=s;for(let h=f.length-t.faceCount,u=f.length;h<u;h++){let d=f[h],p=d&(1<<28)-1;if(a.get(p))continue;let v=d/(1<<28),M=v>>16&255,y=v>>8&255,F=v&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,Ke,p,M,y,F,n,l,i,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,De,p,M,y,F,n,l,i,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,Qe,p,M,y,F,n,l,i,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,je,p,M,y,F,n,l,i,0,1,2,3);break}}e();for(let h=c.length-t.faceCount,u=c.length;h<u;h++){let d=c[h],p=d&(1<<28)-1;if(a.get(p))continue;let v=d/(1<<28),M=v>>16&255,y=v>>8&255,F=v&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,Ke,p,M,y,F,n,i,l,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,De,p,M,y,F,n,i,l,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,Qe,p,M,y,F,n,i,l,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,je,p,M,y,F,n,i,l,2,3,0,1);break}}e();for(let h=m.length-t.faceCount,u=m.length;h<u;h++){let d=m[h],p=d&(1<<28)-1;if(a.get(p))continue;let v=d/(1<<28),M=v>>16&255,y=v>>8&255,F=v&255;switch(o[p]){case 2:this._mergeFaces(r,t,s,Ke,p,M,y,F,i,l,n,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,De,p,M,y,F,i,l,n,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,Qe,p,M,y,F,i,l,n,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,je,p,M,y,F,i,l,n,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,a,o,n,i,l,f,c,m,h,u,d){let{faceCulled:p,faceMaterials:v,vertX:M,vertY:y,vertZ:F,faceVertIndices:x,faceVertNormalX:C,faceVertNormalY:V,faceVertNormalZ:g,faceVertColorR:_,faceVertColorG:b,faceVertColorB:I,faceVertUs:A,faceVertVs:E,faceVertFlatNormalX:S,faceVertFlatNormalY:T,faceVertFlatNormalZ:Z,faceVertSmoothNormalX:O,faceVertSmoothNormalY:z,faceVertSmoothNormalZ:P,faceVertBothNormalX:$,faceVertBothNormalY:R,faceVertBothNormalZ:L}=e,Y=v[a],U=t[Y];if(r.filled&&r.lastVoxelAxis1===o&&r.lastVoxelAxis2===n&&(U.simplify===!0||U.simplify===null&&s.simplify===!0)&&p.get(a)===0){if(r.maxVoxelAxis3!==i-1){r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a;return}let X=a*4,W=r.lastFaceIndex,w=W*4;if(v[W]!==Y)return;let k=C[X],D=V[X],K=g[X],et=C[X+1],ot=V[X+1],B=g[X+1],ft=C[X+2],mt=V[X+2],zt=g[X+2],Vt=C[X+3],it=V[X+3],St=g[X+3],at=C[w],gt=V[w],nt=g[w],At=C[w+1],Ct=V[w+1],Tt=g[w+1],_t=C[w+2],Nt=V[w+2],Et=g[w+2],Yt=C[w+3],Ot=V[w+3],kt=g[w+3];if(!(this._normalEquals(k,D,K,at,gt,nt)&&this._normalEquals(et,ot,B,At,Ct,Tt)&&this._normalEquals(ft,mt,zt,_t,Nt,Et)&&this._normalEquals(Vt,it,St,Yt,Ot,kt)))return;let $t=_[X],It=b[X],vt=I[X],Mt=_[X+1],ht=b[X+1],bt=I[X+1],jt=_[X+2],te=b[X+2],Rt=I[X+2],lt=_[X+3],ut=b[X+3],pt=I[X+3],qt=_[w],oe=b[w],Zt=I[w],Lt=_[w+1],Bt=b[w+1],Dt=I[w+1],Ht=_[w+2],H=b[w+2],j=I[w+2],G=_[w+3],rt=b[w+3],ct=I[w+3];if(!($t===qt&&It===oe&&vt===Zt&&Mt===Lt&&ht===Bt&&bt===Dt&&jt===Ht&&te===H&&Rt===j&&lt===G&&ut===rt&&pt===ct))return;let ee=x[X+m],q=x[X+h],Q=x[X+u],J=x[X+d],dt=M[ee],yt=y[ee],re=F[ee],ge=M[q],ve=y[q],fe=F[q],ie=x[w+m],Ve=x[w+h],pe=x[w+u],Je=x[w+d],xs=M[ie],gs=y[ie],vs=F[ie],Os=Math.sqrt((ge-dt)*(ge-dt)+(ve-yt)*(ve-yt)+(fe-re)*(fe-re)),Ts=Math.sqrt((ge-xs)*(ge-xs)+(ve-gs)*(ve-gs)+(fe-vs)*(fe-vs)),se=Os/Ts;return Math.abs(l[Ve]-(1-se)*l[q]-se*l[ie])<=1e-4&&Math.abs(f[Ve]-(1-se)*f[q]-se*f[ie])<=1e-4&&Math.abs(c[Ve]-(1-se)*c[q]-se*c[ie])<=1e-4&&Math.abs(l[pe]-(1-se)*l[Q]-se*l[Je])<=1e-4&&Math.abs(f[pe]-(1-se)*f[Q]-se*f[Je])<=1e-4&&Math.abs(c[pe]-(1-se)*c[Q]-se*c[Je])<=1e-4?(x[w+h]=q,x[w+u]=Q,A[w+h]=A[X+h],E[w+h]=E[X+h],A[w+u]=A[X+u],E[w+u]=E[X+u],S[w+h]=S[X+h],T[w+h]=T[X+h],Z[w+h]=Z[X+h],S[w+u]=S[X+u],T[w+u]=T[X+u],Z[w+u]=Z[X+u],O[w+h]=O[X+h],z[w+h]=z[X+h],P[w+h]=P[X+h],O[w+u]=O[X+u],z[w+u]=z[X+u],P[w+u]=P[X+u],$[w+h]=$[X+h],R[w+h]=R[X+h],L[w+h]=L[X+h],$[w+u]=$[X+u],R[w+u]=R[X+u],L[w+u]=L[X+u],r.maxVoxelAxis3=i,p.set(a,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a,!1}static _normalEquals(t,s,e,r,a,o){return Math.abs(t-r)<.01&&Math.abs(s-a)<.01&&Math.abs(e-o)<.01}};var ke=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:a,vertX:o,vertY:n,vertZ:i,faceVertFlatNormalX:l,faceVertFlatNormalY:f,faceVertFlatNormalZ:c,faceVertSmoothNormalX:m,faceVertSmoothNormalY:h,faceVertSmoothNormalZ:u,faceVertBothNormalX:d,faceVertBothNormalY:p,faceVertBothNormalZ:v,faceVertUs:M,faceVertVs:y,faceVertColorR:F,faceVertColorG:x,faceVertColorB:C,faceVertNormalX:V,faceVertNormalY:g,faceVertNormalZ:_}=s;for(let b=0,I=t.faceCount;b<I;b++){if(r.get(b)===1)continue;let A=b*4,E=a[A],S=a[A+1],T=a[A+2],Z=a[A+3],O=o[E],z=n[E],P=i[E],$=o[S],R=n[S],L=i[S],Y=o[T],U=n[T],X=i[T],W=o[Z],w=n[Z],k=i[Z],D=(O+Y)/2,K=(z+U)/2,et=(P+X)/2,ot=($-D)*($-D)+(R-K)*(R-K)+(L-et)*(L-et),B=(W-D)*(W-D)+(w-K)*(w-K)+(k-et)*(k-et),ft=($+W)/2,mt=(R+w)/2,zt=(L+k)/2,Vt=(O-ft)*(O-ft)+(z-mt)*(z-mt)+(P-zt)*(P-zt),it=(Y-ft)*(Y-ft)+(U-mt)*(U-mt)+(X-zt)*(X-zt);if(ot<e||B<e)this._shiftFaceVertsAtOffset(A,a),this._shiftFaceVertsAtOffset(A,V),this._shiftFaceVertsAtOffset(A,g),this._shiftFaceVertsAtOffset(A,_),this._shiftFaceVertsAtOffset(A,l),this._shiftFaceVertsAtOffset(A,f),this._shiftFaceVertsAtOffset(A,c),this._shiftFaceVertsAtOffset(A,m),this._shiftFaceVertsAtOffset(A,h),this._shiftFaceVertsAtOffset(A,u),this._shiftFaceVertsAtOffset(A,d),this._shiftFaceVertsAtOffset(A,p),this._shiftFaceVertsAtOffset(A,v),this._shiftFaceVertsAtOffset(A,M),this._shiftFaceVertsAtOffset(A,y),this._shiftFaceVertsAtOffset(A,F),this._shiftFaceVertsAtOffset(A,x),this._shiftFaceVertsAtOffset(A,C);else if(!(Vt<e||it<e)){let St=this._getVertexSumInline(O,z,P);for(;this._getVertexSumInline($,R,L)<St||this._getVertexSumInline(Y,U,X)<St||this._getVertexSumInline(W,w,k)<St;){this._shiftFaceVertsAtOffset(A,a),this._shiftFaceVertsAtOffset(A,V),this._shiftFaceVertsAtOffset(A,g),this._shiftFaceVertsAtOffset(A,_),this._shiftFaceVertsAtOffset(A,l),this._shiftFaceVertsAtOffset(A,f),this._shiftFaceVertsAtOffset(A,c),this._shiftFaceVertsAtOffset(A,m),this._shiftFaceVertsAtOffset(A,h),this._shiftFaceVertsAtOffset(A,u),this._shiftFaceVertsAtOffset(A,d),this._shiftFaceVertsAtOffset(A,p),this._shiftFaceVertsAtOffset(A,v),this._shiftFaceVertsAtOffset(A,M),this._shiftFaceVertsAtOffset(A,y),this._shiftFaceVertsAtOffset(A,F),this._shiftFaceVertsAtOffset(A,x),this._shiftFaceVertsAtOffset(A,C);let at=O,gt=z,nt=P;O=$,z=R,P=L,$=Y,R=U,L=X,Y=W,U=w,X=k,W=at,w=gt,k=nt,St=this._getVertexSumInline(O,z,P)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var us=(N,t)=>N-t,Re=class{set origin(t){this._origin=tt.parse(t)}get origin(){return tt.toString(this._origin)}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}set tile(t){this._tile=tt.parse(t||" "),this._tile.x&&(this._tile=tt.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=tt.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=tt.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return tt.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new be,this.voxColorToColorId=new Map,this.voxels=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=tt.parse("x y z"),this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._tile=tt.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=tt.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0,this.bounds=new he}recomputeModelAndMaterialBounds(){let{voxels:t,bounds:s,materials:{materials:e}}=this,r=[];s.reset();for(let d of e){let p=d.bounds;p.reset(),r.push(p)}let a=e.length-1;if(!t)return;let[o,n,i,l,f,c]=Xt(t.size),m=Ft(t.size[0]),h=Ft(t.size[1]),u=Ft(t.size[2]);for(let d=o;d<=n;d++)for(let p=i;p<=l;p++)for(let v=f;v<=c;v++){let M=t.getPaletteIndexAt(d,p,v);if(M===Fe)continue;let y=d+m,F=p+h,x=v+u,V=(t.colorForPaletteIndex(M)&4278190080)>>24;V<=a&&r[V].set(y,F,x),s.set(y,F,x)}}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:a}=t,{voxels:o}=this,n=ue.maximumDeformCount(this);this.recomputeModelAndMaterialBounds(),this.faceCount=0,this.vertCount=0;let{maxFaces:i}=t,l=n>0,[f,c,m,h,u,d]=Xt(o.size);s.clear();let p=this.materials.materials,v=Ft(o.size[0]),M=Ft(o.size[1]),y=Ft(o.size[2]);for(let F=f;F<=c;F++)for(let x=m;x<=h;x++)for(let C=u;C<=d;C++){let V=o.getPaletteIndexAt(F,x,C);if(V===Fe)continue;let g=F+v,_=x+M,b=C+y,I=g<<16,A=b<<8,E=(I|A|_)*(1<<28),S=(I|_<<8|b)*(1<<28),T=(_<<16|A|g)*(1<<28);for(let Z=0,O=Vs.length;Z<O;Z++){let z=Is[Z],P,$=F+z[0],R=x+z[1],L=C+z[2];if($<f||$>c||R<m||R>h||L<u||L>d?P=0:P=o.getPaletteIndexAt($,R,L),this._createFace(o,t,p,F,x,C,v,M,y,V,P,Z,l,s)){let U=this.faceCount-1;if(this.faceCount>=i)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[U]=E+U,r[U]=S+U,a[U]=T+U}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=a.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(us),t.voxelXYZFaceIndices.sort(us),t.voxelYZXFaceIndices.sort(us),Ae.fixClampedLinks(this,t),ue.changeShape(this,t,this._shape),ue.deform(this,t,n),ue.warpAndScatter(this,t),Ee.calculateNormals(this,t),Ye.transformVertices(this,t),Oe.calculateLights(this,t),Te.calculateAmbientOcclusion(this,t),Be.combineColors(this,t),Ze.assignUVs(this,t),Pe.simplify(this,t),ke.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={offset:{x:0,y:0,z:0},rescale:1};if(t===_s)return e;let r,a,o,n,i,l,{faceVertIndices:f,faceCulled:c,vertX:m,vertY:h,vertZ:u}=s,d=Ft(this.voxels.size[0]),p=Ft(this.voxels.size[1]),v=Ft(this.voxels.size[2]);if(!t)r=this.bounds.minX,n=this.bounds.maxX+1,a=this.bounds.minY,i=this.bounds.maxY+1,o=this.bounds.minZ,l=this.bounds.maxZ+1;else{r=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY,i=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY,d=p=v=0;for(let x=0,C=this.faceCount;x<C;x++){if(c.get(x)===1)continue;let V=x*4,g=f[V],_=f[V+1],b=f[V+2],I=f[V+3],A=m[g],E=h[g],S=u[g],T=m[_],Z=h[_],O=u[_],z=m[b],P=h[b],$=u[b],R=m[I],L=h[I],Y=u[I];r=Math.min(r,A,T,z,R),a=Math.min(a,E,Z,P,L),o=Math.min(o,S,O,$,Y),n=Math.max(n,A,T,z,R),i=Math.max(i,E,Z,P,L),l=Math.max(l,S,O,$,Y)}if(t===me){let[x,C,V,g,_,b]=Xt(this.voxels.size),I=(C-x+1)/(n-r),A=(g-V+1)/(i-a),E=(b-_+1)/(l-o);e.rescale=Math.min(I,A,E)}}let M=-(r+n)/2,y=-(a+i)/2,F=-(o+l)/2;return this._origin.nx&&(M=-r),this._origin.px&&(M=-n),this._origin.ny&&(y=-a),this._origin.py&&(y=-i),this._origin.nz&&(F=-o),this._origin.pz&&(F=-l),e.offset.x=M+d,e.offset.y=y+p,e.offset.z=F+v,e}_createFace(t,s,e,r,a,o,n,i,l,f,c,m,h,u){let d=t.colorForPaletteIndex(f),p=(d&4278190080)>>24,v=e[p];if(v.opacity===0)return!1;if(c!==Fe){let K=(t.colorForPaletteIndex(c)&4278190080)>>24;if(!e[K].isTransparent&&!v.wireframe)return!1;if(!(!v.isTransparent&&!v.wireframe)){if(!(v.isTransparent&&!v.wireframe&&c!==0&&e[(t.colorForPaletteIndex(c)&4278190080)>>24].wireframe))return!1}}let M=this._isFacePlanar(v,r,a,o,m,v._flatten,this._flatten),y=this._isFacePlanar(v,r,a,o,m,v._clamp,this._clamp);if(this._isFacePlanar(v,r,a,o,m,v._skip,this._skip))return!1;let{faceVertIndices:x,faceVertColorR:C,faceVertColorG:V,faceVertColorB:g,faceFlattened:_,faceClamped:b,faceSmooth:I,faceCulled:A,faceMaterials:E,faceNameIndices:S,faceVertUs:T,faceVertVs:Z}=s,{faceCount:O}=this,z=O*4,P=(d&255)/255,$=((d&65280)>>8)/255,R=((d&16711680)>>16)/255;x[z]=this._createVertex(s,v,r,a,o,P,$,R,n,i,l,m,0,M,y,u),x[z+1]=this._createVertex(s,v,r,a,o,P,$,R,n,i,l,m,1,M,y,u),x[z+2]=this._createVertex(s,v,r,a,o,P,$,R,n,i,l,m,2,M,y,u),x[z+3]=this._createVertex(s,v,r,a,o,P,$,R,n,i,l,m,3,M,y,u);for(let K=0;K<4;K++)C[z+K]=P,V[z+K]=$,g[z+K]=R;_.set(O,M?1:0),b.set(O,y?1:0),I.set(O,0),A.set(O,0),E[O]=p,S[O]=m;let L=ws[m],Y=L[0],U=L[1],X=r+n,W=a+i,w=o+l,k=X*Y[0]+W*Y[1]+w*Y[2],D=X*U[0]+W*U[1]+w*U[2];for(let K=0;K<4;K++)T[z+K]=k,Z[z+K]=D;return h&&Ae.linkVertices(this,s,O),this.faceCount++,!0}_createVertex(t,s,e,r,a,o,n,i,l,f,c,m,h,u,d,p){let v=Cs[m][h],M=e+v[0],y=r+v[1],F=a+v[2],x=M+l<<20|y+f<<10|F+c,{_clamp:C,_flatten:V}=this,{vertDeformCount:g,vertDeformDamping:_,vertDeformStrength:b,vertWarpAmplitude:I,vertWarpFrequency:A,vertScatter:E,vertX:S,vertY:T,vertZ:Z,vertLinkCounts:O,vertFullyClamped:z,vertRing:P,vertClampedX:$,vertClampedY:R,vertClampedZ:L,vertColorR:Y,vertColorG:U,vertColorB:X,vertColorCount:W,vertFlattenedX:w,vertFlattenedY:k,vertFlattenedZ:D}=t,{deform:K,warp:et,scatter:ot}=s,B;if(p.has(x)?(B=p.get(x),K?g[B]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,B)&&(b[B]=K.strength,_[B]=K.damping,g[B]=K.count):(g[B]=0,_[B]=0,b[B]=0),et?I[B]!==0&&(et.amplitude<I[B]||et.amplitude===I[B]&&et.frequency>A[B])&&(I[B]=et.amplitude,A[B]=et.frequency):(I[B]=0,A[B]=0),ot?E[B]!==0&&Math.abs(ot)<Math.abs(E[B])&&(E[B]=ot):E[B]=0):(B=this.vertCount++,p.set(x,B),S[B]=M,T[B]=y,Z[B]=F,K?(_[B]=K.damping,g[B]=K.count,b[B]=K.strength,O[B]=0,z.set(B,0)):g[B]=0,et?(I[B]=et.amplitude,A[B]=et.frequency):I[B]=0,ot?E[B]=ot:E[B]=0,W[B]=0,P[B]=0,$.set(B,0),R.set(B,0),L.set(B,0),w.set(B,0),k.set(B,0),D.set(B,0)),this._setIsVertexPlanar(s,M,y,F,s._flatten,V,w,k,D,B),this._setIsVertexPlanar(s,M,y,F,s._clamp,C,$,R,L,B),s.fade){let ft=W[B],mt=B*6;Y[mt+ft]=o,U[mt+ft]=n,X[mt+ft]=i,W[B]++}return B}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:a}=t,o=e[s],n=a[s],i=r[s];return o===1?i*(n+1):i*(1-Math.pow(o,n+1))/(1-o)}_isFacePlanar(t,s,e,r,a,o,n){let i=o,l=t.bounds;if(i||(i=n,l=this.bounds),!i)return!1;switch(a){case 0:return i.x||i.nx&&s===l.minX;case 1:return i.x||i.px&&s===l.maxX;case 2:return i.y||i.ny&&e===l.minY;case 3:return i.y||i.py&&e===l.maxY;case 4:return i.z||i.nz&&r===l.minZ;case 5:return i.z||i.pz&&r===l.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,a,o,n,i,l,f){let c=a,m=t.bounds;c||(c=o,m=this.bounds),c?(n.set(f,c.x||c.nx&&s<m.minX+.5||c.px&&s>m.maxX+.5?1:n.get(f)|0),i.set(f,c.y||c.ny&&e<m.minY+.5||c.py&&e>m.maxY+.5?1:i.get(f)|0),l.set(f,c.z||c.nz&&r<m.minZ+.5||c.pz&&r>m.maxZ+.5?1:l.get(f)|0)):(n.set(f,n.get(f)|0),i.set(f,i.get(f)|0),l.set(f,l.get(f)|0))}};var Le=class{constructor(t,s,e,r,a,o,n){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=a,this.size=o,this.detail=n}};var Ys={linecontinuation:/_\s*[\r\n]/gm,modelparts:new RegExp(/\s*(\/\/(.*?)\r?\n)/.source+"|"+/\s*(texture|light|model|material|voxels)\s+/.source+"|"+/\s*([^=,\r\n]+=\s*data:image.*?base64,.*$)\s*/.source+"|"+/\s*([^=,\r\n]+=[^\r\n=;,/]+)\s*/.source+"|"+/\s*([A-Za-z ()\d -]+)\s*/.source,"gm")},Ps=["size","materials","textures","lights","voxels"],ks=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Rs=["color"],Ls=["direction","position","distance","size","detail"],Us=["id","image"],$s=["cube"],qs=["colors"],Hs=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],Ue=class{static readFromString(t,s={},e=!1){let r=this._parse(t);return this._validateModel(r,s),this._createModel(r,s,e)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,r=null;return Array.from(t.replaceAll(Ys.linecontinuation," ").matchAll(Ys.modelparts),o=>o[0].trim()).filter(o=>o).forEach(function(o){if(!o.startsWith("//"))if(o==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(o==="light")e={color:"#FFF"},s.lights.push(e);else if(o==="model")e=s;else if(o==="material")e={},s.materials.push(e);else if(o==="voxels")e=s,r="";else if(r!==null)r+=o.replace(/\s/g,"");else{let n=o.indexOf("=");if(n===-1)throw new Error(`SyntaxError: Invalid definition '${o}'.`);let i=o.substring(0,n).trim().toLowerCase(),l=o.substring(n+1).trim();e[i]=l}},this),s.voxels=r,s}static _createModel(t,s,e){let r=new Re;r.size=this._parseXYZInt("size",t.size,null,!0),r.scale=this._parseXYZFloat("scale",t.scale,"1",!0),r.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),r.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),r.simplify=t.simplify!=="false",t.resize===ts?r.resize=ts:t.resize===me?r.resize=me:t.resize?r.resize=null:t.autoresize==="true"&&(r.resize=me),r.shape=t.shape,r.wireframe=t.wireframe==="true"||!1,r.origin=t.origin||"x y z",r.flatten=t.flatten,r.clamp=t.clamp,r.skip=t.skip,r.tile=t.tile,r.setAo(this._parseAo(t.ao)),r.aoSides=t.aosides,r.aoSamples=parseInt(t.aosamples||50,10),r.data=this._parseVertexData(t.data,"model"),t.lights.some(i=>i.size)&&r.materials.createMaterial(He,We,1,0,!1,!1,1,0,!1,1,!1,Jt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0);for(let i of t.lights)this._createLight(r,i);for(let i of t.textures)this._createTexture(r,i);let a=new Map,o=new Map,n=new Set;for(let i of t.materials)this._createMaterial(r,i,a,o,n);if(r.shell=this._parseShell(t.shell),this._resolveShellColors(r.shell,r,a,o),r.materials.forEach(function(i){this._resolveShellColors(i.shell,r,a,o)},this),e||this._createVoxels(r,t.voxels,a,o),s){for(let[i,l]of Object.entries(s))if(t[i])switch(l){case"int":r[i]=parseInt(t[i],10);break;case"float":r[i]=parseFloat(t[i]);break;case"string":r[i]=t[i];break;case"boolean":r[i]=t[i]==="true";break;default:throw new Error(`Unknown type ${l} for field ${i}`)}}return r}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=Ut.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new Le(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s,e,r,a){let o=We;s.lighting===ye&&(o=ye),s.lighting===ne&&(o=ne),s.lighting===le&&(o=le),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let n=null;t.simplify&&s.simplify==="false"&&(n=!1),!t.simplify&&s.simplify==="true"&&(n=!0);let i=t.materials.createMaterial(s.type||Me,o,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,n,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0)),l=t.materials.materials.indexOf(i);s.deform&&i.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&i.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(i.scatter=parseFloat(s.scatter)),i.flatten=s.flatten,i.clamp=s.clamp,i.skip=s.skip,i.setAo(this._parseAo(s.ao)),i.shell=this._parseShell(s.shell),i.lights=s.lights!=="false",i.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,i.data);let f=/\s*\(\s*(\d+)\s*\)\s*/g,c=/([A-Z][a-z]*)\s*(\(\d+\))?[:]\s*(#[a-fA-F0-9]*)\s*/g;s.colors=s.colors.replace(f,"($1)"),s.colors=s.colors.replace(c,"$1$2:$3 ");let m=s.colors.split(" ").filter(u=>u),{voxColorToColorId:h}=t;m.forEach(function(u){let d=u.split(":")[0];d.includes("(")&&(d=d.split("(")[0]);let p=u.split(":")[1];if(a.has(d))throw new Error(`SyntaxError: Duplicate ID '${d}'`);if(!e.has(d)){let v=hs(p);if(!/^[A-Z][a-z]*$/.test(d))throw new Error(`SyntaxError: Invalid color ID '${d}'`);e.set(d,v),r.set(d,l),a.add(d),h.set((v|l<<24)>>>0,d)}},this)}static _createVoxels(t,s,e,r){let a=null,o=[];if(s.matchAll)o=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let C=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,V;for(;(V=C.exec(s))!==null;)o.push(V);o=o[Symbol.iterator]()}let n=this._unpackRle(o),i=t.size.x*t.size.y*t.size.z,l=0,f=e.size,c=1;f>=2&&(c=2),f>=4&&(c=4),f>=16&&(c=8);let m=t.voxels=new Wt([t.size.x,t.size.y,t.size.z],c);for(let C=0;C<n.length;C++)l+=n[C][1];if(l!==i)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${i} voxels) but the voxel matrix contains ${l} voxels.`);let h={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new he;let u=null,d=null,p=t.bounds,v=t.size,M=Ft(v.x),y=Ft(v.y),F=Ft(v.z),x=t.materials.materials;for(let C=0,V=n.length;C<V;C++){let g=null,_=n[C],b=_[0];b!=="-"&&(g=b,e.has(g)||(a===null&&(a=t.materials.createMaterial(Me,We,.5,0,!1,1,!1)),u=t.materials.materials.indexOf(a),e.set(g,hs("#FF00FF")),r.set(g,u)),u=r.get(g),d=x[u].bounds);let I=_[1];if(e.has(g)){let A=e.get(g);this._setVoxels(p,d,u,M,y,F,A,I,h,m)}else this._advanceContext(I,M,y,F,h)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=Ut.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),a=parseFloat(t.split(" ")[2]||1),o=parseFloat(t.split(" ")[3]||70);o=Math.max(0,Math.min(90,Math.round(o))),s={color:e,maxDistance:r,strength:a,angle:o}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let a=0;a<r.length/2;a++){let o=r[a*2+0],n=r[a*2+1];if(!/^[A-Z][a-z]*$/.test(o)||!/^([-+]?[0-9]*\.?[0-9]+)*$/.test(n)){e=!0;break}else s.push({colorId:r[a*2],distance:r[a*2+1]})}}if(e)throw new Error(`SyntaxError: shell '${t}' must be 'none' or one or more color ID's and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,a){return r.distance-a.distance})),s}static _resolveShellColors(t,s,e,r){!t||t.length===0||t.forEach(function(a){if(!e.has(a.colorId))throw new Error(`SyntaxError: shell color ID '${a.colorId}' is not a known color`);a.voxBgr=e.get(a.colorId),a.materialIndex=r.get(a.colorId)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\s+/),a=null;for(let n=0;n<r.length;n++){let i=r[n];if(isNaN(i))a={name:i,values:[]},e.push(a);else if(a)a.values.push(parseFloat(i));else break}let o=e.length===0;for(let n=0;n<e.length;n++)o=o||e[n].values.length===0||e[n].values.length>=4;if(o)throw new Error(`SyntaxError: The data property '${e.data}' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch{e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let a=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(a.x),y:Math.trunc(a.y),z:Math.trunc(a.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let a=s.split(/[\s/]+/);if(a.length===1&&r&&(a.push(a[0]),a.push(a[0])),a.length!==3)throw new Error(`SyntaxError: '${t}' must have three values.`);if(a={x:parseFloat(a[0]),y:parseFloat(a[1]),z:parseFloat(a[2])},Number.isNaN(a.x)||Number.isNaN(a.y)||Number.isNaN(a.z))throw new Error(`SyntaxError: Invalid value '${s}' for ${t}'.`);return a}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let a=r.value[0],o=a[0],n=a[1];if(o>="0"&&o<="9")e=parseInt(a,10);else if(a==="("){let i=this._unpackRle(t);for(let l=0;l<e;l++)Array.prototype.push.apply(s,i);e=1}else{if(a===")")return s;a.length>1&&o>="A"&&o<="Z"&&n===o?(e>1?(s.push([o,e]),s.push([o,a.length-1])):s.push([o,a.length]),e=1):a.length>1&&o==="-"&&n==="-"?(e>1?(s.push(["-",e]),s.push(["-",a.length-1])):s.push(["-",a.length]),e=1):(s.push([a,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,a,o,n,i,l,f){let{x:c,y:m,z:h,maxx:u,maxy:d,minx:p,miny:v}=l;c-=r,m-=a,h-=o,p-=r,v-=a,u-=r,d-=a;let M=(n|e<<24)>>>0;for(;i-- >0;)t.set(c,m,h),s.set(c,m,h),f.setColorAt(c,m,h,M),c++,c>u&&(c=p,m++),m>d&&(m=v,h++);l.x=c+r,l.y=m+a,l.z=h+o}static _advanceContext(t,s,e,r,a){let{x:o,y:n,z:i,maxx:l,maxy:f,minx:c,miny:m}=a;for(o-=s,n-=e,i-=r,c-=s,m-=e,l-=s,f-=e;t-- >0;)o++,o>l&&(o=c,n++),n>f&&(n=m,i++);a.x=o+s,a.y=n+e,a.z=i+r}static _validateModel(t,s){this._validateProperties(t,Ps,[...Object.keys(s),...ks],"model");for(let e of t.lights)this._validateLight(e);for(let e of t.textures)this._validateTexture(e);for(let e of t.materials)this._validateMaterial(e)}static _validateLight(t){if(this._validateProperties(t,Rs,Ls,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,Us,$s,"texture")}static _validateMaterial(t){this._validateProperties(t,qs,Hs,"material")}static _validateProperties(t,s,e,r){for(let a of s)if(!Object.hasOwn(t,a))throw new Error("SyntaxError: "+r+' is missing mandatory property "'+a+'".');for(let a in t)if(!s.includes(a)&&!e.includes(a))throw new Error("SyntaxError: "+r+' has unrecognized property "'+a+'".')}};var $e=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),a=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=wt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=wt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=wt.create(new Uint8Array(r).buffer,1,0),this.faceClamped=wt.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=wt.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=wt.create(new Uint8Array(r).buffer,1,0),this.faceCulled=wt.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(a),this.faceVertNormalX=new Float32Array(a),this.faceVertNormalY=new Float32Array(a),this.faceVertNormalZ=new Float32Array(a),this.faceVertFlatNormalX=new Float32Array(a),this.faceVertFlatNormalY=new Float32Array(a),this.faceVertFlatNormalZ=new Float32Array(a),this.faceVertSmoothNormalX=new Float32Array(a),this.faceVertSmoothNormalY=new Float32Array(a),this.faceVertSmoothNormalZ=new Float32Array(a),this.faceVertBothNormalX=new Float32Array(a),this.faceVertBothNormalY=new Float32Array(a),this.faceVertBothNormalZ=new Float32Array(a),this.faceVertColorR=new Float32Array(a),this.faceVertColorG=new Float32Array(a),this.faceVertColorB=new Float32Array(a),this.faceVertLightR=new Float32Array(a),this.faceVertLightG=new Float32Array(a),this.faceVertLightB=new Float32Array(a),this.faceVertAO=new Float32Array(a),this.faceVertUs=new Float32Array(a),this.faceVertVs=new Float32Array(a),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var xt=new Map,ae=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r=ae._getAllShells(t),a=r.map(n=>n.length).reduce((n,i)=>Math.max(n,i),0)+1,o={materials:[],groups:[],indices:new Uint32Array(e*4*6*a),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3*a),normals:new Float32Array(e*4*3*a),colors:new Float32Array(e*4*3*a),uvs:new Float32Array(e*4*2*a),bounds:{minX:1/0,minY:1/0,minZ:1/0,maxX:-1/0,maxY:-1/0,maxZ:-1/0,centerX:0,centerY:0,centerZ:0,radius:0},data:null};return t.materials.baseMaterials.forEach(function(n){n.index=o.materials.length,o.materials.push(ae._generateMaterial(n,t))},this),xt.clear(),ae._generateAll(t,o,s,r),o}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===ce?ce:Jt};return t.type!==Ge&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e,r){let a=t.materials.materials,{faceMaterials:o,faceCulled:n}=e,i=t.scale.x,l=t.scale.y,f=t.scale.z;t.materials.baseMaterials.forEach(function(V){let g=s.indicesIndex,_=!1;for(let b=0,I=t.faceCount;b<I;b++){if(n.get(b)!==0)continue;let A=o[b],E=a[A];E._baseMaterial===V&&(ae._generateFace(t,e,b,s),_||(_=!0));for(let S=0,T=r.length;S<T;S++){let[Z,O,z,P,$,R]=r[S];O._baseMaterial===V&&Z===E&&(ae._generateShellFace(t,e,b,s,z*i,z*l,z*f,P,$,R,O,i,l,f),_||(_=!0))}}if(_){let b=s.indicesIndex;s.groups.push({start:g,count:b-g,materialIndex:V.index})}},this);let c=s.maxIndex+1,m=1/0,h=1/0,u=1/0,d=-1/0,p=-1/0,v=-1/0;for(let V=0,g=c*3;V<g;V+=3){let _=s.positions[V],b=s.positions[V+1],I=s.positions[V+2];m=Math.min(m,_),h=Math.min(h,b),u=Math.min(u,I),d=Math.max(d,_),p=Math.max(p,b),v=Math.max(v,I)}let M=(m+d)/2,y=(h+p)/2,F=(u+v)/2,x=-1/0;for(let V=0,g=c*3;V<g;V+=3){let _=s.positions[V],b=s.positions[V+1],I=s.positions[V+2],A=_-M,E=b-y,S=I-F;x=Math.max(x,A*A+E*E+S*S)}let C=Math.sqrt(x);s.bounds.minX=m,s.bounds.minY=h,s.bounds.minZ=u,s.bounds.maxX=d,s.bounds.maxY=p,s.bounds.maxZ=v,s.bounds.centerX=M,s.bounds.centerY=y,s.bounds.centerZ=F,s.bounds.radius=C,s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,c*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,c*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,c*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,c*2)}static _generateFace(t,s,e,r){let{faceVertIndices:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,vertX:l,vertY:f,vertZ:c,faceVertColorR:m,faceVertColorG:h,faceVertColorB:u,faceVertUs:d,faceVertVs:p,faceMaterials:v,faceSmooth:M}=s,F=t.materials.materials[v[e]],x=a[e*4],C=a[e*4+1],V=a[e*4+2],g=a[e*4+3],_=l[x],b=f[x],I=c[x],A=l[C],E=f[C],S=c[C],T=l[V],Z=f[V],O=c[V],z=l[g],P=f[g],$=c[g],R=o[e*4],L=n[e*4],Y=i[e*4],U=o[e*4+1],X=n[e*4+1],W=i[e*4+1],w=o[e*4+2],k=n[e*4+2],D=i[e*4+2],K=o[e*4+3],et=n[e*4+3],ot=i[e*4+3],B=m[e*4],ft=h[e*4],mt=u[e*4],zt=m[e*4+1],Vt=h[e*4+1],it=u[e*4+1],St=m[e*4+2],at=h[e*4+2],gt=u[e*4+2],nt=m[e*4+3],At=h[e*4+3],Ct=u[e*4+3],Tt=d[e*4],_t=p[e*4],Nt=d[e*4+1],Et=p[e*4+1],Yt=d[e*4+2],Ot=p[e*4+2],kt=d[e*4+3],Qt=p[e*4+3];if(F.side===de){let H,j,G;H=_,j=b,G=I,_=T,b=Z,I=O,T=H,Z=j,O=G,H=R,j=L,G=Y,R=w,L=k,Y=D,w=H,k=j,D=G,H=B,j=ft,G=mt,B=St,ft=at,mt=gt,St=H,at=j,gt=G,H=Tt,j=_t,Tt=Yt,_t=Ot,Yt=H,Ot=j}let $t=M.get(e)===1;if(!(F.lighting===ne||F.lighting===le&&$t)){let H=w+U+R,j=k+X+L,G=D+W+Y,rt=R+K+w,ct=L+et+k,Pt=Y+ot+D,ee=Math.sqrt(H*H+j*j+G*G),q=Math.sqrt(rt*rt+ct*ct+Pt*Pt),Q=1/ee,J=1/q;if(H*=Q,j*=Q,G*=Q,rt*=J,ct*=J,Pt*=J,F.lighting===ye){let dt=Math.sqrt(H*H+j*j+G*G)+Math.sqrt(rt*rt+ct*ct+Pt*Pt),yt=1/dt;H=rt=(H+rt)*yt,j=ct=(j+ct)*yt,G=Pt=(G+Pt)*yt}R=H,L=j,Y=G,U=H,X=j,W=G,w=H,k=j,D=G,K=rt,et=ct,ot=Pt}let It=r.indices,vt=r.positions,Mt=r.normals,ht=r.colors,bt=r.uvs,jt=_*3+b*61673+I*87119+R*2766691+L*73091+Y*5040949+B*8636137+ft*2360719+mt*4739729+Math.round(Tt*1e3)*719959+Math.round(_t*1e3)*172741,te=A*3+E*61673+S*87119+U*2766691+X*73091+W*5040949+zt*8636137+Vt*2360719+it*4739729+Math.round(Nt*1e3)*719959+Math.round(Et*1e3)*172741,Rt=T*3+Z*61673+O*87119+w*2766691+k*73091+D*5040949+St*8636137+at*2360719+gt*4739729+Math.round(Yt*1e3)*719959+Math.round(Ot*1e3)*172741,lt=z*3+P*61673+$*87119+K*2766691+et*73091+ot*5040949+nt*8636137+At*2360719+Ct*4739729+Math.round(kt*1e3)*719959+Math.round(Qt*1e3)*172741,ut=xt.has(jt),pt=xt.has(te),qt=xt.has(Rt),oe=xt.has(lt),Zt,Lt,Bt,Dt;if(ut)Zt=xt.get(jt);else{Zt=r.maxIndex+1;let H=Zt*3,j=H+1,G=H+2,rt=Zt*2,ct=rt+1;r.maxIndex=Zt,vt[H]=_,vt[j]=b,vt[G]=I,Mt[H]=R,Mt[j]=L,Mt[G]=Y,ht[H]=B,ht[j]=ft,ht[G]=mt,bt[rt]=Tt,bt[ct]=_t,xt.set(jt,Zt)}if(pt)Lt=xt.get(te);else{Lt=r.maxIndex+1;let H=Lt*3,j=H+1,G=H+2,rt=Lt*2,ct=rt+1;r.maxIndex=Lt,vt[H]=A,vt[j]=E,vt[G]=S,Mt[H]=U,Mt[j]=X,Mt[G]=W,ht[H]=zt,ht[j]=Vt,ht[G]=it,bt[rt]=Nt,bt[ct]=Et,xt.set(te,Lt)}if(qt)Bt=xt.get(Rt);else{Bt=r.maxIndex+1;let H=Bt*3,j=H+1,G=H+2,rt=Bt*2,ct=rt+1;r.maxIndex=Bt,vt[H]=T,vt[j]=Z,vt[G]=O,Mt[H]=w,Mt[j]=k,Mt[G]=D,ht[H]=St,ht[j]=at,ht[G]=gt,bt[rt]=Yt,bt[ct]=Ot,xt.set(Rt,Bt)}if(oe)Dt=xt.get(lt);else{Dt=r.maxIndex+1;let H=Dt*3,j=H+1,G=H+2,rt=Dt*2,ct=rt+1;r.maxIndex=Dt,vt[H]=z,vt[j]=P,vt[G]=$,Mt[H]=K,Mt[j]=et,Mt[G]=ot,ht[H]=nt,ht[j]=At,ht[G]=Ct,bt[rt]=kt,bt[ct]=Qt,xt.set(lt,Dt)}let Ht=r.indicesIndex;It[Ht]=Bt,It[Ht+1]=Lt,It[Ht+2]=Zt,It[Ht+3]=Zt,It[Ht+4]=Dt,It[Ht+5]=Bt,r.indicesIndex+=6}static _generateShellFace(t,s,e,r,a,o,n,i,l,f,c){let{faceVertIndices:m,faceVertBothNormalX:h,faceVertBothNormalY:u,faceVertBothNormalZ:d,faceVertSmoothNormalX:p,faceVertSmoothNormalY:v,faceVertSmoothNormalZ:M,faceVertFlatNormalX:y,faceVertFlatNormalY:F,faceVertFlatNormalZ:x,vertX:C,vertY:V,vertZ:g,faceVertUs:_,faceVertVs:b,faceSmooth:I}=s,A=m[e*4],E=m[e*4+1],S=m[e*4+2],T=m[e*4+3],Z=C[A],O=V[A],z=g[A],P=C[E],$=V[E],R=g[E],L=C[S],Y=V[S],U=g[S],X=C[T],W=V[T],w=g[T],k=p[e*4],D=v[e*4],K=M[e*4],et=p[e*4+1],ot=v[e*4+1],B=M[e*4+1],ft=p[e*4+2],mt=v[e*4+2],zt=M[e*4+2],Vt=p[e*4+3],it=v[e*4+3],St=M[e*4+3],at,gt,nt,At,Ct,Tt,_t,Nt,Et,Yt,Ot,kt,Qt=I.get(e)===1;switch(c.lighting){case ne:at=p[e*4],gt=v[e*4],nt=M[e*4],At=p[e*4+1],Ct=v[e*4+1],Tt=M[e*4+1],_t=p[e*4+2],Nt=v[e*4+2],Et=M[e*4+2],Yt=p[e*4+3],Ot=v[e*4+3],kt=M[e*4+3];break;case le:Qt?(at=h[e*4],gt=u[e*4],nt=d[e*4],At=h[e*4+1],Ct=u[e*4+1],Tt=d[e*4+1],_t=h[e*4+2],Nt=u[e*4+2],Et=d[e*4+2],Yt=h[e*4+3],Ot=u[e*4+3],kt=d[e*4+3]):(at=y[e*4],gt=F[e*4],nt=x[e*4],At=y[e*4+1],Ct=F[e*4+1],Tt=x[e*4+1],_t=y[e*4+2],Nt=F[e*4+2],Et=x[e*4+2],Yt=y[e*4+3],Ot=F[e*4+3],kt=x[e*4+3]);break;default:at=y[e*4],gt=F[e*4],nt=x[e*4],At=y[e*4+1],Ct=F[e*4+1],Tt=x[e*4+1],_t=y[e*4+2],Nt=F[e*4+2],Et=x[e*4+2],Yt=y[e*4+3],Ot=F[e*4+3],kt=x[e*4+3];break}let $t=_[e*4],It=b[e*4],vt=_[e*4+1],Mt=b[e*4+1],ht=_[e*4+2],bt=b[e*4+2],jt=_[e*4+3],te=b[e*4+3];if(c.side===de){let q,Q,J;q=Z,Q=O,J=z,Z=L,O=Y,z=U,L=q,Y=Q,U=J,q=at,Q=gt,J=nt,at=_t,gt=Nt,nt=Et,_t=q,Nt=Q,Et=J,q=$t,Q=It,$t=ht,It=bt,ht=q,bt=Q,q=k,Q=D,J=K,k=ft,D=mt,K=zt,ft=q,mt=Q,zt=J}if(Z+=a*k,O+=o*D,z+=n*K,P+=a*et,$+=o*ot,R+=n*B,L+=a*ft,Y+=o*mt,U+=n*zt,X+=a*Vt,W+=o*it,w+=n*St,!(c.lighting===ne||c.lighting===le&&Qt)){let q=_t+At+at,Q=Nt+Ct+gt,J=Et+Tt+nt,dt=at+Yt+_t,yt=gt+Ot+Nt,re=nt+kt+Et,ge=Math.sqrt(q*q+Q*Q+J*J),ve=Math.sqrt(dt*dt+yt*yt+re*re),fe=1/ge,ie=1/ve;if(q*=fe,Q*=fe,J*=fe,dt*=ie,yt*=ie,re*=ie,c.lighting===ye){let Ve=Math.sqrt(q*q+Q*Q+J*J)+Math.sqrt(dt*dt+yt*yt+re*re),pe=1/Ve;q=dt=(q+dt)*pe,Q=yt=(Q+yt)*pe,J=re=(J+re)*pe}at=q,gt=Q,nt=J,At=q,Ct=Q,Tt=J,_t=q,Nt=Q,Et=J,Yt=dt,Ot=yt,kt=re}let Rt=r.indices,lt=r.positions,ut=r.normals,pt=r.colors,qt=r.uvs,oe=Z*3+O*61673+z*87119+at*2766691+gt*73091+nt*5040949+i*8636137+l*2360719+f*4739729+Math.round($t*1e3)*719959+Math.round(It*1e3)*172741,Zt=P*3+$*61673+R*87119+At*2766691+Ct*73091+Tt*5040949+i*8636137+l*2360719+f*4739729+Math.round(vt*1e3)*719959+Math.round(Mt*1e3)*172741,Lt=L*3+Y*61673+U*87119+_t*2766691+Nt*73091+Et*5040949+i*8636137+l*2360719+f*4739729+Math.round(ht*1e3)*719959+Math.round(bt*1e3)*172741,Bt=X*3+W*61673+w*87119+Yt*2766691+Ot*73091+kt*5040949+i*8636137+l*2360719+f*4739729+Math.round(jt*1e3)*719959+Math.round(te*1e3)*172741,Dt=xt.has(oe),Ht=xt.has(Zt),H=xt.has(Lt),j=xt.has(Bt),G,rt,ct,Pt;if(Dt)G=xt.get(oe);else{G=r.maxIndex+1;let q=G*3,Q=q+1,J=q+2,dt=G*2,yt=dt+1;r.maxIndex=G,lt[q]=Z,lt[Q]=O,lt[J]=z,ut[q]=at,ut[Q]=gt,ut[J]=nt,pt[q]=i,pt[Q]=l,pt[J]=f,qt[dt]=$t,qt[yt]=It,xt.set(oe,G)}if(Ht)rt=xt.get(Zt);else{rt=r.maxIndex+1;let q=rt*3,Q=q+1,J=q+2,dt=rt*2,yt=dt+1;r.maxIndex=rt,lt[q]=P,lt[Q]=$,lt[J]=R,ut[q]=At,ut[Q]=Ct,ut[J]=Tt,pt[q]=i,pt[Q]=l,pt[J]=f,qt[dt]=vt,qt[yt]=Mt,xt.set(Zt,rt)}if(H)ct=xt.get(Lt);else{ct=r.maxIndex+1;let q=ct*3,Q=q+1,J=q+2,dt=ct*2,yt=dt+1;r.maxIndex=ct,lt[q]=L,lt[Q]=Y,lt[J]=U,ut[q]=_t,ut[Q]=Nt,ut[J]=Et,pt[q]=i,pt[Q]=l,pt[J]=f,qt[dt]=ht,qt[yt]=bt,xt.set(Lt,ct)}if(j)Pt=xt.get(Bt);else{Pt=r.maxIndex+1;let q=Pt*3,Q=q+1,J=q+2,dt=Pt*2,yt=dt+1;r.maxIndex=Pt,lt[q]=X,lt[Q]=W,lt[J]=w,ut[q]=Yt,ut[Q]=Ot,ut[J]=kt,pt[q]=i,pt[Q]=l,pt[J]=f,qt[dt]=jt,qt[yt]=te,xt.set(Bt,Pt)}let ee=r.indicesIndex;Rt[ee]=ct,Rt[ee+1]=rt,Rt[ee+2]=G,Rt[ee+3]=G,Rt[ee+4]=Pt,Rt[ee+5]=ct,r.indicesIndex+=6}static _getAllShells(t){let s=[];return t.materials.forEach(function(e){let r;t.shell&&t.shell.length>0&&!e.shell&&(r=t.shell),e.shell&&e.shell.length>0&&(r=e.shell),r&&r.forEach(function(a){let o=a.voxBgr,n=(o>>16&255)/255,i=(o>>8&255)/255,l=(o>>0&255)/255;s.push([e,t.materials.materials[a.materialIndex],a.distance,l,i,n])},this)},this),s.sort((e,r)=>e[1]-r[1]),s}};var Kt=class{static generate(t){let s=[];t.materials.forEach(function(a){s.push(Kt._generateMaterial(a))},this);let e=new THREE.BufferGeometry;return Kt.updateGeometry(t,e,!0),new THREE.Mesh(e,s)}static updateGeometry(t,s,e=!0){for(let h of Object.keys(s.attributes))s.deleteAttribute(h);let r=s.boundingBox,a=s.boundingSphere,{positions:o,normals:n,colors:i,bounds:l,uvs:f,data:c,indices:m}=t;if(r||(r=s.boundingBox=new THREE.Box3),a||(a=s.boundingSphere=new THREE.Sphere),r.min.set(l.minX,l.minY,l.minZ),r.max.set(l.minX,l.minY,l.minZ),a.center.set(l.centerX,l.centerY,l.centerZ),a.radius=l.radius,s.setAttribute("position",new THREE.Float32BufferAttribute(o,3)),s.setAttribute("normal",new THREE.Float32BufferAttribute(n,3)),s.setAttribute("color",new THREE.Float32BufferAttribute(i,3)),f&&s.setAttribute("uv",new THREE.Float32BufferAttribute(f,2)),c)for(let h=0;h<c.length;h++)s.setAttribute(c[h].name,new THREE.Float32BufferAttribute(c[h].values,c[h].width));s.setIndex(new THREE.BufferAttribute(m,1)),s.clearGroups(),e?t.groups.forEach(function(h){s.addGroup(h.start,h.count,h.materialIndex)},this):s.setDrawRange(0,m.length),s.uvsNeedUpdate=!0}static _generateMaterial(t){switch(t.reflectivity=(1-t.roughness)*(t.metalness*.95+.05),t.shininess=Math.pow(10,5*Math.pow(1-t.roughness,1.1))*.1,t.side){case"back":t.side=THREE.BackSide;break;case"double":t.side=THREE.DoubleSide;break;default:t.side=THREE.FrontSide;break}t.map&&(t.map=Kt._generateTexture(t.map.image,THREE.sRGBEncoding,t.map.uscale,t.map.vscale,t.map.uoffset,t.map.voffset,t.map.rotation)),t.normalMap&&(t.normalMap=Kt._generateTexture(t.normalMap.image,THREE.LinearEncoding,t.normalMap.uscale,t.normalMap.vscale,t.normalMap.uoffset,t.normalMap.voffset,t.normalMap.rotation)),t.roughnessMap&&(t.roughnessMap=Kt._generateTexture(t.roughnessMap.image,THREE.LinearEncoding,t.roughnessMap.uscale,t.roughnessMap.vscale,t.roughnessMap.uoffset,t.roughnessMap.voffset,t.roughnessMap.rotation)),t.metalnessMap&&(t.metalnessMap=Kt._generateTexture(t.metalnessMap.image,THREE.LinearEncoding,t.metalnessMap.uscale,t.metalnessMap.vscale,t.metalnessMap.uoffset,t.metalnessMap.voffset,t.metalnessMap.rotation)),t.emissiveMap&&(t.emissiveMap=Kt._generateTexture(t.emissiveMap.image,THREE.sRGBEncoding,t.emissiveMap.uscale,t.emissiveMap.vscale,t.emissiveMap.uoffset,t.emissiveMap.voffset,t.emissiveMap.rotation)),t.matcap&&(t.matcap=Kt._generateTexture(t.matcap.image,THREE.sRGBEncoding)),t.reflectionMap&&(t.envMap=new THREE.TextureLoader().load(t.reflectionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularReflectionMapping,delete t.reflectionMap),t.refractionMap&&(t.envMap=new THREE.TextureLoader().load(t.refractionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularRefractionMapping,delete t.refractionMap);let s=null,e=t.type;switch(delete t.index,delete t.type,e){case"standard":delete t.reflectivity,delete t.shininess,s=new THREE.MeshStandardMaterial(t);break;case"basic":delete t.roughness,delete t.metalness,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,s=new THREE.MeshBasicMaterial(t);break;case"lambert":delete t.roughness,delete t.metalness,delete t.shininess,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshLambertMaterial(t);break;case"phong":delete t.roughness,delete t.metalness,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshPhongMaterial(t);break;case"matcap":delete t.roughness,delete t.metalness,delete t.wireframe,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshMatcapMaterial(t);break;case"toon":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshToonMaterial(t);break;case"normal":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.map,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshNormalMaterial(t);break;default:throw new Error(`SyntaxError: Unknown material type ${e}`)}return s}static _generateTexture(t,s,e,r,a,o,n){let i=new THREE.TextureLoader().load(t);return i.encoding=s,i.repeat.set(1/e,1/r),i.wrapS=THREE.RepeatWrapping,i.wrapT=THREE.RepeatWrapping,i.offset=new THREE.Vector2(a,o),i.rotation=n*Math.PI/180,i}};function ps(N){let t=new Blob([N],{type:"text/javascript"}),s=URL.createObjectURL(t),e=new Worker(s);return URL.revokeObjectURL(s),e}function ds(){return ps('var Ss=Object.defineProperty;var Zs=(w,t,s)=>t in w?Ss(w,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):w[t]=s;var xs=(w,t,s)=>(Zs(w,typeof t!="symbol"?t+"":t,s),s);var tt=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\\s+(?:none|-x|x|\\+x|-y|y|\\+y|-z|z|\\+z|\\s))+\\s*$/.test(t))throw new Error(`SyntaxError: Planar expression \'${t}\' is only allowed to be \'none\' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var ve="standard",qe="basic",ds="lambert",gs="phong",vs="matcap",Fs="toon",$e="normal",je="bounds",he="model",ys="skip",Ge="flat",Fe="quad",ae="smooth",ie="both",jt="front",pe="back",ce="double",As=["nx","px","ny","py","nz","pz"],Vs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Ms=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],_s=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],Cs=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var De=(w,t,s)=>Math.min(Math.max(w,t),s),Ut=class{static fromHex(t){let s=new Ut;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(De(t,0,1)*255),s=Math.round(De(s,0,1)*255),e=Math.round(De(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return Ut.fromHex(r)}clone(){let t=new Ut;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof Ut?Ut.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):Ut.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((o,n)=>o+n.r,0),e=this.g+t.reduce((o,n)=>o+n.g,0),r=this.b+t.reduce((o,n)=>o+n.b,0);return Ut.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var Ce=class{constructor(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p,v,F,y,A,d,C,_,g,M){switch(t=t||ve,t){case ve:case qe:case ds:case gs:case Fs:case vs:case $e:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||x&&x.cube||p&&p.cube||v&&v.cube)&&!(d===-1&&C===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(y&&A)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof o=="number"?o:0,this.transparent=!!n,this.refractionRatio=typeof i=="number"?i:.9,this.wireframe=!!a,this.side=c||jt,[jt,pe,ce].includes(this.side)||(this.side=jt),this.setEmissive(h,l),this.fog=typeof f=="boolean"?f:!0,this.map=m,this.normalMap=u,this.roughnessMap=x,this.metalnessMap=p,this.emissiveMap=v,this.matcap=F,this.reflectionMap=y,this.refractionMap=A,this.mapTransform={uscale:d||-1,vscale:C||-1,uoffset:_||0,voffset:g||0,rotation:M||0},this.aoActive=!1}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:Ut.fromHex(t),intensity:s}}get emissive(){return this._emissive}};var le=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var Ie=class{constructor(t,s,e,r,o){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._ao=void 0,this.lights=!0,this._side=o,this._colors=[],this.bounds=new le}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t==null?1:t,0),s=s==null?1:s,e=e==null?1:e,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}};var Ne=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p,v,F,y,A,d,C,_,g,M,N,I,V){f=f||jt,[jt,pe,ce].includes(f)||(f=jt);let b=f===ce?ce:jt,O=new Ce(t,e,r,i,a,c,h,l,b,m,u,x,p,v,F,y,A,d,C,_,g,M,N,I,V),E=O.baseId,T=this.baseMaterials.find(X=>X.baseId===E);T?O=T:this.baseMaterials.push(O);let Z=new Ie(O,s,o,n,f);return this.materials.push(Z),Z}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}getMaterialListIndex(t){return this.materials.indexOf(t)}};function we(w,t,s,e){let r=s*w;for(let o=0;o<s;){let n=r&7,i=r>>3,a=s-o,c=8-n,h=a<c?a:c,l=~(255<<h),f=t&l;t>>=h;let m=~(l<<n);e[i]=e[i]&m|f<<n,r+=h,o+=h}}var ts=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return we(t,s,1,this.view)}clear(){this.view.fill(0)}},es=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return we(t,s,2,this.view)}clear(){this.view.fill(0)}},ss=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return we(t,s,4,this.view)}clear(){this.view.fill(0)}},rs=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return we(t,s,8,this.view)}clear(){this.view.fill(0)}},os=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,o=0;for(let n=0;n<e;){let i=r&7,a=r>>3,c=e-n,h=8-i,l=c<h?c:h,f=s[a],m=~(255<<l);o|=(f>>i&m)<<n,r+=l,n+=l}return o>>>0}set(t,s){we(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},wt=class{static create(t,s,e,r=null){let o=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new ts(o);case 2:return new es(o);case 4:return new ss(o);case 8:return new rs(o);default:return new os(o)}}};var Es=0,ye=0,ns=128,ze=8;var Ts=255,Is=Ts<<24>>>0,as={NONE:0,PAINT:1,KEEP:2},Ht=1,xe=new Map,At=w=>Math.floor(w%2===0?w/2-1:w/2),Yt=w=>{let[t,s,e]=w,r=At(t),o=At(s),n=At(e),i=t-r-1,a=s-o-1,c=e-n-1,h=-r,l=-o,f=-n;return[h,i,l,a,f,c]},Xe=1,Ns=Xe*4;function is(w,t,s=null){let e=2**t-Ht,r=Ns*e,o=w[0]*w[1]*w[2]*t,n=Math.floor(o/8)+1,i=ze+r+n;s==null&&(typeof Buffer!="undefined"?s=Buffer.alloc(i).buffer:s=new ArrayBuffer(i));let a=new Uint8Array(s,0,ze),c=r/Ns,h=new Uint32Array(s,ze,c),l=wt.create(s,t,ze+r);return a[0]=Es,[a[1],a[2],a[3]]=w,a[4]=t,[s,h,l]}var Kt=class{constructor(t=null,s=8,e=null,r=null,o=0,n=null,i=0,a=null){xs(this,"createInverse",(t,s)=>{xe.clear();let e=t.size,[r,o,n,i,a,c]=Yt(e),{size:h}=this,l=new Kt(h),[f,m,u,x,p,v]=Yt(h);for(let F=f;F<=m;F+=1)for(let y=u;y<=x;y+=1)for(let A=p;A<=v;A+=1){if(this.getPaletteIndexAt(F,y,A)===0)continue;let C=F+s[0],_=y+s[1],g=A+s[2];if(C>o||C<r||_>i||_<n||g>c||g<a||!t.hasVoxelAt(C,_,g))l.setColorAt(F,y,A,Is);else{let M=t.getColorAt(C,_,g);l.setColorAt(F,y,A,M)}}return l});if(e&&r)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,n=n||e.length,a=a||r.length,this.palette=new Uint32Array(e,o||0,n/4),this.indices=wt.create(r,s,i,a),this.xShift=At(t[0]),this.yShift=At(t[1]),this.zShift=At(t[2]),this._rebuildRefCounts();else if(t){let[c,h,l]=is(t,s);this.palette=h,this.indices=l,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(c)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,ze);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=At(this.size[0]),this.yShift=At(this.size[1]),this.zShift=At(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,o=this._getOffset(t,s,e);return r.get(o)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==ye}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,ye)}getVoxColorCounts(){let t=new Map;for(let s=0;s<this._refCounts.length;s+=1){let e=this._refCounts[s];if(e===0)continue;let r=this.colorForPaletteIndex(s+Ht);t.set(r,e)}return t}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-Ht)*Xe]}setPaletteColor(t,s){this.palette[(t-Ht)*Xe]=s}paletteHasReferences(t){return this._refCounts[t-Ht]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-Ht]=1}incrementPaletteRefcount(t){this._refCounts[t-Ht]+=1}decrementPaletteRefcount(t){this._refCounts[t-Ht]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let o=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(o,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);Kt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),Kt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let o=this._getOffset(t,s,e);return this.setColorAtOffset(o,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,o=this.getPaletteIndexAtOffset(t),n=Kt.isNonEmptyPaletteIndex(o);n&&this.decrementPaletteRefcount(o);for(let a=0;a<e.length;a+=1){let c=a+Ht;if(this.getPaletteColor(c)===s)return this.incrementPaletteRefcount(c),r.set(t,c),c}if(n&&!this.paletteHasReferences(o))return this.setPaletteColor(o,s),this.resetPaletteRefcountToOne(o),o;let i=this._getFreePaletteIndex();return this.setPaletteColor(i,s),this.resetPaletteRefcountToOne(i),this.indices.set(t,i),i}colorForPaletteIndex(t){return this.palette[(t-Ht)*Xe]}filterByVoxels(t,s,e,r,o){if(o===as.NONE)return;let n=t.size,[i,a,c,h,l,f]=Yt(n),{size:m}=this,[u,x,p,v,F,y]=Yt(m);for(let A=u;A<=x;A+=1)for(let d=p;d<=v;d+=1)for(let C=F;C<=y;C+=1){if(this.getPaletteIndexAt(A,d,C)===0)continue;let g=A+s,M=d+e,N=C+r,V=!(g>a||g<i||M>h||M<c||N>f||N<l)&&t.hasVoxelAt(g,M,N);(o===as.PAINT&&!V||o===as.KEEP&&V)&&this.setEmptyAt(A,d,C)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let c=0;c<t.length;c+=1){let h=c+Ht;if(!this.paletteHasReferences(h))return h}let o=r*2,[n,i,a]=is(s,o);for(let c=0;c<t.length*Xe;c+=1)i[c]=t[c];for(;this._refCounts.length<i.length;)this._refCounts.push(0);for(let c=0,h=s[0]*s[1]*s[2];c<h;c+=1){let l=e.get(c);a.set(c,l)}return this.palette=i,this.indices=a,this._recomputeSizeFieldsForBuffer(n),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,o=Math.max(1,r[0],Math.abs(t)*2+1),n=Math.max(1,r[1],Math.abs(s)*2+1),i=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([o,n,i])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Kt(t),[e,r,o,n,i,a]=Yt(this.size);for(let m=e;m<=r;m+=1)for(let u=o;u<=n;u+=1)for(let x=i;x<=a;x+=1)this.getPaletteIndexAt(m,u,x)!==0&&s.setColorAt(m,u,x,this.getColorAt(m,u,x));let{buffer:c}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:h}=s;this.bitsPerIndex=h;let[,l,f]=is(t,h,c);this.palette=l,this.indices=f,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(c)}static fromJSON(t){if(typeof t=="string")return Kt.deserialize(t);let{size:s,palette:e,indices:r}=t,o=new Kt(s);for(let n=0;n<e.length+Ht;n+=1)for(let i=0;i<r.length;i+=1){let a=r[i];if(a===n)if(a>=Ht){let c=e[a-Ht];o.setColorAtOffset(i,c)}else a===n&&o.setPaletteIndexAtOffset(i,a)}return o}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let o=0;o<this.palette.length;o+=1){let n=o+Ht,i=this.getPaletteColor(n);i>0&&e.push(i)}for(let o=0,n=this.size[0]*this.size[1]*this.size[2];o<n;o+=1)r.push(this.indices.get(o));return{size:[...this.size],palette:e,indices:r}}clone(){return new Kt(this.size,this.bitsPerIndex,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:o,yShift:n,zShift:i}=this,a=r[2];return(t+o)*r[1]*a+(s+n)*a+(e+i)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Kt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToVoxels(t,s=0,e=0,r=0){xe.clear();let o=t.size,[n,i,a,c,h,l]=Yt(o),{size:f}=this,[m,u,x,p,v,F]=Yt(f);for(let y=m;y<=u;y+=1)for(let A=x;A<=p;A+=1)for(let d=v;d<=F;d+=1){let C=this.getPaletteIndexAt(y,A,d);if(C!==0){let _=y+s,g=A+e,M=d+r,N=o[0],I=o[1],V=o[2];if(_>i&&(N=_*2),_<n&&(N=Math.max(N,-_*2+1)),g>c&&(I=g*2),g<a&&(I=Math.max(I,-g*2+1)),M>l&&(V=M*2),M<h&&(V=Math.max(V,-M*2+1)),N>ns||I>ns||V>ns)continue;(o[0]<N||o[1]<I||o[2]<V)&&(t.resizeTo([N,I,V]),o=t.size,[n,i,a,c,h,l]=Yt(o),xe.clear());let b=xe.get(C);if(b===void 0){let O=this.getColorAt(y,A,d);if(O===Is)t.setEmptyAt(_,g,M);else{let E=t.setColorAt(_,g,M,O);xe.set(C,E)}}else t.getPaletteIndexAt(_,g,M)!==b&&t.setPaletteIndexAt(_,g,M,b)}}}mergeWith(t,s,e,r=!1){xe.clear();let o=xe,n=e[0]-s[0],i=e[1]-s[1],a=e[2]-s[2],c=t.size,[h,l,f,m,u,x]=Yt(c),{size:p}=this,[v,F,y,A,d,C]=Yt(p);for(let _=v;_<=F;_+=1)for(let g=y;g<=A;g+=1)for(let M=d;M<=C;M+=1){let N=this.getPaletteIndexAt(_,g,M);if(N===0)continue;let I=_+n,V=g+i,b=M+a;if(!!(!(I>l||I<h||V>m||V<f||b>x||b<u)&&t.hasVoxelAt(I,V,b)))if(o.has(N))this.setPaletteIndexAt(_,g,M,o.get(N));else{(r||t.getColorAt(I,V,b)>this.getColorAt(_,g,M))&&this.removeVoxelAt(_,g,M);let T=this.getPaletteIndexAt(_,g,M);o.set(N,T)}}}};function cs(w){return w=w.trim().toUpperCase(),w.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/)?(w=w.replace("#",""),w.length===3?w=w[2]+w[2]+w[1]+w[1]+w[0]+w[0]:w=w[4]+w[5]+w[2]+w[3]+w[0]+w[1],parseInt(w,16)):0}function ws(){let w=[];for(let r=0;r<256;r++)w[r]=Math.floor(Math.random()*256),w[r+256]=w[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,o,n){return o+r*(n-o)}function e(r,o,n,i){let a=r&15,c=a<8?o:n,h=a<4?n:a===12||a===14?o:i;return((a&1)===0?c:-c)+((a&2)===0?h:-h)}return{noise:function(r,o,n){let i=Math.floor(r),a=Math.floor(o),c=Math.floor(n),h=i&255,l=a&255,f=c&255;r-=i,o-=a,n-=c;let m=r-1,u=o-1,x=n-1,p=t(r),v=t(o),F=t(n),y=w[h]+l,A=w[y]+f,d=w[y+1]+f,C=w[h+1]+l,_=w[C]+f,g=w[C+1]+f;return s(F,s(v,s(p,e(w[A],r,o,n),e(w[_],m,o,n)),s(p,e(w[d],r,u,n),e(w[g],m,u,n))),s(v,s(p,e(w[A+1],r,o,x),e(w[_+1],m,o,n-1)),s(p,e(w[d+1],r,u,x),e(w[g+1],m,u,x))))}}}var me=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let o=0,n=t.faceCount;o<n;o++)r.set(o,0);break}}static _circularDeform(t,s,e,r,o){let[n,i,a,c,h,l]=Yt(t.voxels.size),f=(n+i)/2+.5,m=(a+c)/2+.5,u=(h+l)/2+.5,{vertX:x,vertY:p,vertZ:v,vertRing:F}=s;for(let y=0,A=t.vertCount;y<A;y++){let d=x[y],C=p[y],_=v[y],g=d-f,M=C-m,N=_-u,I=Math.max(Math.abs(g*e),Math.abs(M*r),Math.abs(N*o)),V=Math.sqrt(g*g*e+M*M*r+N*N*o);if(V===0)continue;let b=I/V;x[y]=g*(1-e+e*b)+f,p[y]=M*(1-r+r*b)+m,v[y]=N*(1-o+o*b)+u,F[y]=I}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:o}=s;for(let n=0,i=t.faceCount;n<i;n++){let a=n*4,c=a+1,h=a+2,l=a+3;o.set(n,r[e[a]]===r[e[c]]&&r[e[a]]===r[e[h]]&&r[e[a]]===r[e[l]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:o,vertDeformCount:n,vertDeformDamping:i,vertDeformStrength:a,vertFlattenedX:c,vertFlattenedY:h,vertFlattenedZ:l,vertClampedX:f,vertClampedY:m,vertClampedZ:u,vertX:x,vertY:p,vertZ:v,vertTmpX:F,vertTmpY:y,vertTmpZ:A,vertHasTmp:d}=s;for(let C=0;C<e;C++){let _=!1;for(let g=0,M=t.vertCount;g<M;g++){if(n[g]<=C)continue;let I=o[g];if(I===0)continue;_=!0;let V=x[g],b=p[g],O=v[g],E=i[g],T=a[g],Z=1-(f.get(g)|c.get(g)),X=1-(m.get(g)|h.get(g)),P=1-(u.get(g)|l.get(g)),q=0,R=0,k=0;for(let z=0;z<I;z++){let L=r[g*6+z];q+=x[L],R+=p[L],k+=v[L]}let S=Math.pow(E,C)*T,U=q/I-V,Y=R/I-b,K=k/I-O;F[g]=V+Z*U*S,y[g]=b+X*Y*S,A[g]=O+P*K*S,d.set(g,Z|X|P)}if(_){for(let g=0,M=t.vertCount;g<M;g++)d.get(g)!==0&&(x[g]=F[g],p[g]=y[g],v[g]=A[g]);d.clear()}}}static warpAndScatter(t,s){let e=ws().noise,{nx:r,px:o,ny:n,py:i,nz:a,pz:c}=t._tile,[h,l,f,m,u,x]=Yt(t.voxels.size),{vertX:p,vertY:v,vertZ:F,vertWarpAmplitude:y,vertWarpFrequency:A,vertScatter:d,vertFlattenedX:C,vertFlattenedY:_,vertFlattenedZ:g,vertClampedX:M,vertClampedY:N,vertClampedZ:I}=s;h+=.1,f+=.1,u+=.1,l+=.9,m+=.9,x+=.9;for(let V=0,b=t.vertCount;V<b;V++){let O=p[V],E=v[V],T=F[V];if(r&&O<h||o&&O>l||n&&E<f||i&&E>m||a&&T<u||c&&T>x)continue;let Z=y[V],X=A[V],P=d[V],q=Z>0,R=P>0;if(q||R){let k=0,S=0,U=0;q&&(k=e((O+.19)*X,E*X,T*X)*Z,S=e((E+.17)*X,T*X,O*X)*Z,U=e((T+.13)*X,O*X,E*X)*Z),R&&(k+=(Math.random()*2-1)*P,S+=(Math.random()*2-1)*P,U+=(Math.random()*2-1)*P);let Y=1-(M.get(V)|C.get(V)),K=1-(N.get(V)|_.get(V)),z=1-(I.get(V)|g.get(V));p[V]=O+Y*k,v[V]=E+K*S,F[V]=T+z*U}}}};var Ae=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:o,faceVertIndices:n,vertLinkIndices:i,vertLinkCounts:a}=s;if(r.get(e)===1)for(let h=0;h<4;h++){let l=n[e*4+h],f=!1;for(let m=0,u=a[l];m<u;m++)if(i[l*6+m]===l){f=!0;break}f||(i[l*6+a[l]]=l,a[l]++,o[l]++)}else for(let h=0;h<4;h++){let l=n[e*4+h],f=n[e*4+(h+1)%4],m=!1;for(let x=0,p=a[l];x<p;x++)if(i[l*6+x]===f){m=!0;break}m||(i[l*6+a[l]]=f,a[l]++);let u=!1;for(let x=0,p=a[f];x<p;x++)if(i[f*6+x]===l){u=!0;break}u||(i[f*6+a[f]]=l,a[f]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:o,vertLinkCounts:n,vertLinkIndices:i}=s;for(let a=0,c=t.vertCount;a<c;a++){let h=r[a],l=n[a];h===l&&(o.set(a,1),n[a]=0)}for(let a=0,c=t.faceCount;a<c;a++)for(let h=0;h<4;h++){let l=e[a*4+h],f=e[a*4+(h+1)%4];if(o.get(l)===1){let m=!1;for(let u=0,x=n[l];u<x;u++)if(i[l*6+u]===f){m=!0;break}m||(i[l*6+n[l]]=f,n[l]++)}if(o.get(f)===1){let m=!1;for(let u=0,x=n[f];u<x;u++)if(i[f*6+u]===l){m=!0;break}m||(i[f*6+n[f]]=l,n[f]++)}}}};var be=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:o,faceSmooth:n,faceFlattened:i,faceClamped:a,vertX:c,vertY:h,vertZ:l,faceVertFlatNormalX:f,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:x,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:v,faceVertBothNormalX:F,faceVertBothNormalY:y,faceVertBothNormalZ:A,faceVertNormalX:d,faceVertNormalY:C,faceVertNormalZ:_,faceMaterials:g,faceVertIndices:M,vertSmoothNormalX:N,vertSmoothNormalY:I,vertSmoothNormalZ:V,vertBothNormalX:b,vertBothNormalY:O,vertBothNormalZ:E}=s,[T,Z,X,P,q,R]=Yt(t.voxels.size);for(let S=0,U=t.faceCount;S<U;S++){let Y=S*4;for(let K=0;K<4;K++){let z=M[Y+K];N[z]=0,I[z]=0,V[z]=0,b[z]=0,O[z]=0,E[z]=0}}for(let S=0,U=t.faceCount;S<U;S++){let Y=r[S],K=o.get(S),z=i.get(S),L=a.get(S),Q=K|1-(z|L);n.set(S,Q);let W=M[S*4],et=M[S*4+1],nt=M[S*4+2],B=M[S*4+3],ht=(c[W]+c[et]+c[nt]+c[B])/4,mt=(h[W]+h[et]+h[nt]+h[B])/4,zt=(l[W]+l[et]+l[nt]+l[B])/4;for(let _t=0;_t<4;_t++){let at=M[S*4+_t],Ot=M[S*4+(_t+3)%4],ot=c[at],gt=c[Ot],it=h[at],Vt=h[Ot],Ct=l[at],Et=l[Ot],Mt=N[at],Xt=I[at],bt=V[at],St=b[at],Zt=O[at],Lt=E[at],Qt=gt-ot,qt=Vt-it,It=Et-Ct,vt=ht-ot,Ft=mt-it,ft=zt-Ct,Nt=Math.sqrt(Qt*Qt+qt*qt+It*It),Jt=Math.sqrt(vt*vt+Ft*Ft+ft*ft);Nt=Nt===0?1:Nt,Jt=Jt===0?1:Jt;let Dt=1/Nt;Qt*=Dt,qt*=Dt,It*=Dt;let Rt=1/Jt;vt*=Rt,Ft*=Rt,ft*=Rt;let ct=qt*ft-It*Ft,ut=It*vt-Qt*ft,pt=Qt*Ft-qt*vt,$t=T+.1,oe=Z+.9,Tt=X+.1,kt=P+.9,Bt=q+.1,Wt=R+.9;e&&((e.nx&&Y===0||e.px&&Y===1)&&(it<Tt||it>kt||Ct<Bt||Ct>Wt)&&(ut=0,pt=0),(e.ny&&Y===2||e.py&&Y===3)&&(ot<$t||ot>oe||Ct<Bt||Ct>Wt)&&(ct=0,pt=0),(e.nz&&Y===4||e.pz&&Y===5)&&(ot<$t||ot>oe||it<Tt||it>kt)&&(ct=0,ut=0));let Gt=Math.sqrt(ct*ct+ut*ut+pt*pt);Gt=Gt===0?1:Gt;let G=1/Gt;ct*=G,ut*=G,pt*=G,f[S*4+_t]=ct,m[S*4+_t]=ut,u[S*4+_t]=pt;let j=Qt*vt+qt*Ft+It*ft,H=Math.acos(j);Mt+=ct*H,Xt+=ut*H,bt+=pt*H,St+=Q*(ct*H),Zt+=Q*(ut*H),Lt+=Q*(pt*H),N[at]=Mt,I[at]=Xt,V[at]=bt,b[at]=St,O[at]=Zt,E[at]=Lt}}for(let S=0,U=t.vertCount;S<U;S++){let Y=N[S],K=I[S],z=V[S],L=b[S],Q=O[S],W=E[S],et=Math.sqrt(Y*Y+K*K+z*z),nt=Math.sqrt(L*L+Q*Q+W*W);et!==0&&(N[S]=Y/et,I[S]=K/et,V[S]=z/et),nt!==0&&(b[S]=L/nt,O[S]=Q/nt,E[S]=W/nt)}let k=t.materials.materials;for(let S=0,U=t.faceCount;S<U;S++){let Y=n.get(S)===1,K=k[g[S]];for(let z=0;z<4;z++){let L=S*4+z,Q=M[S*4+z];switch(x[L]=N[Q],p[L]=I[Q],v[L]=V[Q],F[L]=!Y||b[Q]===0?f[L]:b[Q],y[L]=!Y||O[Q]===0?m[L]:O[Q],A[L]=!Y||E[Q]===0?u[L]:E[Q],K.lighting){case ae:d[L]=x[L],C[L]=p[L],_[L]=v[L];break;case ie:d[L]=F[L],C[L]=y[L],_[L]=A[L];break;default:d[L]=f[L],C[L]=m[L],_[L]=u[L];break}}}}};var st=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,o=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,n=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=o,t.z=n}transformPointInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[12]*o+a[13]*n+a[14]*i+a[15],h=(a[0]*o+a[1]*n+a[2]*i+a[3])/c,l=(a[4]*o+a[5]*n+a[6]*i+a[7])/c,f=(a[8]*o+a[9]*n+a[10]*i+a[11])/c;t[r]=h,s[r]=l,e[r]=f}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,o=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=o}transformVectorInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[0]*o+a[1]*n+a[2]*i,h=a[4]*o+a[5]*n+a[6]*i,l=a[8]*o+a[9]*n+a[10]*i;t[r]=c,s[r]=h,e[r]=l}static identity(t){t=t||new st;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new st;let r=t.m,o=s.m,n=e.m;return n[0]=r[0]*o[0]+r[1]*o[4]+r[2]*o[8]+r[3]*o[12],n[1]=r[0]*o[1]+r[1]*o[5]+r[2]*o[9]+r[3]*o[13],n[2]=r[0]*o[2]+r[1]*o[6]+r[2]*o[10]+r[3]*o[14],n[3]=r[0]*o[3]+r[1]*o[7]+r[2]*o[11]+r[3]*o[15],n[4]=r[4]*o[0]+r[5]*o[4]+r[6]*o[8]+r[7]*o[12],n[5]=r[4]*o[1]+r[5]*o[5]+r[6]*o[9]+r[7]*o[13],n[6]=r[4]*o[2]+r[5]*o[6]+r[6]*o[10]+r[7]*o[14],n[7]=r[4]*o[3]+r[5]*o[7]+r[6]*o[11]+r[7]*o[15],n[8]=r[8]*o[0]+r[9]*o[4]+r[10]*o[8]+r[11]*o[12],n[9]=r[8]*o[1]+r[9]*o[5]+r[10]*o[9]+r[11]*o[13],n[10]=r[8]*o[2]+r[9]*o[6]+r[10]*o[10]+r[11]*o[14],n[11]=r[8]*o[3]+r[9]*o[7]+r[10]*o[11]+r[11]*o[15],n[12]=r[12]*o[0]+r[13]*o[4]+r[14]*o[8]+r[15]*o[12],n[13]=r[12]*o[1]+r[13]*o[5]+r[14]*o[9]+r[15]*o[13],n[14]=r[12]*o[2]+r[13]*o[6]+r[14]*o[10]+r[15]*o[14],n[15]=r[12]*o[3]+r[13]*o[7]+r[14]*o[11]+r[15]*o[15],e}static transpose(t,s){s=s||new st;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new st;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let o=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let n=0;n<16;n++)r[n]/=o;return s}static scale(t,s,e,r){r=r||new st;let o=r.m;return o[0]=t,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static translate(t,s,e,r){r=r||new st;let o=r.m;return o[0]=1,o[1]=0,o[2]=0,o[3]=t,o[4]=0,o[5]=1,o[6]=0,o[7]=s,o[8]=0,o[9]=0,o[10]=1,o[11]=e,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static rotate(t,s,e,r,o){if(!t||!s&&!e&&!r)return st.identity(o);o=o||new st;let n=o.m,i=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=i,e/=i,r/=i;let a=Math.cos(t),c=Math.sin(t),h=1-a;return n[0]=s*s*h+a,n[1]=s*e*h-r*c,n[2]=s*r*h+e*c,n[3]=0,n[4]=e*s*h+r*c,n[5]=e*e*h+a,n[6]=e*r*h-s*c,n[7]=0,n[8]=r*s*h-e*c,n[9]=r*e*h+s*c,n[10]=r*r*h+a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,o}static lookAtORIGINAL(t,s,e,r,o,n,i,a,c,h){h=h||new st;let l=h.m,f=t-r,m=s-o,u=e-n,x=Math.sqrt(f*f+m*m+u*u);f/=x,m/=x,u/=x;let p=a*u-c*m,v=c*f-i*u,F=i*m-a*f;x=Math.sqrt(p*p+v*v+F*F),p/=x,v/=x,F/=x;let y=m*F-u*v,A=u*p-f*F,d=f*v-m*p;return x=Math.sqrt(y*y+A*A+d*d),y/=x,A/=x,d/=x,l[0]=p,l[1]=v,l[2]=F,l[3]=-(p*t+v*s+F*e),l[4]=y,l[5]=A,l[6]=d,l[7]=-(y*t+A*s+d*e),l[8]=f,l[9]=m,l[10]=u,l[11]=-(f*t+m*s+u*e),l[12]=0,l[13]=0,l[14]=0,l[15]=1,h}static lookAtTRYOUT(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e);return o[0]=e/n,o[1]=0,o[2]=-t/n,o[3]=0,o[4]=t*s/n,o[5]=-n,o[6]=e*s/n,o[7]=0,o[8]=t,o[9]=s,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static lookAt(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e),i=n?t/n:1,a=n?e/n:0;return o[0]=t,o[1]=-a,o[2]=-e*i,o[3]=0,o[4]=s,o[5]=0,o[6]=n,o[7]=0,o[8]=e,o[9]=i,o[10]=-e*a,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}};var Ve=[null,null,null,null],Ye=[null,null,null,null],Oe=[null,null,null,null],Se=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:o,faceVertNormalX:n,faceVertFlatNormalX:i,faceVertNormalY:a,faceVertFlatNormalY:c,faceVertNormalZ:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:v}=s,F=t.determineBoundsOffsetAndRescale(t.resize,s),y=new st;y=st.multiply(y,st.translate(t.position.x,t.position.y,t.position.z)),y=st.multiply(y,st.rotate(t.rotation.z,0,0,1)),y=st.multiply(y,st.rotate(t.rotation.y,0,1,0)),y=st.multiply(y,st.rotate(t.rotation.x,1,0,0)),y=st.multiply(y,st.scale(t.scale.x,t.scale.y,t.scale.z)),y=st.multiply(y,st.scale(F.rescale,F.rescale,F.rescale)),y=st.multiply(y,st.translate(F.offset.x,F.offset.y,F.offset.z));let A=st.inverse(y);A=st.transpose(A);for(let d=0,C=t.vertCount;d<C;d++)y.transformPointInline(e,r,o,d);Ve[0]=n,Ye[0]=a,Oe[0]=h,Ve[1]=i,Ye[1]=c,Oe[1]=l,Ve[2]=f,Ye[2]=m,Oe[2]=u,Ve[3]=x,Ye[3]=p,Oe[3]=v;for(let d=0,C=t.faceCount;d<C;d++){let _=d*4;for(let g=0;g<4;g++)for(let M=0,N=Ve.length;M<N;M++){let I=Ve[M],V=Ye[M],b=Oe[M],O=_+g;A.transformVectorInline(I,V,b,O);let E=I[O],T=V[O],Z=b[O],X=Math.sqrt(E*E+T*T+Z*Z);if(X>0){let P=1/X;I[O]=E*P,V[O]=T*P,b[O]=Z*P}}}}};var Ze=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let v=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},v>0){let F=1/v;p.normalizedDirection.x*=F}}let r=t.materials.materials,{faceMaterials:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,faceVertIndices:c,vertX:h,vertY:l,vertZ:f,faceVertLightR:m,faceVertLightG:u,faceVertLightB:x}=s;for(let p=0,v=t.faceCount;p<v;p++){let F=r[o[p]],y=p*4;if(F.lights)for(let A=0;A<4;A++){let d=y+A,C=c[d],_=h[C],g=l[C],M=f[C],N=n[d],I=i[d],V=a[d];m[d]=0,u[d]=0,x[d]=0;for(let b of e){let{color:O,strength:E,distance:T,normalizedDirection:Z,position:X}=b,P=E,q=0;if(X){let R=X.x-_,k=X.y-g,S=X.z-M;q=Math.sqrt(R*R+k*k+S*S);let U=1/q;P=E*Math.max(N*R*U+I*k*U+V*S*U,0)}else Z&&(P=E*Math.max(N*Z.x+I*Z.y+V*Z.z,0));X&&T&&(P=P*(1-Math.min(q/T,1))),m[d]+=O.r*P,u[d]+=O.g*P,x[d]+=O.b*P}}else for(let A=0;A<4;A++){let d=y+A;m[d]=1,u[d]=1,x[d]=1}}}};var zs=[],ls=new Map,fs=()=>zs.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Xs=w=>{for(let t of w.partitions)t&&Xs(t);w.minx=Number.MAX_VALUE,w.miny=Number.MAX_VALUE,w.minz=Number.MAX_VALUE,w.maxx=-Number.MAX_VALUE,w.maxy=-Number.MAX_VALUE,w.maxz=-Number.MAX_VALUE,w.partitions.fill(null),w.triangles.length=0,zs.push(w)},Ee=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(C){return C.ao})))return;let{faceMaterials:r,faceVertIndices:o,faceVertAO:n,vertX:i,vertY:a,vertZ:c,faceVertNormalX:h,faceVertNormalY:l,faceVertNormalZ:f}=s,{faceCount:m}=t,u=t.materials.materials,x=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(x,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let v=t.aoSamples,F=this._generateFibonacciSamples(v);ls.clear();let y=t.scale.x,A=t.scale.y,d=t.scale.z;for(let C=0;C<m;C++){let _=u[r[C]],g=_.ao||t.ao,M=C*4;if(n[M]=0,n[M+1]=0,n[M+2]=0,n[M+3]=0,!g||g.maxDistance===0||g.strength===0||g.angle<1||_.opacity===0)continue;let N=g.maxDistance*Math.max(y,A,d),I=g.strength,V=Math.cos(g.angle/180*Math.PI);for(let b=0;b<4;b++){let O=M+b,E=o[O],T=i[E],Z=a[E],X=c[E],P=h[O],q=l[O],R=f[O],k=T*16384+Z*128+X,S=P*1e7+q*1e5+R*1e3,U=k*1e9+S,Y=ls.get(U);if(Y!==void 0){n[O]=Y;continue}let K=o[M+(b+2)%4],z=i[K],L=a[K],Q=c[K],W=T*.99999+z*1e-5+P*1e-5,et=Z*.99999+L*1e-5+q*1e-5,nt=X*.99999+Q*1e-5+R*1e-5,B=0,ht=0;for(let[zt,_t,at]of F){if(zt*P+_t*q+at*R<=V)continue;let ot=W+zt*N,gt=et+_t*N,it=nt+at*N,Vt=this._distanceToOctree(t,s,p,W,et,nt,zt,_t,at,N,ot,gt,it);Vt?Vt=Vt/N:Vt=1,B+=Vt,ht++}let mt=0;ht!==0&&(B=Math.max(Math.min(B/ht,1),0),mt=1-Math.pow(B,I)),n[O]=mt,ls.set(U,mt)}}Xs(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,o=[],n=t.materials.materials;for(let i=0;i<r;i++){if(n[e[i]].opacity<.75)continue;let c=i*2;o.push(c),o.push(c+1)}return o}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:o,vertY:n,vertZ:i}=e,a=t.length;if(a<=32){let c=fs();c.triangles=t;for(let h=0;h<a;h++){let l=t[h],m=(l>>1)*4,u,x,p;(l&1)===0?(u=r[m+2],x=r[m+1],p=r[m+0]):(u=r[m+0],x=r[m+3],p=r[m+2]);let v=o[u],F=n[u],y=i[u],A=o[x],d=n[x],C=i[x],_=o[p],g=n[p],M=i[p];c.minx=Math.min(c.minx,v,A,_),c.miny=Math.min(c.miny,F,d,g),c.minz=Math.min(c.minz,y,C,M),c.maxx=Math.max(c.maxx,v,A,_),c.maxy=Math.max(c.maxy,F,d,g),c.maxz=Math.max(c.maxz,y,C,M)}return c}else{let c=0,h=0,l=0;for(let x=0;x<a;x++){let p=t[x],F=(p>>1)*4,y,A,d;(p&1)===0?(y=r[F+2],A=r[F+1],d=r[F+0]):(y=r[F+0],A=r[F+3],d=r[F+2]);let C=o[y],_=n[y],g=i[y],M=o[A],N=n[A],I=i[A],V=o[d],b=n[d],O=i[d];c+=C+M+V,h+=_+N+b,l+=g+I+O}let f=1/a;c*=f,h*=f,l*=f;let m=Array(8).fill(null);for(let x=0;x<a;x++){let p=t[x],F=(p>>1)*4,y,A,d;(p&1)===0?(y=r[F+2],A=r[F+1],d=r[F+0]):(y=r[F+0],A=r[F+3],d=r[F+2]);let C=o[y],_=n[y],g=i[y],M=o[A],N=n[A],I=i[A],V=o[d],b=n[d],O=i[d],E=C+M+V<c?0:1,T=_+N+b<h?0:1,Z=g+I+O<l?0:1,X=E+T*2+Z*4;m[X]===null?m[X]=[p]:m[X].push(p)}let u=fs();for(let x=0;x<8;x++){if(m[x]===null)continue;let p=this._trianglesToOctree(m[x],s,e);u.partitions[x]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,o,n,i,a,c,h,l,f,m){if(this._hitsBox(r,o,n,l,f,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,o,n,i,a,c,h);let u=h,x=e.partitions;for(let p=0;p<8;p++){let v=x[p];if(v===null)continue;let F=this._distanceToOctree(t,s,v,r,o,n,i,a,c,h,l,f,m);F&&(u=Math.min(u,F))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(he,s).bounds,{vertCount:o,faceCount:n}=t,{faceVertIndices:i,faceCulled:a,vertX:c,vertY:h,vertZ:l}=s,f=(u,x,p,v,F,y,A,d,C)=>{let _=n*4;c[o]=u,h[o]=x,l[o]=p,c[o+1]=v,h[o+1]=F,l[o+1]=y,c[o+2]=A,h[o+2]=d,l[o+2]=C,i[_]=o+2,i[_+1]=o+1,i[_+2]=o+0,a.set(n,1);let g=n*2;return n++,o+=3,g},m=[];if(t._aoSides.nx&&m.push(f(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(f(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(f(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(f(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(f(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(f(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),x=fs();x.partitions=[x,u]}return e}static _hitsBox(t,s,e,r,o,n,i){let a=i.minx;if(t<a&&r<a)return!1;let c=i.maxx;if(t>c&&r>c)return!1;let h=i.miny;if(s<h&&o<h)return!1;let l=i.maxy;if(s>l&&o>l)return!1;let f=i.minz;if(e<f&&n<f)return!1;let m=i.maxz;if(e>m&&n>m)return!1;let u=t-(a+c)*.5,x=(c-a)*.5,p=(r-t)*.5,v=Math.abs(p);if(Math.abs(u)>x+v)return!1;let F=(l-h)*.5,y=(o-s)*.5,A=Math.abs(y),d=s-(h+l)*.5;if(Math.abs(d)>F+A)return!1;let C=(m-f)*.5,_=(n-e)*.5,g=Math.abs(_),M=e-(f+m)*.5;return!(Math.abs(M)>C+g||Math.abs(y*M-_*d)>F*g+C*A+Number.EPSILON||Math.abs(_*u-p*M)>C*v+x*g+Number.EPSILON||Math.abs(p*d-y*u)>x*A+F*v+Number.EPSILON)}static _distanceToModel(t,s,e,r,o,n,i,a,c,h){let l=null,{faceVertIndices:f}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,v,F,y;(u&1)===0?(v=f[p+2],F=f[p+1],y=f[p+0]):(v=f[p+0],F=f[p+3],y=f[p+2]);let A=this._triangleDistance(t,s,v,F,y,r,o,n,i,a,c);A&&(l?l=Math.min(l,A):A<h&&(l=A))}return l}static _triangleDistance(t,s,e,r,o,n,i,a,c,h,l){let{vertX:f,vertY:m,vertZ:u}=s,x=f[e],p=m[e],v=u[e],F=f[r],y=m[r],A=u[r],d=f[o],C=m[o],_=u[o],g=F-x,M=y-p,N=A-v,I=d-x,V=C-p,b=_-v,O=h*b-l*V,E=l*I-c*b,T=c*V-h*I,Z=g*O+M*E+N*T;if(Z<Number.EPSILON)return null;let X=1/Z,P=n-x,q=i-p,R=a-v,k=X*(P*O+q*E+R*T);if(k<0||k>1)return null;let S=q*N-R*M,U=R*g-P*N,Y=P*M-q*g,K=X*(c*S+h*U+l*Y);if(K<0||k+K>1)return null;let z=X*(I*S+V*U+b*Y);return z<=Number.EPSILON?null:z}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let o=1;o<=t;++o){let n=Math.asin(-1+2*o/(t+1)),i=r*o,a=Math.cos(i)*Math.cos(n),c=Math.sin(n),h=Math.sin(i)*Math.cos(n);s.push([a,c,h])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let o=r*e,n=Math.cos(o),i=Math.sin(o),a=Math.max(1,r*4),c=Math.PI*2/a;for(let h=0;h<a;h++){let l=h*c,f=i*Math.sin(l),m=i*Math.cos(l);s.push({x:f,y:n,z:m}),r<t&&s.push({x:f,y:-n,z:m})}a+=4}return s}};var Te=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:o,faceVertVs:n}=s,i=[],a=[],c=[],h=t.materials.materials;for(let l=0;l<h.length;l++){let f=h[l],m=0,u=1,x=1;if(f.map||f.normalMap||f.roughnessMap||f.metalnessMap||f.emissiveMap){let p=t.voxels.size[0],v=t.voxels.size[1],F=t.voxels.size[2];f.mapTransform.uscale===-1&&(u=1/Math.max(p,v,F)),f.mapTransform.vscale===-1&&(x=1/Math.max(p,v,F)),(f.map&&f.map.cube||f.normalMap&&f.normalMap.cube||f.roughnessMap&&f.roughnessMap.cube||f.metalnessMap&&f.metalnessMap.cube||f.emissiveMap&&f.emissiveMap.cube)&&(m=1,u=u/4,x=x/2)}i.push(m),a.push(u),c.push(x)}for(let l=0,f=t.faceCount;l<f;l++){let m=e[l],u=i[m],x=a[m],p=c[m],v=_s[r[l]],F=l*4,y=o[F+v.order[0]],A=n[F+v.order[0]],d=o[F+v.order[1]],C=n[F+v.order[1]],_=o[F+v.order[2]],g=n[F+v.order[2]],M=o[F+v.order[3]],N=n[F+v.order[3]],I=F+v.order[0],V=F+v.order[1],b=F+v.order[2],O=F+v.order[3],E=u*v.uo,T=u*v.vo,Z=v.ud*x,X=v.vd*p;o[I]=E+(y+1e-4)*Z,n[I]=T+(A+1e-4)*X,o[V]=E+(d+1e-4)*Z,n[V]=T+(C+.9999)*X,o[b]=E+(_+.9999)*Z,n[b]=T+(g+.9999)*X,o[O]=E+(M+.9999)*Z,n[O]=T+(N+1e-4)*X}}};var Be=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:o,vertColorCount:n,faceVertColorR:i,faceVertColorG:a,faceVertColorB:c,faceVertLightR:h,faceVertLightG:l,faceVertLightB:f,faceVertIndices:m,faceMaterials:u,faceVertAO:x}=s,p=t.materials.materials,v=!!t.materials.find(d=>d.fade),F=Array(p.length).fill(!1);for(let d=0,C=p.length;d<C;d++)v&&p[d].fade&&(F[d]=!0);for(let d=0,C=t.faceCount;d<C;d++)if(F[u[d]])for(let g=0;g<4;g++){let M=0,N=0,I=0,V=0,b=d*4+g,O=m[b],E=n[O];for(let Z=0;Z<E;Z++){let X=O*6+Z;M+=e[X],N+=r[X],I+=o[X],V++}let T=1/V;i[b]=M*T,a[b]=N*T,c[b]=I*T}let y=t.ao||t.materials.find(function(d){return d.ao}),A=t.lights.length>0;if(y&&A)for(let d=0,C=t.faceCount;d<C;d++){let g=p[u[d]].ao||t.ao,M=g?g.color:null;for(let N=0;N<4;N++){let I=d*4+N,V=i[I],b=a[I],O=c[I],E=M?M.r:V,T=M?M.g:b,Z=M?M.b:O,X=1-x[I];i[I]=V*h[I]*X+E*(1-X),a[I]=b*l[I]*X+T*(1-X),c[I]=O*f[I]*X+Z*(1-X)}}else if(A&&!y)for(let d=0,C=t.faceCount;d<C;d++)for(let _=0;_<4;_++){let g=d*4+_;i[g]=i[g]*h[g],a[g]=a[g]*l[g],c[g]=c[g]*f[g]}else if(!A&&y)for(let d=0,C=t.faceCount;d<C;d++){let g=p[u[d]].ao||t.ao;if(!g)continue;let M=g.color;for(let N=0;N<4;N++){let I=d*4+N,V=i[I],b=a[I],O=c[I],E=M?M.r:V,T=M?M.g:b,Z=M?M.b:O,X=1-x[I];i[I]=X*V+E*(1-X),a[I]=X*b+T*(1-X),c[I]=X*O+Z*(1-X)}}}};var He={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ke={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},We={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Pe=class{static simplify(t,s){if(!t.simplify)return;let e=function(){He.filled=!1,Ke.filled=!1,We.filled=!1,Qe.filled=!1},r=t.materials.materials,{faceCulled:o,faceNameIndices:n,vertX:i,vertY:a,vertZ:c,voxelXZYFaceIndices:h,voxelXYZFaceIndices:l,voxelYZXFaceIndices:f}=s;for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let x=h[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,He,p,F,y,A,i,c,a,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,Ke,p,F,y,A,i,c,a,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,We,p,F,y,A,i,c,a,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,Qe,p,F,y,A,i,c,a,0,1,2,3);break}}e();for(let m=l.length-t.faceCount,u=l.length;m<u;m++){let x=l[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,He,p,F,y,A,i,a,c,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,Ke,p,F,y,A,i,a,c,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,We,p,F,y,A,i,a,c,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,Qe,p,F,y,A,i,a,c,2,3,0,1);break}}e();for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let x=f[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 2:this._mergeFaces(r,t,s,He,p,F,y,A,a,c,i,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,Ke,p,F,y,A,a,c,i,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,We,p,F,y,A,a,c,i,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,Qe,p,F,y,A,a,c,i,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x){let{faceCulled:p,faceMaterials:v,vertX:F,vertY:y,vertZ:A,faceVertIndices:d,faceVertNormalX:C,faceVertNormalY:_,faceVertNormalZ:g,faceVertColorR:M,faceVertColorG:N,faceVertColorB:I,faceVertUs:V,faceVertVs:b,faceVertFlatNormalX:O,faceVertFlatNormalY:E,faceVertFlatNormalZ:T,faceVertSmoothNormalX:Z,faceVertSmoothNormalY:X,faceVertSmoothNormalZ:P,faceVertBothNormalX:q,faceVertBothNormalY:R,faceVertBothNormalZ:k}=e,S=v[o],U=t[S];if(r.filled&&r.lastVoxelAxis1===n&&r.lastVoxelAxis2===i&&(U.simplify===!0||U.simplify===null&&s.simplify===!0)&&p.get(o)===0){if(r.maxVoxelAxis3!==a-1){r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o;return}let Y=o*4,K=r.lastFaceIndex,z=K*4;if(v[K]!==S)return;let L=C[Y],Q=_[Y],W=g[Y],et=C[Y+1],nt=_[Y+1],B=g[Y+1],ht=C[Y+2],mt=_[Y+2],zt=g[Y+2],_t=C[Y+3],at=_[Y+3],Ot=g[Y+3],ot=C[z],gt=_[z],it=g[z],Vt=C[z+1],Ct=_[z+1],Et=g[z+1],Mt=C[z+2],Xt=_[z+2],bt=g[z+2],St=C[z+3],Zt=_[z+3],Lt=g[z+3];if(!(this._normalEquals(L,Q,W,ot,gt,it)&&this._normalEquals(et,nt,B,Vt,Ct,Et)&&this._normalEquals(ht,mt,zt,Mt,Xt,bt)&&this._normalEquals(_t,at,Ot,St,Zt,Lt)))return;let qt=M[Y],It=N[Y],vt=I[Y],Ft=M[Y+1],ft=N[Y+1],Nt=I[Y+1],Jt=M[Y+2],Dt=N[Y+2],Rt=I[Y+2],ct=M[Y+3],ut=N[Y+3],pt=I[Y+3],$t=M[z],oe=N[z],Tt=I[z],kt=M[z+1],Bt=N[z+1],Wt=I[z+1],Gt=M[z+2],G=N[z+2],j=I[z+2],H=M[z+3],rt=N[z+3],lt=I[z+3];if(!(qt===$t&&It===oe&&vt===Tt&&Ft===kt&&ft===Bt&&Nt===Wt&&Jt===Gt&&Dt===G&&Rt===j&&ct===H&&ut===rt&&pt===lt))return;let te=d[Y+f],$=d[Y+m],J=d[Y+u],D=d[Y+x],xt=F[te],yt=y[te],se=A[te],de=F[$],ge=y[$],fe=A[$],ne=d[z+f],_e=d[z+m],ue=d[z+u],Je=d[z+x],ms=F[ne],us=y[ne],ps=A[ne],Ys=Math.sqrt((de-xt)*(de-xt)+(ge-yt)*(ge-yt)+(fe-se)*(fe-se)),Os=Math.sqrt((de-ms)*(de-ms)+(ge-us)*(ge-us)+(fe-ps)*(fe-ps)),ee=Ys/Os;return Math.abs(c[_e]-(1-ee)*c[$]-ee*c[ne])<=1e-4&&Math.abs(h[_e]-(1-ee)*h[$]-ee*h[ne])<=1e-4&&Math.abs(l[_e]-(1-ee)*l[$]-ee*l[ne])<=1e-4&&Math.abs(c[ue]-(1-ee)*c[J]-ee*c[Je])<=1e-4&&Math.abs(h[ue]-(1-ee)*h[J]-ee*h[Je])<=1e-4&&Math.abs(l[ue]-(1-ee)*l[J]-ee*l[Je])<=1e-4?(d[z+m]=$,d[z+u]=J,V[z+m]=V[Y+m],b[z+m]=b[Y+m],V[z+u]=V[Y+u],b[z+u]=b[Y+u],O[z+m]=O[Y+m],E[z+m]=E[Y+m],T[z+m]=T[Y+m],O[z+u]=O[Y+u],E[z+u]=E[Y+u],T[z+u]=T[Y+u],Z[z+m]=Z[Y+m],X[z+m]=X[Y+m],P[z+m]=P[Y+m],Z[z+u]=Z[Y+u],X[z+u]=X[Y+u],P[z+u]=P[Y+u],q[z+m]=q[Y+m],R[z+m]=R[Y+m],k[z+m]=k[Y+m],q[z+u]=q[Y+u],R[z+u]=R[Y+u],k[z+u]=k[Y+u],r.maxVoxelAxis3=a,p.set(o,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o,!1}static _normalEquals(t,s,e,r,o,n){return Math.abs(t-r)<.01&&Math.abs(s-o)<.01&&Math.abs(e-n)<.01}};var Le=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:o,vertX:n,vertY:i,vertZ:a,faceVertFlatNormalX:c,faceVertFlatNormalY:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:v,faceVertUs:F,faceVertVs:y,faceVertColorR:A,faceVertColorG:d,faceVertColorB:C,faceVertNormalX:_,faceVertNormalY:g,faceVertNormalZ:M}=s;for(let N=0,I=t.faceCount;N<I;N++){if(r.get(N)===1)continue;let V=N*4,b=o[V],O=o[V+1],E=o[V+2],T=o[V+3],Z=n[b],X=i[b],P=a[b],q=n[O],R=i[O],k=a[O],S=n[E],U=i[E],Y=a[E],K=n[T],z=i[T],L=a[T],Q=(Z+S)/2,W=(X+U)/2,et=(P+Y)/2,nt=(q-Q)*(q-Q)+(R-W)*(R-W)+(k-et)*(k-et),B=(K-Q)*(K-Q)+(z-W)*(z-W)+(L-et)*(L-et),ht=(q+K)/2,mt=(R+z)/2,zt=(k+L)/2,_t=(Z-ht)*(Z-ht)+(X-mt)*(X-mt)+(P-zt)*(P-zt),at=(S-ht)*(S-ht)+(U-mt)*(U-mt)+(Y-zt)*(Y-zt);if(nt<e||B<e)this._shiftFaceVertsAtOffset(V,o),this._shiftFaceVertsAtOffset(V,_),this._shiftFaceVertsAtOffset(V,g),this._shiftFaceVertsAtOffset(V,M),this._shiftFaceVertsAtOffset(V,c),this._shiftFaceVertsAtOffset(V,h),this._shiftFaceVertsAtOffset(V,l),this._shiftFaceVertsAtOffset(V,f),this._shiftFaceVertsAtOffset(V,m),this._shiftFaceVertsAtOffset(V,u),this._shiftFaceVertsAtOffset(V,x),this._shiftFaceVertsAtOffset(V,p),this._shiftFaceVertsAtOffset(V,v),this._shiftFaceVertsAtOffset(V,F),this._shiftFaceVertsAtOffset(V,y),this._shiftFaceVertsAtOffset(V,A),this._shiftFaceVertsAtOffset(V,d),this._shiftFaceVertsAtOffset(V,C);else if(!(_t<e||at<e)){let Ot=this._getVertexSumInline(Z,X,P);for(;this._getVertexSumInline(q,R,k)<Ot||this._getVertexSumInline(S,U,Y)<Ot||this._getVertexSumInline(K,z,L)<Ot;){this._shiftFaceVertsAtOffset(V,o),this._shiftFaceVertsAtOffset(V,_),this._shiftFaceVertsAtOffset(V,g),this._shiftFaceVertsAtOffset(V,M),this._shiftFaceVertsAtOffset(V,c),this._shiftFaceVertsAtOffset(V,h),this._shiftFaceVertsAtOffset(V,l),this._shiftFaceVertsAtOffset(V,f),this._shiftFaceVertsAtOffset(V,m),this._shiftFaceVertsAtOffset(V,u),this._shiftFaceVertsAtOffset(V,x),this._shiftFaceVertsAtOffset(V,p),this._shiftFaceVertsAtOffset(V,v),this._shiftFaceVertsAtOffset(V,F),this._shiftFaceVertsAtOffset(V,y),this._shiftFaceVertsAtOffset(V,A),this._shiftFaceVertsAtOffset(V,d),this._shiftFaceVertsAtOffset(V,C);let ot=Z,gt=X,it=P;Z=q,X=R,P=k,q=S,R=U,k=Y,S=K,U=z,Y=L,K=ot,z=gt,L=it,Ot=this._getVertexSumInline(Z,X,P)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var hs=(w,t)=>w-t,Re=class{set origin(t){this._origin=tt.parse(t)}get origin(){return tt.toString(this._origin)}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}set tile(t){this._tile=tt.parse(t||" "),this._tile.x&&(this._tile=tt.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=tt.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=tt.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return tt.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new Ne,this.voxColorToColorId=new Map,this.voxels=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=tt.parse("x y z"),this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._tile=tt.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=tt.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0,this.bounds=new le}recomputeModelAndMaterialBounds(){let{voxels:t,bounds:s,materials:{materials:e}}=this,r=[];s.reset();for(let x of e){let p=x.bounds;p.reset(),r.push(p)}let o=e.length-1;if(!t)return;let[n,i,a,c,h,l]=Yt(t.size),f=At(t.size[0]),m=At(t.size[1]),u=At(t.size[2]);for(let x=n;x<=i;x++)for(let p=a;p<=c;p++)for(let v=h;v<=l;v++){let F=t.getPaletteIndexAt(x,p,v);if(F===ye)continue;let y=x+f,A=p+m,d=v+u,_=(t.colorForPaletteIndex(F)&4278190080)>>24;_<=o&&r[_].set(y,A,d),s.set(y,A,d)}}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:o}=t,{voxels:n}=this,i=me.maximumDeformCount(this);this.recomputeModelAndMaterialBounds(),this.faceCount=0,this.vertCount=0;let{maxFaces:a}=t,c=i>0,[h,l,f,m,u,x]=Yt(n.size);s.clear();let p=this.materials.materials,v=At(n.size[0]),F=At(n.size[1]),y=At(n.size[2]);for(let A=h;A<=l;A++)for(let d=f;d<=m;d++)for(let C=u;C<=x;C++){let _=n.getPaletteIndexAt(A,d,C);if(_===ye)continue;let g=A+v,M=d+F,N=C+y,I=g<<16,V=N<<8,b=(I|V|M)*(1<<28),O=(I|M<<8|N)*(1<<28),E=(M<<16|V|g)*(1<<28);for(let T=0,Z=As.length;T<Z;T++){let X=Ms[T],P,q=A+X[0],R=d+X[1],k=C+X[2];if(q<h||q>l||R<f||R>m||k<u||k>x?P=0:P=n.getPaletteIndexAt(q,R,k),this._createFace(n,t,p,A,d,C,v,F,y,_,P,T,c,s)){let U=this.faceCount-1;if(this.faceCount>=a)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[U]=b+U,r[U]=O+U,o[U]=E+U}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=o.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(hs),t.voxelXYZFaceIndices.sort(hs),t.voxelYZXFaceIndices.sort(hs),Ae.fixClampedLinks(this,t),me.changeShape(this,t,this._shape),me.deform(this,t,i),me.warpAndScatter(this,t),be.calculateNormals(this,t),Se.transformVertices(this,t),Ze.calculateLights(this,t),Ee.calculateAmbientOcclusion(this,t),Be.combineColors(this,t),Te.assignUVs(this,t),Pe.simplify(this,t),Le.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={offset:{x:0,y:0,z:0},rescale:1};if(t===ys)return e;let r,o,n,i,a,c,{faceVertIndices:h,faceCulled:l,vertX:f,vertY:m,vertZ:u}=s,x=At(this.voxels.size[0]),p=At(this.voxels.size[1]),v=At(this.voxels.size[2]);if(!t)r=this.bounds.minX,i=this.bounds.maxX+1,o=this.bounds.minY,a=this.bounds.maxY+1,n=this.bounds.minZ,c=this.bounds.maxZ+1;else{r=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=Number.NEGATIVE_INFINITY,x=p=v=0;for(let d=0,C=this.faceCount;d<C;d++){if(l.get(d)===1)continue;let _=d*4,g=h[_],M=h[_+1],N=h[_+2],I=h[_+3],V=f[g],b=m[g],O=u[g],E=f[M],T=m[M],Z=u[M],X=f[N],P=m[N],q=u[N],R=f[I],k=m[I],S=u[I];r=Math.min(r,V,E,X,R),o=Math.min(o,b,T,P,k),n=Math.min(n,O,Z,q,S),i=Math.max(i,V,E,X,R),a=Math.max(a,b,T,P,k),c=Math.max(c,O,Z,q,S)}if(t===he){let[d,C,_,g,M,N]=Yt(this.voxels.size),I=(C-d+1)/(i-r),V=(g-_+1)/(a-o),b=(N-M+1)/(c-n);e.rescale=Math.min(I,V,b)}}let F=-(r+i)/2,y=-(o+a)/2,A=-(n+c)/2;return this._origin.nx&&(F=-r),this._origin.px&&(F=-i),this._origin.ny&&(y=-o),this._origin.py&&(y=-a),this._origin.nz&&(A=-n),this._origin.pz&&(A=-c),e.offset.x=F+x,e.offset.y=y+p,e.offset.z=A+v,e}_createFace(t,s,e,r,o,n,i,a,c,h,l,f,m,u){let x=t.colorForPaletteIndex(h),p=(x&4278190080)>>24,v=e[p];if(v.opacity===0)return!1;if(l!==ye){let W=(t.colorForPaletteIndex(l)&4278190080)>>24;if(!e[W].isTransparent&&!v.wireframe)return!1;if(!(!v.isTransparent&&!v.wireframe)){if(!(v.isTransparent&&!v.wireframe&&l!==0&&e[(t.colorForPaletteIndex(l)&4278190080)>>24].wireframe))return!1}}let F=this._isFacePlanar(v,r,o,n,f,v._flatten,this._flatten),y=this._isFacePlanar(v,r,o,n,f,v._clamp,this._clamp);if(this._isFacePlanar(v,r,o,n,f,v._skip,this._skip))return!1;let{faceVertIndices:d,faceVertColorR:C,faceVertColorG:_,faceVertColorB:g,faceFlattened:M,faceClamped:N,faceSmooth:I,faceCulled:V,faceMaterials:b,faceNameIndices:O,faceVertUs:E,faceVertVs:T}=s,{faceCount:Z}=this,X=Z*4,P=(x&255)/255,q=((x&65280)>>8)/255,R=((x&16711680)>>16)/255;d[X]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,0,F,y,u),d[X+1]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,1,F,y,u),d[X+2]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,2,F,y,u),d[X+3]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,3,F,y,u);for(let W=0;W<4;W++)C[X+W]=P,_[X+W]=q,g[X+W]=R;M.set(Z,F?1:0),N.set(Z,y?1:0),I.set(Z,0),V.set(Z,0),b[Z]=p,O[Z]=f;let k=Cs[f],S=k[0],U=k[1],Y=r+i,K=o+a,z=n+c,L=Y*S[0]+K*S[1]+z*S[2],Q=Y*U[0]+K*U[1]+z*U[2];for(let W=0;W<4;W++)E[X+W]=L,T[X+W]=Q;return m&&Ae.linkVertices(this,s,Z),this.faceCount++,!0}_createVertex(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p){let v=Vs[f][m],F=e+v[0],y=r+v[1],A=o+v[2],d=F+c<<20|y+h<<10|A+l,{_clamp:C,_flatten:_}=this,{vertDeformCount:g,vertDeformDamping:M,vertDeformStrength:N,vertWarpAmplitude:I,vertWarpFrequency:V,vertScatter:b,vertX:O,vertY:E,vertZ:T,vertLinkCounts:Z,vertFullyClamped:X,vertRing:P,vertClampedX:q,vertClampedY:R,vertClampedZ:k,vertColorR:S,vertColorG:U,vertColorB:Y,vertColorCount:K,vertFlattenedX:z,vertFlattenedY:L,vertFlattenedZ:Q}=t,{deform:W,warp:et,scatter:nt}=s,B;if(p.has(d)?(B=p.get(d),W?g[B]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,B)&&(N[B]=W.strength,M[B]=W.damping,g[B]=W.count):(g[B]=0,M[B]=0,N[B]=0),et?I[B]!==0&&(et.amplitude<I[B]||et.amplitude===I[B]&&et.frequency>V[B])&&(I[B]=et.amplitude,V[B]=et.frequency):(I[B]=0,V[B]=0),nt?b[B]!==0&&Math.abs(nt)<Math.abs(b[B])&&(b[B]=nt):b[B]=0):(B=this.vertCount++,p.set(d,B),O[B]=F,E[B]=y,T[B]=A,W?(M[B]=W.damping,g[B]=W.count,N[B]=W.strength,Z[B]=0,X.set(B,0)):g[B]=0,et?(I[B]=et.amplitude,V[B]=et.frequency):I[B]=0,nt?b[B]=nt:b[B]=0,K[B]=0,P[B]=0,q.set(B,0),R.set(B,0),k.set(B,0),z.set(B,0),L.set(B,0),Q.set(B,0)),this._setIsVertexPlanar(s,F,y,A,s._flatten,_,z,L,Q,B),this._setIsVertexPlanar(s,F,y,A,s._clamp,C,q,R,k,B),s.fade){let ht=K[B],mt=B*6;S[mt+ht]=n,U[mt+ht]=i,Y[mt+ht]=a,K[B]++}return B}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:o}=t,n=e[s],i=o[s],a=r[s];return n===1?a*(i+1):a*(1-Math.pow(n,i+1))/(1-n)}_isFacePlanar(t,s,e,r,o,n,i){let a=n,c=t.bounds;if(a||(a=i,c=this.bounds),!a)return!1;switch(o){case 0:return a.x||a.nx&&s===c.minX;case 1:return a.x||a.px&&s===c.maxX;case 2:return a.y||a.ny&&e===c.minY;case 3:return a.y||a.py&&e===c.maxY;case 4:return a.z||a.nz&&r===c.minZ;case 5:return a.z||a.pz&&r===c.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,o,n,i,a,c,h){let l=o,f=t.bounds;l||(l=n,f=this.bounds),l?(i.set(h,l.x||l.nx&&s<f.minX+.5||l.px&&s>f.maxX+.5?1:i.get(h)|0),a.set(h,l.y||l.ny&&e<f.minY+.5||l.py&&e>f.maxY+.5?1:a.get(h)|0),c.set(h,l.z||l.nz&&r<f.minZ+.5||l.pz&&r>f.maxZ+.5?1:c.get(h)|0)):(i.set(h,i.get(h)|0),a.set(h,a.get(h)|0),c.set(h,c.get(h)|0))}};var ke=class{constructor(t,s,e,r,o,n,i){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=o,this.size=n,this.detail=i}};var bs={linecontinuation:/_\\s*[\\r\\n]/gm,modelparts:new RegExp(/\\s*(\\/\\/(.*?)\\r?\\n)/.source+"|"+/\\s*(texture|light|model|material|voxels)\\s+/.source+"|"+/\\s*([^=,\\r\\n]+=\\s*data:image.*?base64,.*$)\\s*/.source+"|"+/\\s*([^=,\\r\\n]+=[^\\r\\n=;,/]+)\\s*/.source+"|"+/\\s*([A-Za-z ()\\d -]+)\\s*/.source,"gm")},Bs=["size","materials","textures","lights","voxels"],Ps=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Ls=["color"],Rs=["direction","position","distance","size","detail"],ks=["id","image"],Us=["cube"],qs=["colors"],$s=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],Me=class{static readFromString(t,s={},e=!1){let r=this._parse(t);return this._validateModel(r,s),this._createModel(r,s,e)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,r=null;return Array.from(t.replaceAll(bs.linecontinuation," ").matchAll(bs.modelparts),n=>n[0].trim()).filter(n=>n).forEach(function(n){if(!n.startsWith("//"))if(n==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(n==="light")e={color:"#FFF"},s.lights.push(e);else if(n==="model")e=s;else if(n==="material")e={},s.materials.push(e);else if(n==="voxels")e=s,r="";else if(r!==null)r+=n.replace(/\\s/g,"");else{let i=n.indexOf("=");if(i===-1)throw new Error(`SyntaxError: Invalid definition \'${n}\'.`);let a=n.substring(0,i).trim().toLowerCase(),c=n.substring(i+1).trim();e[a]=c}},this),s.voxels=r,s}static _createModel(t,s,e){let r=new Re;r.size=this._parseXYZInt("size",t.size,null,!0),r.scale=this._parseXYZFloat("scale",t.scale,"1",!0),r.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),r.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),r.simplify=t.simplify!=="false",t.resize===je?r.resize=je:t.resize===he?r.resize=he:t.resize?r.resize=null:t.autoresize==="true"&&(r.resize=he),r.shape=t.shape,r.wireframe=t.wireframe==="true"||!1,r.origin=t.origin||"x y z",r.flatten=t.flatten,r.clamp=t.clamp,r.skip=t.skip,r.tile=t.tile,r.setAo(this._parseAo(t.ao)),r.aoSides=t.aosides,r.aoSamples=parseInt(t.aosamples||50,10),r.data=this._parseVertexData(t.data,"model"),t.lights.some(a=>a.size)&&r.materials.createMaterial(qe,Ge,1,0,!1,!1,1,0,!1,1,!1,jt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0);for(let a of t.lights)this._createLight(r,a);for(let a of t.textures)this._createTexture(r,a);let o=new Map,n=new Map,i=new Set;for(let a of t.materials)this._createMaterial(r,a,o,n,i);if(r.shell=this._parseShell(t.shell),this._resolveShellColors(r.shell,r,o,n),r.materials.forEach(function(a){this._resolveShellColors(a.shell,r,o,n)},this),e||this._createVoxels(r,t.voxels,o,n),s){for(let[a,c]of Object.entries(s))if(t[a])switch(c){case"int":r[a]=parseInt(t[a],10);break;case"float":r[a]=parseFloat(t[a]);break;case"string":r[a]=t[a];break;case"boolean":r[a]=t[a]==="true";break;default:throw new Error(`Unknown type ${c} for field ${a}`)}}return r}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=Ut.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new ke(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s,e,r,o){let n=Ge;s.lighting===Fe&&(n=Fe),s.lighting===ae&&(n=ae),s.lighting===ie&&(n=ie),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let i=null;t.simplify&&s.simplify==="false"&&(i=!1),!t.simplify&&s.simplify==="true"&&(i=!0);let a=t.materials.createMaterial(s.type||ve,n,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,i,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0)),c=t.materials.materials.indexOf(a);s.deform&&a.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&a.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(a.scatter=parseFloat(s.scatter)),a.flatten=s.flatten,a.clamp=s.clamp,a.skip=s.skip,a.setAo(this._parseAo(s.ao)),a.shell=this._parseShell(s.shell),a.lights=s.lights!=="false",a.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,a.data);let h=/\\s*\\(\\s*(\\d+)\\s*\\)\\s*/g,l=/([A-Z][a-z]*)\\s*(\\(\\d+\\))?[:]\\s*(#[a-fA-F0-9]*)\\s*/g;s.colors=s.colors.replace(h,"($1)"),s.colors=s.colors.replace(l,"$1$2:$3 ");let f=s.colors.split(" ").filter(u=>u),{voxColorToColorId:m}=t;f.forEach(function(u){let x=u.split(":")[0];x.includes("(")&&(x=x.split("(")[0]);let p=u.split(":")[1];if(o.has(x))throw new Error(`SyntaxError: Duplicate ID \'${x}\'`);if(!e.has(x)){let v=cs(p);if(!/^[A-Z][a-z]*$/.test(x))throw new Error(`SyntaxError: Invalid color ID \'${x}\'`);e.set(x,v),r.set(x,c),o.add(x),m.set((v|c<<24)>>>0,x)}},this)}static _createVoxels(t,s,e,r){let o=null,n=[];if(s.matchAll)n=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let C=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,_;for(;(_=C.exec(s))!==null;)n.push(_);n=n[Symbol.iterator]()}let i=this._unpackRle(n),a=t.size.x*t.size.y*t.size.z,c=0,h=e.size,l=1;h>=2&&(l=2),h>=4&&(l=4),h>=16&&(l=8);let f=t.voxels=new Kt([t.size.x,t.size.y,t.size.z],l);for(let C=0;C<i.length;C++)c+=i[C][1];if(c!==a)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${a} voxels) but the voxel matrix contains ${c} voxels.`);let m={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new le;let u=null,x=null,p=t.bounds,v=t.size,F=At(v.x),y=At(v.y),A=At(v.z),d=t.materials.materials;for(let C=0,_=i.length;C<_;C++){let g=null,M=i[C],N=M[0];N!=="-"&&(g=N,e.has(g)||(o===null&&(o=t.materials.createMaterial(ve,Ge,.5,0,!1,1,!1)),u=t.materials.materials.indexOf(o),e.set(g,cs("#FF00FF")),r.set(g,u)),u=r.get(g),x=d[u].bounds);let I=M[1];if(e.has(g)){let V=e.get(g);this._setVoxels(p,x,u,F,y,A,V,I,m,f)}else this._advanceContext(I,F,y,A,m)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=Ut.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),o=parseFloat(t.split(" ")[2]||1),n=parseFloat(t.split(" ")[3]||70);n=Math.max(0,Math.min(90,Math.round(n))),s={color:e,maxDistance:r,strength:o,angle:n}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let o=0;o<r.length/2;o++){let n=r[o*2+0],i=r[o*2+1];if(!/^[A-Z][a-z]*$/.test(n)||!/^([-+]?[0-9]*\\.?[0-9]+)*$/.test(i)){e=!0;break}else s.push({colorId:r[o*2],distance:r[o*2+1]})}}if(e)throw new Error(`SyntaxError: shell \'${t}\' must be \'none\' or one or more color ID\'s and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,o){return r.distance-o.distance})),s}static _resolveShellColors(t,s,e,r){!t||t.length===0||t.forEach(function(o){if(!e.has(o.colorId))throw new Error(`SyntaxError: shell color ID \'${o.colorId}\' is not a known color`);o.voxBgr=e.get(o.colorId),o.materialIndex=r.get(o.colorId)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\\s+/),o=null;for(let i=0;i<r.length;i++){let a=r[i];if(isNaN(a))o={name:a,values:[]},e.push(o);else if(o)o.values.push(parseFloat(a));else break}let n=e.length===0;for(let i=0;i<e.length;i++)n=n||e[i].values.length===0||e[i].values.length>=4;if(n)throw new Error(`SyntaxError: The data property \'${e.data}\' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch(r){e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let o=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(o.x),y:Math.trunc(o.y),z:Math.trunc(o.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let o=s.split(/[\\s/]+/);if(o.length===1&&r&&(o.push(o[0]),o.push(o[0])),o.length!==3)throw new Error(`SyntaxError: \'${t}\' must have three values.`);if(o={x:parseFloat(o[0]),y:parseFloat(o[1]),z:parseFloat(o[2])},Number.isNaN(o.x)||Number.isNaN(o.y)||Number.isNaN(o.z))throw new Error(`SyntaxError: Invalid value \'${s}\' for ${t}\'.`);return o}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let o=r.value[0],n=o[0],i=o[1];if(n>="0"&&n<="9")e=parseInt(o,10);else if(o==="("){let a=this._unpackRle(t);for(let c=0;c<e;c++)Array.prototype.push.apply(s,a);e=1}else{if(o===")")return s;o.length>1&&n>="A"&&n<="Z"&&i===n?(e>1?(s.push([n,e]),s.push([n,o.length-1])):s.push([n,o.length]),e=1):o.length>1&&n==="-"&&i==="-"?(e>1?(s.push(["-",e]),s.push(["-",o.length-1])):s.push(["-",o.length]),e=1):(s.push([o,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,o,n,i,a,c,h){let{x:l,y:f,z:m,maxx:u,maxy:x,minx:p,miny:v}=c;l-=r,f-=o,m-=n,p-=r,v-=o,u-=r,x-=o;let F=(i|e<<24)>>>0;for(;a-- >0;)t.set(l,f,m),s.set(l,f,m),h.setColorAt(l,f,m,F),l++,l>u&&(l=p,f++),f>x&&(f=v,m++);c.x=l+r,c.y=f+o,c.z=m+n}static _advanceContext(t,s,e,r,o){let{x:n,y:i,z:a,maxx:c,maxy:h,minx:l,miny:f}=o;for(n-=s,i-=e,a-=r,l-=s,f-=e,c-=s,h-=e;t-- >0;)n++,n>c&&(n=l,i++),i>h&&(i=f,a++);o.x=n+s,o.y=i+e,o.z=a+r}static _validateModel(t,s){this._validateProperties(t,Bs,[...Object.keys(s),...Ps],"model");for(let e of t.lights)this._validateLight(e);for(let e of t.textures)this._validateTexture(e);for(let e of t.materials)this._validateMaterial(e)}static _validateLight(t){if(this._validateProperties(t,Ls,Rs,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,ks,Us,"texture")}static _validateMaterial(t){this._validateProperties(t,qs,$s,"material")}static _validateProperties(t,s,e,r){for(let o of s)if(!Object.hasOwn(t,o))throw new Error("SyntaxError: "+r+\' is missing mandatory property "\'+o+\'".\');for(let o in t)if(!s.includes(o)&&!e.includes(o))throw new Error("SyntaxError: "+r+\' has unrecognized property "\'+o+\'".\')}};var dt=new Map,re=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r=re._getAllShells(t),o=r.map(i=>i.length).reduce((i,a)=>Math.max(i,a),0)+1,n={materials:[],groups:[],indices:new Uint32Array(e*4*6*o),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3*o),normals:new Float32Array(e*4*3*o),colors:new Float32Array(e*4*3*o),uvs:new Float32Array(e*4*2*o),bounds:{minX:1/0,minY:1/0,minZ:1/0,maxX:-1/0,maxY:-1/0,maxZ:-1/0,centerX:0,centerY:0,centerZ:0,radius:0},data:null};return t.materials.baseMaterials.forEach(function(i){i.index=n.materials.length,n.materials.push(re._generateMaterial(i,t))},this),dt.clear(),re._generateAll(t,n,s,r),n}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===ce?ce:jt};return t.type!==$e&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e,r){let o=t.materials.materials,{faceMaterials:n,faceCulled:i}=e,a=t.scale.x,c=t.scale.y,h=t.scale.z;t.materials.baseMaterials.forEach(function(_){let g=s.indicesIndex,M=!1;for(let N=0,I=t.faceCount;N<I;N++){if(i.get(N)!==0)continue;let V=n[N],b=o[V];b._baseMaterial===_&&(re._generateFace(t,e,N,s),M||(M=!0));for(let O=0,E=r.length;O<E;O++){let[T,Z,X,P,q,R]=r[O];Z._baseMaterial===_&&T===b&&(re._generateShellFace(t,e,N,s,X*a,X*c,X*h,P,q,R,Z,a,c,h),M||(M=!0))}}if(M){let N=s.indicesIndex;s.groups.push({start:g,count:N-g,materialIndex:_.index})}},this);let l=s.maxIndex+1,f=1/0,m=1/0,u=1/0,x=-1/0,p=-1/0,v=-1/0;for(let _=0,g=l*3;_<g;_+=3){let M=s.positions[_],N=s.positions[_+1],I=s.positions[_+2];f=Math.min(f,M),m=Math.min(m,N),u=Math.min(u,I),x=Math.max(x,M),p=Math.max(p,N),v=Math.max(v,I)}let F=(f+x)/2,y=(m+p)/2,A=(u+v)/2,d=-1/0;for(let _=0,g=l*3;_<g;_+=3){let M=s.positions[_],N=s.positions[_+1],I=s.positions[_+2],V=M-F,b=N-y,O=I-A;d=Math.max(d,V*V+b*b+O*O)}let C=Math.sqrt(d);s.bounds.minX=f,s.bounds.minY=m,s.bounds.minZ=u,s.bounds.maxX=x,s.bounds.maxY=p,s.bounds.maxZ=v,s.bounds.centerX=F,s.bounds.centerY=y,s.bounds.centerZ=A,s.bounds.radius=C,s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,l*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,l*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,l*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,l*2)}static _generateFace(t,s,e,r){let{faceVertIndices:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,vertX:c,vertY:h,vertZ:l,faceVertColorR:f,faceVertColorG:m,faceVertColorB:u,faceVertUs:x,faceVertVs:p,faceMaterials:v,faceSmooth:F}=s,A=t.materials.materials[v[e]],d=o[e*4],C=o[e*4+1],_=o[e*4+2],g=o[e*4+3],M=c[d],N=h[d],I=l[d],V=c[C],b=h[C],O=l[C],E=c[_],T=h[_],Z=l[_],X=c[g],P=h[g],q=l[g],R=n[e*4],k=i[e*4],S=a[e*4],U=n[e*4+1],Y=i[e*4+1],K=a[e*4+1],z=n[e*4+2],L=i[e*4+2],Q=a[e*4+2],W=n[e*4+3],et=i[e*4+3],nt=a[e*4+3],B=f[e*4],ht=m[e*4],mt=u[e*4],zt=f[e*4+1],_t=m[e*4+1],at=u[e*4+1],Ot=f[e*4+2],ot=m[e*4+2],gt=u[e*4+2],it=f[e*4+3],Vt=m[e*4+3],Ct=u[e*4+3],Et=x[e*4],Mt=p[e*4],Xt=x[e*4+1],bt=p[e*4+1],St=x[e*4+2],Zt=p[e*4+2],Lt=x[e*4+3],Qt=p[e*4+3];if(A.side===pe){let G,j,H;G=M,j=N,H=I,M=E,N=T,I=Z,E=G,T=j,Z=H,G=R,j=k,H=S,R=z,k=L,S=Q,z=G,L=j,Q=H,G=B,j=ht,H=mt,B=Ot,ht=ot,mt=gt,Ot=G,ot=j,gt=H,G=Et,j=Mt,Et=St,Mt=Zt,St=G,Zt=j}let qt=F.get(e)===1;if(!(A.lighting===ae||A.lighting===ie&&qt)){let G=z+U+R,j=L+Y+k,H=Q+K+S,rt=R+W+z,lt=k+et+L,Pt=S+nt+Q,te=Math.sqrt(G*G+j*j+H*H),$=Math.sqrt(rt*rt+lt*lt+Pt*Pt),J=1/te,D=1/$;if(G*=J,j*=J,H*=J,rt*=D,lt*=D,Pt*=D,A.lighting===Fe){let xt=Math.sqrt(G*G+j*j+H*H)+Math.sqrt(rt*rt+lt*lt+Pt*Pt),yt=1/xt;G=rt=(G+rt)*yt,j=lt=(j+lt)*yt,H=Pt=(H+Pt)*yt}R=G,k=j,S=H,U=G,Y=j,K=H,z=G,L=j,Q=H,W=rt,et=lt,nt=Pt}let It=r.indices,vt=r.positions,Ft=r.normals,ft=r.colors,Nt=r.uvs,Jt=M*3+N*61673+I*87119+R*2766691+k*73091+S*5040949+B*8636137+ht*2360719+mt*4739729+Math.round(Et*1e3)*719959+Math.round(Mt*1e3)*172741,Dt=V*3+b*61673+O*87119+U*2766691+Y*73091+K*5040949+zt*8636137+_t*2360719+at*4739729+Math.round(Xt*1e3)*719959+Math.round(bt*1e3)*172741,Rt=E*3+T*61673+Z*87119+z*2766691+L*73091+Q*5040949+Ot*8636137+ot*2360719+gt*4739729+Math.round(St*1e3)*719959+Math.round(Zt*1e3)*172741,ct=X*3+P*61673+q*87119+W*2766691+et*73091+nt*5040949+it*8636137+Vt*2360719+Ct*4739729+Math.round(Lt*1e3)*719959+Math.round(Qt*1e3)*172741,ut=dt.has(Jt),pt=dt.has(Dt),$t=dt.has(Rt),oe=dt.has(ct),Tt,kt,Bt,Wt;if(ut)Tt=dt.get(Jt);else{Tt=r.maxIndex+1;let G=Tt*3,j=G+1,H=G+2,rt=Tt*2,lt=rt+1;r.maxIndex=Tt,vt[G]=M,vt[j]=N,vt[H]=I,Ft[G]=R,Ft[j]=k,Ft[H]=S,ft[G]=B,ft[j]=ht,ft[H]=mt,Nt[rt]=Et,Nt[lt]=Mt,dt.set(Jt,Tt)}if(pt)kt=dt.get(Dt);else{kt=r.maxIndex+1;let G=kt*3,j=G+1,H=G+2,rt=kt*2,lt=rt+1;r.maxIndex=kt,vt[G]=V,vt[j]=b,vt[H]=O,Ft[G]=U,Ft[j]=Y,Ft[H]=K,ft[G]=zt,ft[j]=_t,ft[H]=at,Nt[rt]=Xt,Nt[lt]=bt,dt.set(Dt,kt)}if($t)Bt=dt.get(Rt);else{Bt=r.maxIndex+1;let G=Bt*3,j=G+1,H=G+2,rt=Bt*2,lt=rt+1;r.maxIndex=Bt,vt[G]=E,vt[j]=T,vt[H]=Z,Ft[G]=z,Ft[j]=L,Ft[H]=Q,ft[G]=Ot,ft[j]=ot,ft[H]=gt,Nt[rt]=St,Nt[lt]=Zt,dt.set(Rt,Bt)}if(oe)Wt=dt.get(ct);else{Wt=r.maxIndex+1;let G=Wt*3,j=G+1,H=G+2,rt=Wt*2,lt=rt+1;r.maxIndex=Wt,vt[G]=X,vt[j]=P,vt[H]=q,Ft[G]=W,Ft[j]=et,Ft[H]=nt,ft[G]=it,ft[j]=Vt,ft[H]=Ct,Nt[rt]=Lt,Nt[lt]=Qt,dt.set(ct,Wt)}let Gt=r.indicesIndex;It[Gt]=Bt,It[Gt+1]=kt,It[Gt+2]=Tt,It[Gt+3]=Tt,It[Gt+4]=Wt,It[Gt+5]=Bt,r.indicesIndex+=6}static _generateShellFace(t,s,e,r,o,n,i,a,c,h,l){let{faceVertIndices:f,faceVertBothNormalX:m,faceVertBothNormalY:u,faceVertBothNormalZ:x,faceVertSmoothNormalX:p,faceVertSmoothNormalY:v,faceVertSmoothNormalZ:F,faceVertFlatNormalX:y,faceVertFlatNormalY:A,faceVertFlatNormalZ:d,vertX:C,vertY:_,vertZ:g,faceVertUs:M,faceVertVs:N,faceSmooth:I}=s,V=f[e*4],b=f[e*4+1],O=f[e*4+2],E=f[e*4+3],T=C[V],Z=_[V],X=g[V],P=C[b],q=_[b],R=g[b],k=C[O],S=_[O],U=g[O],Y=C[E],K=_[E],z=g[E],L=p[e*4],Q=v[e*4],W=F[e*4],et=p[e*4+1],nt=v[e*4+1],B=F[e*4+1],ht=p[e*4+2],mt=v[e*4+2],zt=F[e*4+2],_t=p[e*4+3],at=v[e*4+3],Ot=F[e*4+3],ot,gt,it,Vt,Ct,Et,Mt,Xt,bt,St,Zt,Lt,Qt=I.get(e)===1;switch(l.lighting){case ae:ot=p[e*4],gt=v[e*4],it=F[e*4],Vt=p[e*4+1],Ct=v[e*4+1],Et=F[e*4+1],Mt=p[e*4+2],Xt=v[e*4+2],bt=F[e*4+2],St=p[e*4+3],Zt=v[e*4+3],Lt=F[e*4+3];break;case ie:Qt?(ot=m[e*4],gt=u[e*4],it=x[e*4],Vt=m[e*4+1],Ct=u[e*4+1],Et=x[e*4+1],Mt=m[e*4+2],Xt=u[e*4+2],bt=x[e*4+2],St=m[e*4+3],Zt=u[e*4+3],Lt=x[e*4+3]):(ot=y[e*4],gt=A[e*4],it=d[e*4],Vt=y[e*4+1],Ct=A[e*4+1],Et=d[e*4+1],Mt=y[e*4+2],Xt=A[e*4+2],bt=d[e*4+2],St=y[e*4+3],Zt=A[e*4+3],Lt=d[e*4+3]);break;default:ot=y[e*4],gt=A[e*4],it=d[e*4],Vt=y[e*4+1],Ct=A[e*4+1],Et=d[e*4+1],Mt=y[e*4+2],Xt=A[e*4+2],bt=d[e*4+2],St=y[e*4+3],Zt=A[e*4+3],Lt=d[e*4+3];break}let qt=M[e*4],It=N[e*4],vt=M[e*4+1],Ft=N[e*4+1],ft=M[e*4+2],Nt=N[e*4+2],Jt=M[e*4+3],Dt=N[e*4+3];if(l.side===pe){let $,J,D;$=T,J=Z,D=X,T=k,Z=S,X=U,k=$,S=J,U=D,$=ot,J=gt,D=it,ot=Mt,gt=Xt,it=bt,Mt=$,Xt=J,bt=D,$=qt,J=It,qt=ft,It=Nt,ft=$,Nt=J,$=L,J=Q,D=W,L=ht,Q=mt,W=zt,ht=$,mt=J,zt=D}if(T+=o*L,Z+=n*Q,X+=i*W,P+=o*et,q+=n*nt,R+=i*B,k+=o*ht,S+=n*mt,U+=i*zt,Y+=o*_t,K+=n*at,z+=i*Ot,!(l.lighting===ae||l.lighting===ie&&Qt)){let $=Mt+Vt+ot,J=Xt+Ct+gt,D=bt+Et+it,xt=ot+St+Mt,yt=gt+Zt+Xt,se=it+Lt+bt,de=Math.sqrt($*$+J*J+D*D),ge=Math.sqrt(xt*xt+yt*yt+se*se),fe=1/de,ne=1/ge;if($*=fe,J*=fe,D*=fe,xt*=ne,yt*=ne,se*=ne,l.lighting===Fe){let _e=Math.sqrt($*$+J*J+D*D)+Math.sqrt(xt*xt+yt*yt+se*se),ue=1/_e;$=xt=($+xt)*ue,J=yt=(J+yt)*ue,D=se=(D+se)*ue}ot=$,gt=J,it=D,Vt=$,Ct=J,Et=D,Mt=$,Xt=J,bt=D,St=xt,Zt=yt,Lt=se}let Rt=r.indices,ct=r.positions,ut=r.normals,pt=r.colors,$t=r.uvs,oe=T*3+Z*61673+X*87119+ot*2766691+gt*73091+it*5040949+a*8636137+c*2360719+h*4739729+Math.round(qt*1e3)*719959+Math.round(It*1e3)*172741,Tt=P*3+q*61673+R*87119+Vt*2766691+Ct*73091+Et*5040949+a*8636137+c*2360719+h*4739729+Math.round(vt*1e3)*719959+Math.round(Ft*1e3)*172741,kt=k*3+S*61673+U*87119+Mt*2766691+Xt*73091+bt*5040949+a*8636137+c*2360719+h*4739729+Math.round(ft*1e3)*719959+Math.round(Nt*1e3)*172741,Bt=Y*3+K*61673+z*87119+St*2766691+Zt*73091+Lt*5040949+a*8636137+c*2360719+h*4739729+Math.round(Jt*1e3)*719959+Math.round(Dt*1e3)*172741,Wt=dt.has(oe),Gt=dt.has(Tt),G=dt.has(kt),j=dt.has(Bt),H,rt,lt,Pt;if(Wt)H=dt.get(oe);else{H=r.maxIndex+1;let $=H*3,J=$+1,D=$+2,xt=H*2,yt=xt+1;r.maxIndex=H,ct[$]=T,ct[J]=Z,ct[D]=X,ut[$]=ot,ut[J]=gt,ut[D]=it,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=qt,$t[yt]=It,dt.set(oe,H)}if(Gt)rt=dt.get(Tt);else{rt=r.maxIndex+1;let $=rt*3,J=$+1,D=$+2,xt=rt*2,yt=xt+1;r.maxIndex=rt,ct[$]=P,ct[J]=q,ct[D]=R,ut[$]=Vt,ut[J]=Ct,ut[D]=Et,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=vt,$t[yt]=Ft,dt.set(Tt,rt)}if(G)lt=dt.get(kt);else{lt=r.maxIndex+1;let $=lt*3,J=$+1,D=$+2,xt=lt*2,yt=xt+1;r.maxIndex=lt,ct[$]=k,ct[J]=S,ct[D]=U,ut[$]=Mt,ut[J]=Xt,ut[D]=bt,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=ft,$t[yt]=Nt,dt.set(kt,lt)}if(j)Pt=dt.get(Bt);else{Pt=r.maxIndex+1;let $=Pt*3,J=$+1,D=$+2,xt=Pt*2,yt=xt+1;r.maxIndex=Pt,ct[$]=Y,ct[J]=K,ct[D]=z,ut[$]=St,ut[J]=Zt,ut[D]=Lt,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=Jt,$t[yt]=Dt,dt.set(Bt,Pt)}let te=r.indicesIndex;Rt[te]=lt,Rt[te+1]=rt,Rt[te+2]=H,Rt[te+3]=H,Rt[te+4]=Pt,Rt[te+5]=lt,r.indicesIndex+=6}static _getAllShells(t){let s=[];return t.materials.forEach(function(e){let r;t.shell&&t.shell.length>0&&!e.shell&&(r=t.shell),e.shell&&e.shell.length>0&&(r=e.shell),r&&r.forEach(function(o){let n=o.voxBgr,i=(n>>16&255)/255,a=(n>>8&255)/255,c=(n>>0&255)/255;s.push([e,t.materials.materials[o.materialIndex],o.distance,c,a,i])},this)},this),s.sort((e,r)=>e[1]-r[1]),s}};var Ue=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),o=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=wt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=wt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=wt.create(new Uint8Array(r).buffer,1,0),this.faceClamped=wt.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=wt.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=wt.create(new Uint8Array(r).buffer,1,0),this.faceCulled=wt.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(o),this.faceVertNormalX=new Float32Array(o),this.faceVertNormalY=new Float32Array(o),this.faceVertNormalZ=new Float32Array(o),this.faceVertFlatNormalX=new Float32Array(o),this.faceVertFlatNormalY=new Float32Array(o),this.faceVertFlatNormalZ=new Float32Array(o),this.faceVertSmoothNormalX=new Float32Array(o),this.faceVertSmoothNormalY=new Float32Array(o),this.faceVertSmoothNormalZ=new Float32Array(o),this.faceVertBothNormalX=new Float32Array(o),this.faceVertBothNormalY=new Float32Array(o),this.faceVertBothNormalZ=new Float32Array(o),this.faceVertColorR=new Float32Array(o),this.faceVertColorG=new Float32Array(o),this.faceVertColorB=new Float32Array(o),this.faceVertLightR=new Float32Array(o),this.faceVertLightG=new Float32Array(o),this.faceVertLightB=new Float32Array(o),this.faceVertAO=new Float32Array(o),this.faceVertUs=new Float32Array(o),this.faceVertVs=new Float32Array(o),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var Gs=new Ue(1024*768*2);onmessage=function(w){try{let t=Hs(w.data.svoxmodel);postMessage({svoxmesh:t,elementId:w.data.elementId,worker:w.data.worker},[t.positions.buffer,t.normals.buffer,t.colors.buffer,t.indices.buffer,t.uvs.buffer])}catch(t){console.error(t)}};function Hs(w){let t="model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",s="model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",e;(!w||w.trim()==="")&&(e={name:"ConfigError",message:"Model not found"},w=t);let r=null;try{r=Me.readFromString(w)}catch(n){e=n,r=Me.readFromString(s)}let o=re.generate(r,Gs);return o.error=e,o}\n')}var qe=class{constructor(t,s){this._resultHandler=t,this._resultCallback=s,this._nrOfWorkers=window.navigator.hardwareConcurrency,this._workers=[],this._free=[],this._tasks=[]}executeTask(t){if(this._workers.length<this._nrOfWorkers){let s=new ds,e=this;s.onmessage=function(r){e._free.push(event.data.worker),e._processNextTask(),e._resultCallback.apply(e._resultHandler,[event.data])},this._free.push(this._workers.length),this._workers.push(s)}this._tasks.push(t),this._processNextTask()}_processNextTask(){if(this._tasks.length>0&&this._free.length>0){let t=this._tasks.shift();t.worker=this._free.shift(),this._workers[t.worker].postMessage(t)}}};if(typeof window<"u"&&typeof AFRAME<"u"){let N=null;AFRAME.registerComponent("svox",{schema:{model:{type:"string"},worker:{type:"boolean",default:!1}},multiple:!1,_MISSING:"model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",_ERROR:"model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",_workerPool:null,init:function(){let t=this.el,s=this.data,e=s.worker,r=!1,a=s.model,o=window.SVOX.models[a];o||(this._logError({name:"ConfigError",message:"Model not found"}),o=this._MISSING,r=!0,e=!1),e?this._generateModelInWorker(o,t):this._generateModel(o,t,r)},_generateModel:function(t,s,e){let r;r=window.model=Ue.readFromString(t);let a=new $e(1024*768*2),o=performance.now(),n=ae.generate(r,a),i=performance.now();this.mesh=Kt.generate(n);let l=`Time: ${Math.round(i-o)}ms. Verts:${n.maxIndex+1} Faces:${n.indices.length/3} Materials:${this.mesh.material.length}`,f=document.getElementById("svoxstats");f&&!e&&(f.innerHTML="Last render: "+l),s.setObject3D("mesh",this.mesh)},_generateModelInWorker:function(t,s){s.id||(s.id=new Date().valueOf().toString(36)+Math.random().toString(36).substr(2));let e={svoxmodel:t,elementId:s.id};N||(N=new qe(this,this._processResult)),N.executeTask(e)},_processResult:function(t){if(t.svoxmesh.error)this._logError(t.svoxmesh.error);else{let s=Kt.generate(t.svoxmesh);document.querySelector("#"+t.elementId).setObject3D("mesh",s)}},_toSharedArrayBuffer(t){let s=new Float32Array(new ArrayBuffer(t.length*4));return s.set(t,0),s},_logError:function(t){let s=t.name+": "+t.message,e=document.getElementById("svoxerrors");e&&(e.innerHTML=s),console.error(`SVOXERROR (${this.data.model}) ${s}`)},update:function(t){},remove:function(){let t=["map","normalMap","roughnessMap","metalnessMap","emissiveMap","matcap"];if(this.mesh){for(;this.mesh.material.length>0;)t.forEach(function(s){this.mesh.material[0][s]&&this.mesh.material[0][s].dispose()},this),this.mesh.material[0].dispose(),this.mesh.material.shift();this.mesh.geometry.dispose(),this.el.removeObject3D("mesh"),delete this.mesh}},pause:function(){},play:function(){},events:{}})}
