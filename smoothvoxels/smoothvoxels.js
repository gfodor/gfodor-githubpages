(()=>{var Jt="standard",He="basic",ys="lambert",Fs="phong",Ms="matcap",_s="toon",qe="normal",Ve="bounds",Wt="model",ye="flat",Ce="quad",oe="smooth",ie="both",Mt="front",Fe="back",Kt="double",As=["nx","px","ny","py","nz","pz"],Vs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Cs=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],Is=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],ws=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var es=(E,t,s)=>Math.min(Math.max(E,t),s),st=class{static fromHex(t){let s=new st;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(es(t,0,1)*255),s=Math.round(es(s,0,1)*255),e=Math.round(es(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return st.fromHex(r)}clone(){let t=new st;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof st?st.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):st.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((a,o)=>a+o.r,0),e=this.g+t.reduce((a,o)=>a+o.g,0),r=this.b+t.reduce((a,o)=>a+o.b,0);return st.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ne=class{constructor(t,s,e,r,a,o,n,i,l,f,c,h,m,u,g,p,F,y,v,M,x,A,C,d,V){switch(t=t||Jt,t){case Jt:case He:case ys:case Fs:case _s:case Ms:case qe:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||g&&g.cube||p&&p.cube||F&&F.cube)&&!(x===-1&&A===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(v&&M)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof a=="number"?a:0,this.transparent=!!o,this.refractionRatio=typeof n=="number"?n:.9,this.wireframe=!!i,this.side=l||Mt,[Mt,Fe,Kt].includes(this.side)||(this.side=Mt),this.setEmissive(f,c),this.fog=typeof h=="boolean"?h:!0,this.map=m,this.normalMap=u,this.roughnessMap=g,this.metalnessMap=p,this.emissiveMap=F,this.matcap=y,this.reflectionMap=v,this.refractionMap=M,this.mapTransform={uscale:x||-1,vscale:A||-1,uoffset:C||0,voffset:d||0,rotation:V||0},this.aoActive=!1,this._colors=[]}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:st.fromHex(t),intensity:s}}get emissive(){return this._emissive}get colors(){return this._colors}get colorCount(){return this._colors.length}get colorUsageCount(){return this._colors.reduce((t,s)=>t+s.count,0)}};function Ie(E,t,s,e){let r=s*E;for(let a=0;a<s;){let o=r&7,n=r>>3,i=s-a,l=8-o,f=i<l?i:l,c=~(255<<f),h=t&c;t>>=f;let m=~(c<<o);e[n]=e[n]&m|h<<o,r+=f,a+=f}}var ss=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Ie(t,s,1,this.view)}clear(){this.view.fill(0)}},rs=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Ie(t,s,2,this.view)}clear(){this.view.fill(0)}},as=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Ie(t,s,4,this.view)}clear(){this.view.fill(0)}},os=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Ie(t,s,8,this.view)}clear(){this.view.fill(0)}},is=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,a=0;for(let o=0;o<e;){let n=r&7,i=r>>3,l=e-o,f=8-n,c=l<f?l:f,h=s[i],m=~(255<<c);a|=(h>>n&m)<<o,r+=c,o+=c}return a>>>0}set(t,s){Ie(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},at=class{static create(t,s,e,r=null){let a=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new ss(a);case 2:return new rs(a);case 4:return new as(a);case 8:return new os(a);default:return new is(a)}}};var Qt=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var le=class{constructor(t,s,e,r,a,o,n){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=a,this.size=o,this.detail=n}};var j=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\s+(?:none|-x|x|\+x|-y|y|\+y|-z|z|\+z|\s))+\s*$/.test(t))throw new Error(`SyntaxError: Planar expression '${t}' is only allowed to be 'none' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var ce=class{constructor(t,s,e,r,a){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=j.parse(""),this._clamp=j.parse(""),this._skip=j.parse(""),this._ao=void 0,this.lights=!0,this._side=a,this._colors=[],this.bounds=new Qt}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t??1,0),s=s??1,e=e??1,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=j.parse(t)}get flatten(){return j.toString(this._flatten)}set clamp(t){this._clamp=j.parse(t)}get clamp(){return j.toString(this._clamp)}set skip(t){this._skip=j.parse(t)}get skip(){return j.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=j.parse(t)}get aoSides(){return j.toString(this._aoSides)}addColorHEX(t){return this.addColor(st.fromHex(t))}addColorRGB(t,s,e){return this.addColor(st.fromRgb(t,s,e))}addColor(t){if(!(t instanceof st))throw new Error("addColor requires a Color object, e.g. material.addColor(Color.fromHex('#FFFFFF'))");return t._setMaterial(this),this._colors.push(t),this._baseMaterial._colors.push(t),t}};var fe=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,a,o,n,i,l,f,c,h,m,u,g,p,F,y,v,M,x,A,C,d,V,z,I,_){h=h||Mt,[Mt,Fe,Kt].includes(h)||(h=Mt);let T=h===Kt?Kt:Mt,O=new ne(t,e,r,n,i,l,f,c,T,m,u,g,p,F,y,v,M,x,A,C,d,V,z,I,_),Y=O.baseId,Z=this.baseMaterials.find(N=>N.baseId===Y);Z?O=Z:this.baseMaterials.push(O);let X=new ce(O,s,a,o,h);return this.materials.push(X),X}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}findColorByExId(t){let s=null;return this.forEach(function(e){s||(s=e.colors.find(r=>r.exId===t))},this),s}getMaterialListIndex(t){return this.materials.indexOf(t)}};var zt=new Map,Bt=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r={materials:[],groups:[],indices:new Uint32Array(e*4*6),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3),normals:new Float32Array(e*4*3),colors:new Float32Array(e*4*3),uvs:new Float32Array(e*4*2),data:null};return t.materials.baseMaterials.forEach(function(a){a.index=r.materials.length,r.materials.push(Bt._generateMaterial(a,t))},this),zt.clear(),Bt._generateAll(t,r,s),r}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===Kt?Kt:Mt};return t.type!==qe&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e){let r=t.materials.materials,{faceMaterials:a,faceCulled:o}=e;t.materials.baseMaterials.forEach(function(i){let l=s.indicesIndex;for(let c=0,h=t.faceCount;c<h;c++)r[a[c]]._baseMaterial===i&&o.get(c)===0&&Bt._generateFace(t,e,c,s);let f=s.indicesIndex;s.groups.push({start:l,count:f-l,materialIndex:i.index})},this);let n=s.maxIndex+1;s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,n*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,n*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,n*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,n*2)}static _generateFace(t,s,e,r){let{faceVertIndices:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,vertX:l,vertY:f,vertZ:c,faceVertColorR:h,faceVertColorG:m,faceVertColorB:u,faceVertUs:g,faceVertVs:p,faceMaterials:F,faceSmooth:y}=s,M=t.materials.materials[F[e]],x=a[e*4],A=a[e*4+1],C=a[e*4+2],d=a[e*4+3],V=l[x],z=f[x],I=c[x],_=l[A],T=f[A],O=c[A],Y=l[C],Z=f[C],X=c[C],N=l[d],P=f[d],H=c[d],k=o[e*4],U=n[e*4],S=i[e*4],L=o[e*4+1],b=n[e*4+1],q=i[e*4+1],w=o[e*4+2],R=n[e*4+2],K=i[e*4+2],G=o[e*4+3],D=n[e*4+3],tt=i[e*4+3],B=h[e*4],ot=m[e*4],it=u[e*4],gt=h[e*4+1],mt=m[e*4+1],et=u[e*4+1],xt=h[e*4+2],pt=m[e*4+2],bt=u[e*4+2],vt=h[e*4+3],Nt=m[e*4+3],Yt=u[e*4+3],jt=g[e*4],kt=p[e*4],se=g[e*4+1],re=p[e*4+1],Lt=g[e*4+2],$t=p[e*4+2],ae=g[e*4+3],Zt=p[e*4+3];if(M.side===Fe){let $,Q,W;$=V,Q=z,W=I,V=Y,z=Z,I=X,Y=$,Z=Q,X=W,$=k,Q=U,W=S,k=w,U=R,S=K,w=$,R=Q,K=W,$=B,Q=ot,W=it,B=xt,ot=pt,it=bt,xt=$,pt=Q,bt=W,$=jt,Q=kt,jt=Lt,kt=$t,Lt=$,$t=Q}let Rt=y.get(e)===1;if(!(M.lighting===oe||M.lighting===ie&&Rt)){let $=w+L+k,Q=R+b+U,W=K+q+S,rt=k+G+w,ut=U+D+R,qt=S+tt+K,Ae=Math.sqrt($*$+Q*Q+W*W),Gt=Math.sqrt(rt*rt+ut*ut+qt*qt),Dt=1/Ae,Pe=1/Gt;if($*=Dt,Q*=Dt,W*=Dt,rt*=Pe,ut*=Pe,qt*=Pe,M.lighting===Ce){let ke=Math.sqrt($*$+Q*Q+W*W)+Math.sqrt(rt*rt+ut*ut+qt*qt),ge=1/ke;$=rt=($+rt)*ge,Q=ut=(Q+ut)*ge,W=qt=(W+qt)*ge}k=$,U=Q,S=W,L=$,b=Q,q=W,w=$,R=Q,K=W,G=rt,D=ut,tt=qt}let yt=r.indices,nt=r.positions,lt=r.normals,ct=r.colors,Ft=r.uvs,Pt=V*3+z*61673+I*87119+k*2766691+U*73091+S*5040949+B*8636137+ot*2360719+it*4739729+Math.round(jt*1e3)*719959+Math.round(kt*1e3)*172741,Ut=_*3+T*61673+O*87119+L*2766691+b*73091+q*5040949+gt*8636137+mt*2360719+et*4739729+Math.round(se*1e3)*719959+Math.round(re*1e3)*172741,Ht=Y*3+Z*61673+X*87119+w*2766691+R*73091+K*5040949+xt*8636137+pt*2360719+bt*4739729+Math.round(Lt*1e3)*719959+Math.round($t*1e3)*172741,_t=N*3+P*61673+H*87119+G*2766691+D*73091+tt*5040949+vt*8636137+Nt*2360719+Yt*4739729+Math.round(ae*1e3)*719959+Math.round(Zt*1e3)*172741,Et=zt.has(Pt),St=zt.has(Ut),de=zt.has(Ht),xe=zt.has(_t),Ct,Tt,It,Ot;if(Et)Ct=zt.get(Pt);else{Ct=r.maxIndex+1;let $=Ct*3,Q=$+1,W=$+2,rt=Ct*2,ut=rt+1;r.maxIndex=Ct,nt[$]=V,nt[Q]=z,nt[W]=I,lt[$]=k,lt[Q]=U,lt[W]=S,ct[$]=B,ct[Q]=ot,ct[W]=it,Ft[rt]=jt,Ft[ut]=kt,zt.set(Pt,Ct)}if(St)Tt=zt.get(Ut);else{Tt=r.maxIndex+1;let $=Tt*3,Q=$+1,W=$+2,rt=Tt*2,ut=rt+1;r.maxIndex=Tt,nt[$]=_,nt[Q]=T,nt[W]=O,lt[$]=L,lt[Q]=b,lt[W]=q,ct[$]=gt,ct[Q]=mt,ct[W]=et,Ft[rt]=se,Ft[ut]=re,zt.set(Ut,Tt)}if(de)It=zt.get(Ht);else{It=r.maxIndex+1;let $=It*3,Q=$+1,W=$+2,rt=It*2,ut=rt+1;r.maxIndex=It,nt[$]=Y,nt[Q]=Z,nt[W]=X,lt[$]=w,lt[Q]=R,lt[W]=K,ct[$]=xt,ct[Q]=pt,ct[W]=bt,Ft[rt]=Lt,Ft[ut]=$t,zt.set(Ht,It)}if(xe)Ot=zt.get(_t);else{Ot=r.maxIndex+1;let $=Ot*3,Q=$+1,W=$+2,rt=Ot*2,ut=rt+1;r.maxIndex=Ot,nt[$]=N,nt[Q]=P,nt[W]=H,lt[$]=G,lt[Q]=D,lt[W]=tt,ct[$]=vt,ct[Q]=Nt,ct[W]=Yt,Ft[rt]=ae,Ft[ut]=Zt,zt.set(_t,Ot)}let wt=r.indicesIndex;yt[wt]=It,yt[wt+1]=Tt,yt[wt+2]=Ct,yt[wt+3]=Ct,yt[wt+4]=Ot,yt[wt+5]=It,r.indicesIndex+=6}};var Zs=0,zs=0,ns=128,we=8,Rs=0,Ps=255,bs=Ps<<24>>>0,ls={NONE:0,PAINT:1,KEEP:2},At=1,he=new Map,ht=E=>Math.floor(E%2===0?E/2-1:E/2),ft=E=>{let[t,s,e]=E,r=ht(t),a=ht(s),o=ht(e),n=t-r-1,i=s-a-1,l=e-o-1,f=-r,c=-a,h=-o;return[f,n,c,i,h,l]},ze=1,Ns=ze*4;function cs(E,t,s=null){let e=2**t-At,r=Ns*e,a=E[0]*E[1]*E[2]*t,o=Math.floor(a/8)+1,n=we+r+o;s==null&&(typeof Buffer<"u"?s=Buffer.alloc(n).buffer:s=new ArrayBuffer(n));let i=new Uint8Array(s,0,we),l=r/Ns,f=new Uint32Array(s,we,l),c=at.create(s,t,we+r);return i[0]=Zs,[i[1],i[2],i[3]]=E,i[4]=t,[s,f,c]}var dt=class{constructor(t=null,s=8,e=null,r=null,a=0,o=null,n=0,i=null){if(e&&r)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,o=o||e.length,i=i||r.length,this.palette=new Uint32Array(e,a||0,o/4),this.indices=at.create(r,s,n,i),this.xShift=ht(t[0]),this.yShift=ht(t[1]),this.zShift=ht(t[2]),this._rebuildRefCounts();else if(t){let[l,f,c]=cs(t,s);this.palette=f,this.indices=c,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(l)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,we);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=ht(this.size[0]),this.yShift=ht(this.size[1]),this.zShift=ht(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,a=this._getOffset(t,s,e);return r.get(a)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==zs}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,zs)}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-At)*ze]}setPaletteColor(t,s){this.palette[(t-At)*ze]=s}paletteHasReferences(t){return this._refCounts[t-At]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-At]=1}incrementPaletteRefcount(t){this._refCounts[t-At]+=1}decrementPaletteRefcount(t){this._refCounts[t-At]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let a=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(a,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);dt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),dt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let a=this._getOffset(t,s,e);return this.setColorAtOffset(a,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,a=this.getPaletteIndexAtOffset(t),o=dt.isNonEmptyPaletteIndex(a);o&&this.decrementPaletteRefcount(a);for(let i=0;i<e.length;i+=1){let l=i+At;if(this.getPaletteColor(l)===s)return this.incrementPaletteRefcount(l),r.set(t,l),l}if(o&&!this.paletteHasReferences(a))return this.setPaletteColor(a,s),this.resetPaletteRefcountToOne(a),a;let n=this._getFreePaletteIndex();return this.setPaletteColor(n,s),this.resetPaletteRefcountToOne(n),this.indices.set(t,n),n}colorForPaletteIndex(t){return this.palette[(t-At)*ze]}filterByChunk(t,s,e,r,a){if(a===ls.NONE)return;let o=t.size,[n,i,l,f,c,h]=ft(o),{size:m}=this,[u,g,p,F,y,v]=ft(m);for(let M=u;M<=g;M+=1)for(let x=p;x<=F;x+=1)for(let A=y;A<=v;A+=1){if(this.getPaletteIndexAt(M,x,A)===0)continue;let d=M+s,V=x+e,z=A+r,_=!(d>i||d<n||V>f||V<l||z>h||z<c)&&t.hasVoxelAt(d,V,z);(a===ls.PAINT&&!_||a===ls.KEEP&&_)&&this.setEmptyAt(M,x,A)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let l=0;l<t.length;l+=1){let f=l+At;if(!this.paletteHasReferences(f))return f}let a=r*2,[o,n,i]=cs(s,a);for(let l=0;l<t.length*ze;l+=1)n[l]=t[l];for(;this._refCounts.length<n.length;)this._refCounts.push(0);for(let l=0,f=s[0]*s[1]*s[2];l<f;l+=1){let c=e.get(l);i.set(l,c)}return this.palette=n,this.indices=i,this._recomputeSizeFieldsForBuffer(o),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,a=Math.max(1,r[0],Math.abs(t)*2+1),o=Math.max(1,r[1],Math.abs(s)*2+1),n=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([a,o,n])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new dt(t),[e,r,a,o,n,i]=ft(this.size);for(let m=e;m<=r;m+=1)for(let u=a;u<=o;u+=1)for(let g=n;g<=i;g+=1)this.getPaletteIndexAt(m,u,g)!==0&&s.setColorAt(m,u,g,this.getColorAt(m,u,g));let{buffer:l}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:f}=s;this.bitsPerIndex=f;let[,c,h]=cs(t,f,l);this.palette=c,this.indices=h,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(l)}static fromJSON(t){if(typeof t=="string")return dt.deserialize(t);let{size:s,palette:e,indices:r}=t,a=new dt(s);for(let o=0;o<e.length+At;o+=1)for(let n=0;n<r.length;n+=1){let i=r[n];if(i===o)if(i>=At){let l=e[i-At];a.setColorAtOffset(n,l)}else i===o&&a.setPaletteIndexAtOffset(n,i)}return a}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let a=0;a<this.palette.length;a+=1){let o=a+At,n=this.getPaletteColor(o);n>0&&e.push(n)}for(let a=0,o=this.size[0]*this.size[1]*this.size[2];a<o;a+=1)r.push(this.indices.get(a));return{size:[...this.size],palette:e,indices:r}}clone(){return new dt(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:a,yShift:o,zShift:n}=this;return(t+a)*r[1]*r[2]+(s+o)*r[2]+(e+n)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);dt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,r=0){he.clear();let a=t.size,[o,n,i,l,f,c]=ft(a),{size:h}=this,[m,u,g,p,F,y]=ft(h);for(let v=m;v<=u;v+=1)for(let M=g;M<=p;M+=1)for(let x=F;x<=y;x+=1){let A=this.getPaletteIndexAt(v,M,x);if(A!==0){let C=v+s,d=M+e,V=x+r,z=a[0],I=a[1],_=a[2];if(C>n&&(z=C*2),C<o&&(z=Math.max(z,-C*2+1)),d>l&&(I=d*2),d<i&&(I=Math.max(I,-d*2+1)),V>c&&(_=V*2),V<f&&(_=Math.max(_,-V*2+1)),z>ns||I>ns||_>ns)continue;(a[0]<z||a[1]<I||a[2]<_)&&(t.resizeTo([z,I,_]),a=t.size,[o,n,i,l,f,c]=ft(a),he.clear());let T=he.get(A);if(T===void 0){let O=this.getColorAt(v,M,x);if(O===bs)t.setEmptyAt(C,d,V);else{let Y=t.setColorAt(C,d,V,O);he.set(A,Y)}}else t.getPaletteIndexAt(C,d,V)!==T&&t.setPaletteIndexAt(C,d,V,T)}}}createInverse=(t,s)=>{he.clear();let e=t.size,[r,a,o,n,i,l]=ft(e),{size:f}=this,c=new dt(f),[h,m,u,g,p,F]=ft(f);for(let y=h;y<=m;y+=1)for(let v=u;v<=g;v+=1)for(let M=p;M<=F;M+=1){if(this.getPaletteIndexAt(y,v,M)===0)continue;let A=y+s[0],C=v+s[1],d=M+s[2];if(A>a||A<r||C>n||C<o||d>l||d<i||!t.hasVoxelAt(A,C,d))c.setColorAt(y,v,M,bs);else{let V=t.getColorAt(A,C,d);c.setColorAt(y,v,M,V)}}return c};mergeWith(t,s,e,r=!1){he.clear();let a=he,o=e[0]-s[0],n=e[1]-s[1],i=e[2]-s[2],l=t.size,[f,c,h,m,u,g]=ft(l),{size:p}=this,[F,y,v,M,x,A]=ft(p);for(let C=F;C<=y;C+=1)for(let d=v;d<=M;d+=1)for(let V=x;V<=A;V+=1){let z=this.getPaletteIndexAt(C,d,V);if(z===0)continue;let I=C+o,_=d+n,T=V+i;if(!!(!(I>c||I<f||_>m||_<h||T>g||T<u)&&t.hasVoxelAt(I,_,T)))if(a.has(z))this.setPaletteIndexAt(C,d,V,a.get(z));else{(r||t.getColorAt(I,_,T)>this.getColorAt(C,d,V))&&this.removeVoxelAt(C,d,V);let Z=this.getPaletteIndexAt(C,d,V);a.set(z,Z)}}}};function Ge(E,t,s,e=Rs){return(E|t<<8|s<<16|e<<24)>>>0}function Es(E){let t=E&255,s=(E&65280)>>8,e=(E&16711680)>>16,r=(E&4278190080)>>24;return{r:t,g:s,b:e,t:r}}function Ss(){let E=[];for(let r=0;r<256;r++)E[r]=Math.floor(Math.random()*256),E[r+256]=E[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,a,o){return a+r*(o-a)}function e(r,a,o,n){let i=r&15,l=i<8?a:o,f=i<4?o:i===12||i===14?a:n;return((i&1)===0?l:-l)+((i&2)===0?f:-f)}return{noise:function(r,a,o){let n=Math.floor(r),i=Math.floor(a),l=Math.floor(o),f=n&255,c=i&255,h=l&255;r-=n,a-=i,o-=l;let m=r-1,u=a-1,g=o-1,p=t(r),F=t(a),y=t(o),v=E[f]+c,M=E[v]+h,x=E[v+1]+h,A=E[f+1]+c,C=E[A]+h,d=E[A+1]+h;return s(y,s(F,s(p,e(E[M],r,a,o),e(E[C],m,a,o)),s(p,e(E[x],r,u,o),e(E[d],m,u,o))),s(F,s(p,e(E[M+1],r,a,g),e(E[C+1],m,a,o-1)),s(p,e(E[x+1],r,u,g),e(E[d+1],m,u,g))))}}}var te=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let a=0,o=t.faceCount;a<o;a++)r.set(a,0);break}}static _circularDeform(t,s,e,r,a){let[o,n,i,l,f,c]=ft(t.voxChunk.size),h=(o+n)/2+.5,m=(i+l)/2+.5,u=(f+c)/2+.5,{vertX:g,vertY:p,vertZ:F,vertRing:y}=s;for(let v=0,M=t.vertCount;v<M;v++){let x=g[v],A=p[v],C=F[v],d=x-h,V=A-m,z=C-u,I=Math.max(Math.abs(d*e),Math.abs(V*r),Math.abs(z*a)),_=Math.sqrt(d*d*e+V*V*r+z*z*a);if(_===0)continue;let T=I/_;g[v]=d*(1-e+e*T)+h,p[v]=V*(1-r+r*T)+m,F[v]=z*(1-a+a*T)+u,y[v]=I}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:a}=s;for(let o=0,n=t.faceCount;o<n;o++){let i=o*4,l=i+1,f=i+2,c=i+3;a.set(o,r[e[i]]===r[e[l]]&&r[e[i]]===r[e[f]]&&r[e[i]]===r[e[c]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:a,vertDeformCount:o,vertDeformDamping:n,vertDeformStrength:i,vertFlattenedX:l,vertFlattenedY:f,vertFlattenedZ:c,vertClampedX:h,vertClampedY:m,vertClampedZ:u,vertX:g,vertY:p,vertZ:F,vertTmpX:y,vertTmpY:v,vertTmpZ:M,vertHasTmp:x}=s;for(let A=0;A<e;A++){let C=!1;for(let d=0,V=t.vertCount;d<V;d++){if(o[d]<=A)continue;let I=a[d];if(I===0)continue;C=!0;let _=g[d],T=p[d],O=F[d],Y=n[d],Z=i[d],X=1-(h.get(d)|l.get(d)),N=1-(m.get(d)|f.get(d)),P=1-(u.get(d)|c.get(d)),H=0,k=0,U=0;for(let w=0;w<I;w++){let R=r[d*6+w];H+=g[R],k+=p[R],U+=F[R]}let S=Math.pow(Y,A)*Z,L=H/I-_,b=k/I-T,q=U/I-O;y[d]=_+X*L*S,v[d]=T+N*b*S,M[d]=O+P*q*S,x.set(d,X|N|P)}if(C){for(let d=0,V=t.vertCount;d<V;d++)x.get(d)!==0&&(g[d]=y[d],p[d]=v[d],F[d]=M[d]);x.clear()}}}static warpAndScatter(t,s){let e=Ss().noise,{nx:r,px:a,ny:o,py:n,nz:i,pz:l}=t._tile,[f,c,h,m,u,g]=ft(t.voxChunk.size),{vertX:p,vertY:F,vertZ:y,vertWarpAmplitude:v,vertWarpFrequency:M,vertScatter:x,vertFlattenedX:A,vertFlattenedY:C,vertFlattenedZ:d,vertClampedX:V,vertClampedY:z,vertClampedZ:I}=s;f+=.1,h+=.1,u+=.1,c+=.9,m+=.9,g+=.9;for(let _=0,T=t.vertCount;_<T;_++){let O=p[_],Y=F[_],Z=y[_];if(r&&O<f||a&&O>c||o&&Y<h||n&&Y>m||i&&Z<u||l&&Z>g)continue;let X=v[_],N=M[_],P=x[_],H=X>0,k=P>0;if(H||k){let U=0,S=0,L=0;H&&(U=e((O+.19)*N,Y*N,Z*N)*X,S=e((Y+.17)*N,Z*N,O*N)*X,L=e((Z+.13)*N,O*N,Y*N)*X),k&&(U+=(Math.random()*2-1)*P,S+=(Math.random()*2-1)*P,L+=(Math.random()*2-1)*P);let b=1-(V.get(_)|A.get(_)),q=1-(z.get(_)|C.get(_)),w=1-(I.get(_)|d.get(_));p[_]=O+b*U,F[_]=Y+q*S,y[_]=Z+w*L}}}};var Me=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:a,faceVertIndices:o,vertLinkIndices:n,vertLinkCounts:i}=s;if(r.get(e)===1)for(let f=0;f<4;f++){let c=o[e*4+f],h=!1;for(let m=0,u=i[c];m<u;m++)if(n[c*6+m]===c){h=!0;break}h||(n[c*6+i[c]]=c,i[c]++,a[c]++)}else for(let f=0;f<4;f++){let c=o[e*4+f],h=o[e*4+(f+1)%4],m=!1;for(let g=0,p=i[c];g<p;g++)if(n[c*6+g]===h){m=!0;break}m||(n[c*6+i[c]]=h,i[c]++);let u=!1;for(let g=0,p=i[h];g<p;g++)if(n[h*6+g]===c){u=!0;break}u||(n[h*6+i[h]]=c,i[h]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:a,vertLinkCounts:o,vertLinkIndices:n}=s;for(let i=0,l=t.vertCount;i<l;i++){let f=r[i],c=o[i];f===c&&(a.set(i,1),o[i]=0)}for(let i=0,l=t.faceCount;i<l;i++)for(let f=0;f<4;f++){let c=e[i*4+f],h=e[i*4+(f+1)%4];if(a.get(c)===1){let m=!1;for(let u=0,g=o[c];u<g;u++)if(n[c*6+u]===h){m=!0;break}m||(n[c*6+o[c]]=h,o[c]++)}if(a.get(h)===1){let m=!1;for(let u=0,g=o[h];u<g;u++)if(n[h*6+u]===c){m=!0;break}m||(n[h*6+o[h]]=c,o[h]++)}}}};var be=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:a,faceSmooth:o,faceFlattened:n,faceClamped:i,vertX:l,vertY:f,vertZ:c,faceVertFlatNormalX:h,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:g,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:F,faceVertBothNormalX:y,faceVertBothNormalY:v,faceVertBothNormalZ:M,faceVertNormalX:x,faceVertNormalY:A,faceVertNormalZ:C,faceMaterials:d,faceVertIndices:V,vertSmoothNormalX:z,vertSmoothNormalY:I,vertSmoothNormalZ:_,vertBothNormalX:T,vertBothNormalY:O,vertBothNormalZ:Y}=s,[Z,X,N,P,H,k]=ft(t.voxChunk.size);for(let S=0,L=t.faceCount;S<L;S++){let b=S*4;for(let q=0;q<4;q++){let w=V[b+q];z[w]=0,I[w]=0,_[w]=0,T[w]=0,O[w]=0,Y[w]=0}}for(let S=0,L=t.faceCount;S<L;S++){let b=r[S],q=a.get(S),w=n.get(S),R=i.get(S),K=q|1-(w|R);o.set(S,K);let G=V[S*4],D=V[S*4+1],tt=V[S*4+2],B=V[S*4+3],ot=(l[G]+l[D]+l[tt]+l[B])/4,it=(f[G]+f[D]+f[tt]+f[B])/4,gt=(c[G]+c[D]+c[tt]+c[B])/4;for(let mt=0;mt<4;mt++){let et=V[S*4+mt],xt=V[S*4+(mt+3)%4],pt=l[et],bt=l[xt],vt=f[et],Nt=f[xt],Yt=c[et],jt=c[xt],kt=z[et],se=I[et],re=_[et],Lt=T[et],$t=O[et],ae=Y[et],Zt=bt-pt,Rt=Nt-vt,yt=jt-Yt,nt=ot-pt,lt=it-vt,ct=gt-Yt,Ft=Math.sqrt(Zt*Zt+Rt*Rt+yt*yt),Pt=Math.sqrt(nt*nt+lt*lt+ct*ct);Ft=Ft===0?1:Ft,Pt=Pt===0?1:Pt;let Ut=1/Ft;Zt*=Ut,Rt*=Ut,yt*=Ut;let Ht=1/Pt;nt*=Ht,lt*=Ht,ct*=Ht;let _t=Rt*ct-yt*lt,Et=yt*nt-Zt*ct,St=Zt*lt-Rt*nt,de=Z+.1,xe=X+.9,Ct=N+.1,Tt=P+.9,It=H+.1,Ot=k+.9;e&&((e.nx&&b===0||e.px&&b===1)&&(vt<Ct||vt>Tt||Yt<It||Yt>Ot)&&(Et=0,St=0),(e.ny&&b===2||e.py&&b===3)&&(pt<de||pt>xe||Yt<It||Yt>Ot)&&(_t=0,St=0),(e.nz&&b===4||e.pz&&b===5)&&(pt<de||pt>xe||vt<Ct||vt>Tt)&&(_t=0,Et=0));let wt=Math.sqrt(_t*_t+Et*Et+St*St);wt=wt===0?1:wt;let $=1/wt;_t*=$,Et*=$,St*=$,h[S*4+mt]=_t,m[S*4+mt]=Et,u[S*4+mt]=St;let Q=Zt*nt+Rt*lt+yt*ct,W=Math.acos(Q);kt+=_t*W,se+=Et*W,re+=St*W,Lt+=K*(_t*W),$t+=K*(Et*W),ae+=K*(St*W),z[et]=kt,I[et]=se,_[et]=re,T[et]=Lt,O[et]=$t,Y[et]=ae}}for(let S=0,L=t.vertCount;S<L;S++){let b=z[S],q=I[S],w=_[S],R=T[S],K=O[S],G=Y[S],D=Math.sqrt(b*b+q*q+w*w),tt=Math.sqrt(R*R+K*K+G*G);D!==0&&(z[S]=b/D,I[S]=q/D,_[S]=w/D),tt!==0&&(T[S]=R/tt,O[S]=K/tt,Y[S]=G/tt)}let U=t.materials.materials;for(let S=0,L=t.faceCount;S<L;S++){let b=o.get(S)===1,q=U[d[S]];for(let w=0;w<4;w++){let R=S*4+w,K=V[S*4+w];switch(g[R]=z[K],p[R]=I[K],F[R]=_[K],y[R]=!b||T[K]===0?h[R]:T[K],v[R]=!b||O[K]===0?m[R]:O[K],M[R]=!b||Y[K]===0?u[R]:Y[K],q.lighting){case oe:x[R]=g[R],A[R]=p[R],C[R]=F[R];break;case ie:x[R]=y[R],A[R]=v[R],C[R]=M[R];break;default:x[R]=h[R],A[R]=m[R],C[R]=u[R];break}}}}};var J=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,a=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,o=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=a,t.z=o}transformPointInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[12]*a+i[13]*o+i[14]*n+i[15],f=(i[0]*a+i[1]*o+i[2]*n+i[3])/l,c=(i[4]*a+i[5]*o+i[6]*n+i[7])/l,h=(i[8]*a+i[9]*o+i[10]*n+i[11])/l;t[r]=f,s[r]=c,e[r]=h}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,a=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=a}transformVectorInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[0]*a+i[1]*o+i[2]*n,f=i[4]*a+i[5]*o+i[6]*n,c=i[8]*a+i[9]*o+i[10]*n;t[r]=l,s[r]=f,e[r]=c}static identity(t){t=t||new J;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new J;let r=t.m,a=s.m,o=e.m;return o[0]=r[0]*a[0]+r[1]*a[4]+r[2]*a[8]+r[3]*a[12],o[1]=r[0]*a[1]+r[1]*a[5]+r[2]*a[9]+r[3]*a[13],o[2]=r[0]*a[2]+r[1]*a[6]+r[2]*a[10]+r[3]*a[14],o[3]=r[0]*a[3]+r[1]*a[7]+r[2]*a[11]+r[3]*a[15],o[4]=r[4]*a[0]+r[5]*a[4]+r[6]*a[8]+r[7]*a[12],o[5]=r[4]*a[1]+r[5]*a[5]+r[6]*a[9]+r[7]*a[13],o[6]=r[4]*a[2]+r[5]*a[6]+r[6]*a[10]+r[7]*a[14],o[7]=r[4]*a[3]+r[5]*a[7]+r[6]*a[11]+r[7]*a[15],o[8]=r[8]*a[0]+r[9]*a[4]+r[10]*a[8]+r[11]*a[12],o[9]=r[8]*a[1]+r[9]*a[5]+r[10]*a[9]+r[11]*a[13],o[10]=r[8]*a[2]+r[9]*a[6]+r[10]*a[10]+r[11]*a[14],o[11]=r[8]*a[3]+r[9]*a[7]+r[10]*a[11]+r[11]*a[15],o[12]=r[12]*a[0]+r[13]*a[4]+r[14]*a[8]+r[15]*a[12],o[13]=r[12]*a[1]+r[13]*a[5]+r[14]*a[9]+r[15]*a[13],o[14]=r[12]*a[2]+r[13]*a[6]+r[14]*a[10]+r[15]*a[14],o[15]=r[12]*a[3]+r[13]*a[7]+r[14]*a[11]+r[15]*a[15],e}static transpose(t,s){s=s||new J;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new J;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let a=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let o=0;o<16;o++)r[o]/=a;return s}static scale(t,s,e,r){r=r||new J;let a=r.m;return a[0]=t,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=s,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static translate(t,s,e,r){r=r||new J;let a=r.m;return a[0]=1,a[1]=0,a[2]=0,a[3]=t,a[4]=0,a[5]=1,a[6]=0,a[7]=s,a[8]=0,a[9]=0,a[10]=1,a[11]=e,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static rotate(t,s,e,r,a){if(!t||!s&&!e&&!r)return J.identity(a);a=a||new J;let o=a.m,n=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=n,e/=n,r/=n;let i=Math.cos(t),l=Math.sin(t),f=1-i;return o[0]=s*s*f+i,o[1]=s*e*f-r*l,o[2]=s*r*f+e*l,o[3]=0,o[4]=e*s*f+r*l,o[5]=e*e*f+i,o[6]=e*r*f-s*l,o[7]=0,o[8]=r*s*f-e*l,o[9]=r*e*f+s*l,o[10]=r*r*f+i,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,a}static lookAtORIGINAL(t,s,e,r,a,o,n,i,l,f){f=f||new J;let c=f.m,h=t-r,m=s-a,u=e-o,g=Math.sqrt(h*h+m*m+u*u);h/=g,m/=g,u/=g;let p=i*u-l*m,F=l*h-n*u,y=n*m-i*h;g=Math.sqrt(p*p+F*F+y*y),p/=g,F/=g,y/=g;let v=m*y-u*F,M=u*p-h*y,x=h*F-m*p;return g=Math.sqrt(v*v+M*M+x*x),v/=g,M/=g,x/=g,c[0]=p,c[1]=F,c[2]=y,c[3]=-(p*t+F*s+y*e),c[4]=v,c[5]=M,c[6]=x,c[7]=-(v*t+M*s+x*e),c[8]=h,c[9]=m,c[10]=u,c[11]=-(h*t+m*s+u*e),c[12]=0,c[13]=0,c[14]=0,c[15]=1,f}static lookAtTRYOUT(t,s,e,r){r=r||new J;let a=r.m,o=Math.sqrt(t*t+e*e);return a[0]=e/o,a[1]=0,a[2]=-t/o,a[3]=0,a[4]=t*s/o,a[5]=-o,a[6]=e*s/o,a[7]=0,a[8]=t,a[9]=s,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static lookAt(t,s,e,r){r=r||new J;let a=r.m,o=Math.sqrt(t*t+e*e),n=o?t/o:1,i=o?e/o:0;return a[0]=t,a[1]=-i,a[2]=-e*n,a[3]=0,a[4]=s,a[5]=0,a[6]=o,a[7]=0,a[8]=e,a[9]=n,a[10]=-e*i,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}};var _e=[null,null,null,null],Ne=[null,null,null,null],Ee=[null,null,null,null],Se=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:a,faceVertNormalX:o,faceVertFlatNormalX:n,faceVertNormalY:i,faceVertFlatNormalY:l,faceVertNormalZ:f,faceVertFlatNormalZ:c,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:g,faceVertBothNormalY:p,faceVertBothNormalZ:F}=s,y=t.determineBoundsOffsetAndRescale(t.resize,s),v=new J;v=J.multiply(v,J.translate(t.position.x,t.position.y,t.position.z)),v=J.multiply(v,J.rotate(t.rotation.z,0,0,1)),v=J.multiply(v,J.rotate(t.rotation.y,0,1,0)),v=J.multiply(v,J.rotate(t.rotation.x,1,0,0)),v=J.multiply(v,J.scale(t.scale.x,t.scale.y,t.scale.z)),v=J.multiply(v,J.scale(y.rescale,y.rescale,y.rescale)),v=J.multiply(v,J.translate(y.offset.x,y.offset.y,y.offset.z));let M=J.inverse(v);M=J.transpose(M);for(let x=0,A=t.vertCount;x<A;x++)v.transformPointInline(e,r,a,x);_e[0]=o,Ne[0]=i,Ee[0]=f,_e[1]=n,Ne[1]=l,Ee[1]=c,_e[2]=h,Ne[2]=m,Ee[2]=u,_e[3]=g,Ne[3]=p,Ee[3]=F;for(let x=0,A=t.faceCount;x<A;x++){let C=x*4;for(let d=0;d<4;d++)for(let V=0,z=_e.length;V<z;V++){let I=_e[V],_=Ne[V],T=Ee[V],O=C+d;M.transformVectorInline(I,_,T,O);let Y=I[O],Z=_[O],X=T[O],N=Math.sqrt(Y*Y+Z*Z+X*X);if(N>0){let P=1/N;I[O]=Y*P,_[O]=Z*P,T[O]=X*P}}}}};var Te=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let F=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},F>0){let y=1/F;p.normalizedDirection.x*=y}}let r=t.materials.materials,{faceMaterials:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,faceVertIndices:l,vertX:f,vertY:c,vertZ:h,faceVertLightR:m,faceVertLightG:u,faceVertLightB:g}=s;for(let p=0,F=t.faceCount;p<F;p++){let y=r[a[p]],v=p*4;if(y.lights)for(let M=0;M<4;M++){let x=v+M,A=l[x],C=f[A],d=c[A],V=h[A],z=o[x],I=n[x],_=i[x];m[x]=0,u[x]=0,g[x]=0;for(let T of e){let{color:O,strength:Y,distance:Z,normalizedDirection:X,position:N}=T,P=Y,H=0;if(N){let k=N.x-C,U=N.y-d,S=N.z-V;H=Math.sqrt(k*k+U*U+S*S);let L=1/H;P=Y*Math.max(z*k*L+I*U*L+_*S*L,0)}else X&&(P=Y*Math.max(z*X.x+I*X.y+_*X.z,0));N&&Z&&(P=P*(1-Math.min(H/Z,1))),m[x]+=O.r*P,u[x]+=O.g*P,g[x]+=O.b*P}}else for(let M=0;M<4;M++){let x=v+M;m[x]=1,u[x]=1,g[x]=1}}}};var Ts=[],fs=new Map,hs=()=>Ts.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Os=E=>{for(let t of E.partitions)t&&Os(t);E.minx=Number.MAX_VALUE,E.miny=Number.MAX_VALUE,E.minz=Number.MAX_VALUE,E.maxx=-Number.MAX_VALUE,E.maxy=-Number.MAX_VALUE,E.maxz=-Number.MAX_VALUE,E.partitions.fill(null),E.triangles.length=0,Ts.push(E)},Oe=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(A){return A.ao})))return;let{faceMaterials:r,faceVertIndices:a,faceVertAO:o,vertX:n,vertY:i,vertZ:l,faceVertNormalX:f,faceVertNormalY:c,faceVertNormalZ:h}=s,{faceCount:m}=t,u=t.materials.materials,g=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(g,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let F=t.aoSamples,y=this._generateFibonacciSamples(F);fs.clear();let v=t.scale.x,M=t.scale.y,x=t.scale.z;for(let A=0;A<m;A++){let C=u[r[A]],d=C.ao||t.ao,V=A*4;if(o[V]=0,o[V+1]=0,o[V+2]=0,o[V+3]=0,!d||d.maxDistance===0||d.strength===0||d.angle<1||C.opacity===0)continue;let z=d.maxDistance*Math.max(v,M,x),I=d.strength,_=Math.cos(d.angle/180*Math.PI);for(let T=0;T<4;T++){let O=V+T,Y=a[O],Z=n[Y],X=i[Y],N=l[Y],P=f[O],H=c[O],k=h[O],U=Z*16384+X*128+N,S=P*1e7+H*1e5+k*1e3,L=U*1e9+S,b=fs.get(L);if(b!==void 0){o[O]=b;continue}let q=a[V+(T+2)%4],w=n[q],R=i[q],K=l[q],G=Z*.99999+w*1e-5+P*1e-5,D=X*.99999+R*1e-5+H*1e-5,tt=N*.99999+K*1e-5+k*1e-5,B=0,ot=0;for(let[gt,mt,et]of y){if(gt*P+mt*H+et*k<=_)continue;let pt=G+gt*z,bt=D+mt*z,vt=tt+et*z,Nt=this._distanceToOctree(t,s,p,G,D,tt,gt,mt,et,z,pt,bt,vt);Nt?Nt=Nt/z:Nt=1,B+=Nt,ot++}let it=0;ot!==0&&(B=Math.max(Math.min(B/ot,1),0),it=1-Math.pow(B,I)),o[O]=it,fs.set(L,it)}}Os(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,a=[],o=t.materials.materials;for(let n=0;n<r;n++){if(o[e[n]].opacity<.75)continue;let l=n*2;a.push(l),a.push(l+1)}return a}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:a,vertY:o,vertZ:n}=e,i=t.length;if(i<=32){let l=hs();l.triangles=t;for(let f=0;f<i;f++){let c=t[f],m=(c>>1)*4,u,g,p;(c&1)===0?(u=r[m+2],g=r[m+1],p=r[m+0]):(u=r[m+0],g=r[m+3],p=r[m+2]);let F=a[u],y=o[u],v=n[u],M=a[g],x=o[g],A=n[g],C=a[p],d=o[p],V=n[p];l.minx=Math.min(l.minx,F,M,C),l.miny=Math.min(l.miny,y,x,d),l.minz=Math.min(l.minz,v,A,V),l.maxx=Math.max(l.maxx,F,M,C),l.maxy=Math.max(l.maxy,y,x,d),l.maxz=Math.max(l.maxz,v,A,V)}return l}else{let l=0,f=0,c=0;for(let g=0;g<i;g++){let p=t[g],y=(p>>1)*4,v,M,x;(p&1)===0?(v=r[y+2],M=r[y+1],x=r[y+0]):(v=r[y+0],M=r[y+3],x=r[y+2]);let A=a[v],C=o[v],d=n[v],V=a[M],z=o[M],I=n[M],_=a[x],T=o[x],O=n[x];l+=A+V+_,f+=C+z+T,c+=d+I+O}let h=1/i;l*=h,f*=h,c*=h;let m=Array(8).fill(null);for(let g=0;g<i;g++){let p=t[g],y=(p>>1)*4,v,M,x;(p&1)===0?(v=r[y+2],M=r[y+1],x=r[y+0]):(v=r[y+0],M=r[y+3],x=r[y+2]);let A=a[v],C=o[v],d=n[v],V=a[M],z=o[M],I=n[M],_=a[x],T=o[x],O=n[x],Y=A+V+_<l?0:1,Z=C+z+T<f?0:1,X=d+I+O<c?0:1,N=Y+Z*2+X*4;m[N]===null?m[N]=[p]:m[N].push(p)}let u=hs();for(let g=0;g<8;g++){if(m[g]===null)continue;let p=this._trianglesToOctree(m[g],s,e);u.partitions[g]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,a,o,n,i,l,f,c,h,m){if(this._hitsBox(r,a,o,c,h,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,a,o,n,i,l,f);let u=f,g=e.partitions;for(let p=0;p<8;p++){let F=g[p];if(F===null)continue;let y=this._distanceToOctree(t,s,F,r,a,o,n,i,l,f,c,h,m);y&&(u=Math.min(u,y))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(Wt,s).bounds,{vertCount:a,faceCount:o}=t,{faceVertIndices:n,faceCulled:i,vertX:l,vertY:f,vertZ:c}=s,h=(u,g,p,F,y,v,M,x,A)=>{let C=o*4;l[a]=u,f[a]=g,c[a]=p,l[a+1]=F,f[a+1]=y,c[a+1]=v,l[a+2]=M,f[a+2]=x,c[a+2]=A,n[C]=a+2,n[C+1]=a+1,n[C+2]=a+0,i.set(o,1);let d=o*2;return o++,a+=3,d},m=[];if(t._aoSides.nx&&m.push(h(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(h(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(h(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(h(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(h(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(h(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),g=hs();g.partitions=[g,u]}return e}static _hitsBox(t,s,e,r,a,o,n){let i=n.minx;if(t<i&&r<i)return!1;let l=n.maxx;if(t>l&&r>l)return!1;let f=n.miny;if(s<f&&a<f)return!1;let c=n.maxy;if(s>c&&a>c)return!1;let h=n.minz;if(e<h&&o<h)return!1;let m=n.maxz;if(e>m&&o>m)return!1;let u=t-(i+l)*.5,g=(l-i)*.5,p=(r-t)*.5,F=Math.abs(p);if(Math.abs(u)>g+F)return!1;let y=(c-f)*.5,v=(a-s)*.5,M=Math.abs(v),x=s-(f+c)*.5;if(Math.abs(x)>y+M)return!1;let A=(m-h)*.5,C=(o-e)*.5,d=Math.abs(C),V=e-(h+m)*.5;return!(Math.abs(V)>A+d||Math.abs(v*V-C*x)>y*d+A*M+Number.EPSILON||Math.abs(C*u-p*V)>A*F+g*d+Number.EPSILON||Math.abs(p*x-v*u)>g*M+y*F+Number.EPSILON)}static _distanceToModel(t,s,e,r,a,o,n,i,l,f){let c=null,{faceVertIndices:h}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,F,y,v;(u&1)===0?(F=h[p+2],y=h[p+1],v=h[p+0]):(F=h[p+0],y=h[p+3],v=h[p+2]);let M=this._triangleDistance(t,s,F,y,v,r,a,o,n,i,l);M&&(c?c=Math.min(c,M):M<f&&(c=M))}return c}static _triangleDistance(t,s,e,r,a,o,n,i,l,f,c){let{vertX:h,vertY:m,vertZ:u}=s,g=h[e],p=m[e],F=u[e],y=h[r],v=m[r],M=u[r],x=h[a],A=m[a],C=u[a],d=y-g,V=v-p,z=M-F,I=x-g,_=A-p,T=C-F,O=f*T-c*_,Y=c*I-l*T,Z=l*_-f*I,X=d*O+V*Y+z*Z;if(X<Number.EPSILON)return null;let N=1/X,P=o-g,H=n-p,k=i-F,U=N*(P*O+H*Y+k*Z);if(U<0||U>1)return null;let S=H*z-k*V,L=k*d-P*z,b=P*V-H*d,q=N*(l*S+f*L+c*b);if(q<0||U+q>1)return null;let w=N*(I*S+_*L+T*b);return w<=Number.EPSILON?null:w}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let a=1;a<=t;++a){let o=Math.asin(-1+2*a/(t+1)),n=r*a,i=Math.cos(n)*Math.cos(o),l=Math.sin(o),f=Math.sin(n)*Math.cos(o);s.push([i,l,f])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let a=r*e,o=Math.cos(a),n=Math.sin(a),i=Math.max(1,r*4),l=Math.PI*2/i;for(let f=0;f<i;f++){let c=f*l,h=n*Math.sin(c),m=n*Math.cos(c);s.push({x:h,y:o,z:m}),r<t&&s.push({x:h,y:-o,z:m})}i+=4}return s}};var Xe=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:a,faceVertVs:o}=s,n=[],i=[],l=[],f=t.materials.materials;for(let c=0;c<f.length;c++){let h=f[c],m=0,u=1,g=1;if(h.map||h.normalMap||h.roughnessMap||h.metalnessMap||h.emissiveMap){let p=t.voxChunk.size[0],F=t.voxChunk.size[1],y=t.voxChunk.size[2];h.mapTransform.uscale===-1&&(u=1/Math.max(p,F,y)),h.mapTransform.vscale===-1&&(g=1/Math.max(p,F,y)),(h.map&&h.map.cube||h.normalMap&&h.normalMap.cube||h.roughnessMap&&h.roughnessMap.cube||h.metalnessMap&&h.metalnessMap.cube||h.emissiveMap&&h.emissiveMap.cube)&&(m=1,u=u/4,g=g/2)}n.push(m),i.push(u),l.push(g)}for(let c=0,h=t.faceCount;c<h;c++){let m=e[c],u=n[m],g=i[m],p=l[m],F=Is[r[c]],y=c*4,v=a[y+F.order[0]],M=o[y+F.order[0]],x=a[y+F.order[1]],A=o[y+F.order[1]],C=a[y+F.order[2]],d=o[y+F.order[2]],V=a[y+F.order[3]],z=o[y+F.order[3]],I=y+F.order[0],_=y+F.order[1],T=y+F.order[2],O=y+F.order[3],Y=u*F.uo,Z=u*F.vo,X=F.ud*g,N=F.vd*p;a[I]=Y+(v+1e-4)*X,o[I]=Z+(M+1e-4)*N,a[_]=Y+(x+1e-4)*X,o[_]=Z+(A+.9999)*N,a[T]=Y+(C+.9999)*X,o[T]=Z+(d+.9999)*N,a[O]=Y+(V+.9999)*X,o[O]=Z+(z+1e-4)*N}}};var Ye=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:a,vertColorCount:o,faceVertColorR:n,faceVertColorG:i,faceVertColorB:l,faceVertLightR:f,faceVertLightG:c,faceVertLightB:h,faceVertIndices:m,faceMaterials:u,faceVertAO:g}=s,p=t.materials.materials,F=!!t.materials.find(x=>x.colors.length>1&&x.fade),y=Array(p.length).fill(!1);for(let x=0,A=p.length;x<A;x++)F&&p[x].colors.length>1&&p[x].fade&&(y[x]=!0);for(let x=0,A=t.faceCount;x<A;x++)if(y[u[x]])for(let d=0;d<4;d++){let V=0,z=0,I=0,_=0,T=x*4+d,O=m[T],Y=o[O];for(let X=0;X<Y;X++){let N=O*6+X;V+=e[N],z+=r[N],I+=a[N],_++}let Z=1/_;n[T]=V*Z,i[T]=z*Z,l[T]=I*Z}let v=t.ao||t.materials.find(function(x){return x.ao}),M=t.lights.length>0;if(v&&M)for(let x=0,A=t.faceCount;x<A;x++){let d=p[u[x]].ao||t.ao,V=d?d.color:null;for(let z=0;z<4;z++){let I=x*4+z,_=n[I],T=i[I],O=l[I],Y=V?V.r:_,Z=V?V.g:T,X=V?V.b:O,N=1-g[I];n[I]=_*f[I]*N+Y*(1-N),i[I]=T*c[I]*N+Z*(1-N),l[I]=O*h[I]*N+X*(1-N)}}else if(M&&!v)for(let x=0,A=t.faceCount;x<A;x++)for(let C=0;C<4;C++){let d=x*4+C;n[d]=n[d]*f[d],i[d]=i[d]*c[d],l[d]=l[d]*h[d]}else if(!M&&v)for(let x=0,A=t.faceCount;x<A;x++){let d=p[u[x]].ao||t.ao;if(!d)continue;let V=d.color;for(let z=0;z<4;z++){let I=x*4+z,_=n[I],T=i[I],O=l[I],Y=V?V.r:_,Z=V?V.g:T,X=V?V.b:O,N=1-g[I];n[I]=N*_+Y*(1-N),i[I]=N*T+Z*(1-N),l[I]=N*O+X*(1-N)}}}};var We={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ke={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},je={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Be=class{static simplify(t,s){if(!t.simplify)return;let e=function(){We.filled=!1,Ke.filled=!1,Qe.filled=!1,je.filled=!1},r=t.materials.materials,{faceCulled:a,faceNameIndices:o,vertX:n,vertY:i,vertZ:l,voxelXZYFaceIndices:f,voxelXYZFaceIndices:c,voxelYZXFaceIndices:h}=s;for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let g=f[m],p=g&(1<<28)-1;if(a.get(p))continue;let F=g/(1<<28),y=F>>16&255,v=F>>8&255,M=F&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,We,p,y,v,M,n,l,i,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,Ke,p,y,v,M,n,l,i,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,Qe,p,y,v,M,n,l,i,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,je,p,y,v,M,n,l,i,0,1,2,3);break}}e();for(let m=c.length-t.faceCount,u=c.length;m<u;m++){let g=c[m],p=g&(1<<28)-1;if(a.get(p))continue;let F=g/(1<<28),y=F>>16&255,v=F>>8&255,M=F&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,We,p,y,v,M,n,i,l,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,Ke,p,y,v,M,n,i,l,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,Qe,p,y,v,M,n,i,l,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,je,p,y,v,M,n,i,l,2,3,0,1);break}}e();for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let g=h[m],p=g&(1<<28)-1;if(a.get(p))continue;let F=g/(1<<28),y=F>>16&255,v=F>>8&255,M=F&255;switch(o[p]){case 2:this._mergeFaces(r,t,s,We,p,y,v,M,i,l,n,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,Ke,p,y,v,M,i,l,n,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,Qe,p,y,v,M,i,l,n,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,je,p,y,v,M,i,l,n,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,a,o,n,i,l,f,c,h,m,u,g){let{faceCulled:p,faceMaterials:F,vertX:y,vertY:v,vertZ:M,faceVertIndices:x,faceVertNormalX:A,faceVertNormalY:C,faceVertNormalZ:d,faceVertColorR:V,faceVertColorG:z,faceVertColorB:I,faceVertUs:_,faceVertVs:T,faceVertFlatNormalX:O,faceVertFlatNormalY:Y,faceVertFlatNormalZ:Z,faceVertSmoothNormalX:X,faceVertSmoothNormalY:N,faceVertSmoothNormalZ:P,faceVertBothNormalX:H,faceVertBothNormalY:k,faceVertBothNormalZ:U}=e,S=F[a],L=t[S];if(r.filled&&r.lastVoxelAxis1===o&&r.lastVoxelAxis2===n&&(L.simplify===!0||L.simplify===null&&s.simplify===!0)&&p.get(a)===0){if(r.maxVoxelAxis3!==i-1){r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a;return}let b=a*4,q=r.lastFaceIndex,w=q*4;if(F[q]!==S)return;let R=A[b],K=C[b],G=d[b],D=A[b+1],tt=C[b+1],B=d[b+1],ot=A[b+2],it=C[b+2],gt=d[b+2],mt=A[b+3],et=C[b+3],xt=d[b+3],pt=A[w],bt=C[w],vt=d[w],Nt=A[w+1],Yt=C[w+1],jt=d[w+1],kt=A[w+2],se=C[w+2],re=d[w+2],Lt=A[w+3],$t=C[w+3],ae=d[w+3];if(!(this._normalEquals(R,K,G,pt,bt,vt)&&this._normalEquals(D,tt,B,Nt,Yt,jt)&&this._normalEquals(ot,it,gt,kt,se,re)&&this._normalEquals(mt,et,xt,Lt,$t,ae)))return;let Rt=V[b],yt=z[b],nt=I[b],lt=V[b+1],ct=z[b+1],Ft=I[b+1],Pt=V[b+2],Ut=z[b+2],Ht=I[b+2],_t=V[b+3],Et=z[b+3],St=I[b+3],de=V[w],xe=z[w],Ct=I[w],Tt=V[w+1],It=z[w+1],Ot=I[w+1],wt=V[w+2],$=z[w+2],Q=I[w+2],W=V[w+3],rt=z[w+3],ut=I[w+3];if(!(Rt===de&&yt===xe&&nt===Ct&&lt===Tt&&ct===It&&Ft===Ot&&Pt===wt&&Ut===$&&Ht===Q&&_t===W&&Et===rt&&St===ut))return;let Ae=x[b+h],Gt=x[b+m],Dt=x[b+u],Pe=x[b+g],ke=y[Ae],ge=v[Ae],ds=M[Ae],Le=y[Gt],$e=v[Gt],Ue=M[Gt],ve=x[w+h],De=x[w+m],Je=x[w+u],ts=x[w+g],xs=y[ve],gs=v[ve],vs=M[ve],Ys=Math.sqrt((Le-ke)*(Le-ke)+($e-ge)*($e-ge)+(Ue-ds)*(Ue-ds)),Bs=Math.sqrt((Le-xs)*(Le-xs)+($e-gs)*($e-gs)+(Ue-vs)*(Ue-vs)),Xt=Ys/Bs;return Math.abs(l[De]-(1-Xt)*l[Gt]-Xt*l[ve])<=1e-4&&Math.abs(f[De]-(1-Xt)*f[Gt]-Xt*f[ve])<=1e-4&&Math.abs(c[De]-(1-Xt)*c[Gt]-Xt*c[ve])<=1e-4&&Math.abs(l[Je]-(1-Xt)*l[Dt]-Xt*l[ts])<=1e-4&&Math.abs(f[Je]-(1-Xt)*f[Dt]-Xt*f[ts])<=1e-4&&Math.abs(c[Je]-(1-Xt)*c[Dt]-Xt*c[ts])<=1e-4?(x[w+m]=Gt,x[w+u]=Dt,_[w+m]=_[b+m],T[w+m]=T[b+m],_[w+u]=_[b+u],T[w+u]=T[b+u],O[w+m]=O[b+m],Y[w+m]=Y[b+m],Z[w+m]=Z[b+m],O[w+u]=O[b+u],Y[w+u]=Y[b+u],Z[w+u]=Z[b+u],X[w+m]=X[b+m],N[w+m]=N[b+m],P[w+m]=P[b+m],X[w+u]=X[b+u],N[w+u]=N[b+u],P[w+u]=P[b+u],H[w+m]=H[b+m],k[w+m]=k[b+m],U[w+m]=U[b+m],H[w+u]=H[b+u],k[w+u]=k[b+u],U[w+u]=U[b+u],r.maxVoxelAxis3=i,p.set(a,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a,!1}static _normalEquals(t,s,e,r,a,o){return Math.abs(t-r)<.01&&Math.abs(s-a)<.01&&Math.abs(e-o)<.01}};var Ze=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:a,vertX:o,vertY:n,vertZ:i,faceVertFlatNormalX:l,faceVertFlatNormalY:f,faceVertFlatNormalZ:c,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:g,faceVertBothNormalY:p,faceVertBothNormalZ:F,faceVertUs:y,faceVertVs:v,faceVertColorR:M,faceVertColorG:x,faceVertColorB:A,faceVertNormalX:C,faceVertNormalY:d,faceVertNormalZ:V}=s;for(let z=0,I=t.faceCount;z<I;z++){if(r.get(z)===1)continue;let _=z*4,T=a[_],O=a[_+1],Y=a[_+2],Z=a[_+3],X=o[T],N=n[T],P=i[T],H=o[O],k=n[O],U=i[O],S=o[Y],L=n[Y],b=i[Y],q=o[Z],w=n[Z],R=i[Z],K=(X+S)/2,G=(N+L)/2,D=(P+b)/2,tt=(H-K)*(H-K)+(k-G)*(k-G)+(U-D)*(U-D),B=(q-K)*(q-K)+(w-G)*(w-G)+(R-D)*(R-D),ot=(H+q)/2,it=(k+w)/2,gt=(U+R)/2,mt=(X-ot)*(X-ot)+(N-it)*(N-it)+(P-gt)*(P-gt),et=(S-ot)*(S-ot)+(L-it)*(L-it)+(b-gt)*(b-gt);if(tt<e||B<e)this._shiftFaceVertsAtOffset(_,a),this._shiftFaceVertsAtOffset(_,C),this._shiftFaceVertsAtOffset(_,d),this._shiftFaceVertsAtOffset(_,V),this._shiftFaceVertsAtOffset(_,l),this._shiftFaceVertsAtOffset(_,f),this._shiftFaceVertsAtOffset(_,c),this._shiftFaceVertsAtOffset(_,h),this._shiftFaceVertsAtOffset(_,m),this._shiftFaceVertsAtOffset(_,u),this._shiftFaceVertsAtOffset(_,g),this._shiftFaceVertsAtOffset(_,p),this._shiftFaceVertsAtOffset(_,F),this._shiftFaceVertsAtOffset(_,y),this._shiftFaceVertsAtOffset(_,v),this._shiftFaceVertsAtOffset(_,M),this._shiftFaceVertsAtOffset(_,x),this._shiftFaceVertsAtOffset(_,A);else if(!(mt<e||et<e)){let xt=this._getVertexSumInline(X,N,P);for(;this._getVertexSumInline(H,k,U)<xt||this._getVertexSumInline(S,L,b)<xt||this._getVertexSumInline(q,w,R)<xt;){this._shiftFaceVertsAtOffset(_,a),this._shiftFaceVertsAtOffset(_,C),this._shiftFaceVertsAtOffset(_,d),this._shiftFaceVertsAtOffset(_,V),this._shiftFaceVertsAtOffset(_,l),this._shiftFaceVertsAtOffset(_,f),this._shiftFaceVertsAtOffset(_,c),this._shiftFaceVertsAtOffset(_,h),this._shiftFaceVertsAtOffset(_,m),this._shiftFaceVertsAtOffset(_,u),this._shiftFaceVertsAtOffset(_,g),this._shiftFaceVertsAtOffset(_,p),this._shiftFaceVertsAtOffset(_,F),this._shiftFaceVertsAtOffset(_,y),this._shiftFaceVertsAtOffset(_,v),this._shiftFaceVertsAtOffset(_,M),this._shiftFaceVertsAtOffset(_,x),this._shiftFaceVertsAtOffset(_,A);let pt=X,bt=N,vt=P;X=H,N=k,P=U,H=S,k=L,U=b,S=q,L=w,b=R,q=pt,w=bt,R=vt,xt=this._getVertexSumInline(X,N,P)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var ms=(E,t)=>E-t,me=class{set origin(t){this._origin=j.parse(t)}get origin(){return j.toString(this._origin)}set flatten(t){this._flatten=j.parse(t)}get flatten(){return j.toString(this._flatten)}set clamp(t){this._clamp=j.parse(t)}get clamp(){return j.toString(this._clamp)}set skip(t){this._skip=j.parse(t)}get skip(){return j.toString(this._skip)}set tile(t){this._tile=j.parse(t||" "),this._tile.x&&(this._tile=j.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=j.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=j.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return j.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=j.parse(t)}get aoSides(){return j.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new fe,this.voxChunk=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=j.parse("x y z"),this._flatten=j.parse(""),this._clamp=j.parse(""),this._skip=j.parse(""),this._tile=j.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=j.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForWrite(){this.lights.some(t=>t.size)&&(this.materials.materials[0].colors[0].count=1)}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:a}=t,{voxChunk:o}=this;this.prepareForWrite();let n=te.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let{maxFaces:i}=t,l=n>0,[f,c,h,m,u,g]=ft(o.size),p=this.materials.materials,F=ht(o.size[0]),y=ht(o.size[1]),v=ht(o.size[2]);for(let M=f;M<=c;M++)for(let x=h;x<=m;x++)for(let A=u;A<=g;A++){let C=o.getPaletteIndexAt(M,x,A);if(C===0)continue;let d=M+F,V=x+y,z=A+v,I=d<<16,_=z<<8,T=(I|_|V)*(1<<28),O=(I|V<<8|z)*(1<<28),Y=(V<<16|_|d)*(1<<28);for(let Z=0,X=As.length;Z<X;Z++){let N=Cs[Z],P,H=M+N[0],k=x+N[1],U=A+N[2];if(H<f||H>c||k<h||k>m||U<u||U>g?P=0:P=o.getPaletteIndexAt(H,k,U),this._createFace(o,t,p,M,x,A,F,y,v,C,P,Z,l,s)){let L=this.faceCount-1;if(this.faceCount>=i)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[L]=T+L,r[L]=O+L,a[L]=Y+L}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=a.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(ms),t.voxelXYZFaceIndices.sort(ms),t.voxelYZXFaceIndices.sort(ms),Me.fixClampedLinks(this,t),te.changeShape(this,t,this._shape),te.deform(this,t,n),te.warpAndScatter(this,t),be.calculateNormals(this,t),Se.transformVertices(this,t),Te.calculateLights(this,t),Oe.calculateAmbientOcclusion(this,t),Ye.combineColors(this,t),Xe.assignUVs(this,t),Be.simplify(this,t),Ze.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},r,a,o,n,i,l,{vertX:f,vertY:c,vertZ:h}=s;if(t===Ve||t===Wt){r=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY,i=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(let p=0,F=this.vertCount;p<F;p++){let y=f[p],v=c[p],M=h[p];y<r&&(r=y),v<a&&(a=v),M<o&&(o=M),y>n&&(n=y),v>i&&(i=v),M>l&&(l=M)}if(t===Wt){let[p,F,y,v,M,x]=ft(this.voxChunk.size),A=(F-p+1)/(F-p),C=(v-y+1)/(v-y),d=(x-M+1)/(x-M);e.rescale=Math.min(A,C,d)}}t||(r=this.bounds.minX,n=this.bounds.maxX+1,a=this.bounds.minY,i=this.bounds.maxY+1,o=this.bounds.minZ,l=this.bounds.maxZ+1);let m=-(r+n)/2,u=-(a+i)/2,g=-(o+l)/2;return this._origin.nx&&(m=-r),this._origin.px&&(m=-n),this._origin.ny&&(u=-a),this._origin.py&&(u=-i),this._origin.nz&&(g=-o),this._origin.pz&&(g=-l),e.bounds={minX:r,minY:a,minZ:o,maxX:n,maxY:i,maxZ:l},e.offset={x:m,y:u,z:g},e}_createFace(t,s,e,r,a,o,n,i,l,f,c,h,m,u){let g=t.colorForPaletteIndex(f),p=(g&4278190080)>>24,F=e[p];if(F.opacity===0)return!1;if(c!==0){let G=(t.colorForPaletteIndex(c)&4278190080)>>24;if(!e[G].isTransparent&&!F.wireframe)return!1;if(!(!F.isTransparent&&!F.wireframe)){if(!(F.isTransparent&&!F.wireframe&&c!==0&&e[(t.colorForPaletteIndex(c)&4278190080)>>24].wireframe))return!1}}let y=this._isFacePlanar(F,r,a,o,h,F._flatten,this._flatten),v=this._isFacePlanar(F,r,a,o,h,F._clamp,this._clamp);if(this._isFacePlanar(F,r,a,o,h,F._skip,this._skip))return!1;let{faceVertIndices:x,faceVertColorR:A,faceVertColorG:C,faceVertColorB:d,faceFlattened:V,faceClamped:z,faceSmooth:I,faceCulled:_,faceMaterials:T,faceNameIndices:O,faceVertUs:Y,faceVertVs:Z}=s,{faceCount:X}=this,N=X*4,P=(g&255)/255,H=((g&65280)>>8)/255,k=((g&16711680)>>16)/255;x[N]=this._createVertex(s,F,r,a,o,P,H,k,n,i,l,h,0,y,v,u),x[N+1]=this._createVertex(s,F,r,a,o,P,H,k,n,i,l,h,1,y,v,u),x[N+2]=this._createVertex(s,F,r,a,o,P,H,k,n,i,l,h,2,y,v,u),x[N+3]=this._createVertex(s,F,r,a,o,P,H,k,n,i,l,h,3,y,v,u);for(let G=0;G<4;G++)A[N+G]=P,C[N+G]=H,d[N+G]=k;V.set(X,y?1:0),z.set(X,v?1:0),I.set(X,0),_.set(X,0),T[X]=p,O[X]=h;let U=ws[h],S=U[0],L=U[1],b=r+n,q=a+i,w=o+l,R=b*S[0]+q*S[1]+w*S[2],K=b*L[0]+q*L[1]+w*L[2];for(let G=0;G<4;G++)Y[N+G]=R,Z[N+G]=K;return m&&Me.linkVertices(this,s,X),this.faceCount++,!0}_createVertex(t,s,e,r,a,o,n,i,l,f,c,h,m,u,g,p){let F=Vs[h][m],y=e+F[0],v=r+F[1],M=a+F[2],x=y+l<<20|v+f<<10|M+c,{_clamp:A,_flatten:C}=this,{vertDeformCount:d,vertDeformDamping:V,vertDeformStrength:z,vertWarpAmplitude:I,vertWarpFrequency:_,vertScatter:T,vertX:O,vertY:Y,vertZ:Z,vertLinkCounts:X,vertFullyClamped:N,vertRing:P,vertClampedX:H,vertClampedY:k,vertClampedZ:U,vertColorR:S,vertColorG:L,vertColorB:b,vertColorCount:q,vertFlattenedX:w,vertFlattenedY:R,vertFlattenedZ:K}=t,{deform:G,warp:D,scatter:tt}=s,B;if(p.has(x)?(B=p.get(x),G?d[B]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,B)&&(z[B]=G.strength,V[B]=G.damping,d[B]=G.count):(d[B]=0,V[B]=0,z[B]=0),D?I[B]!==0&&(D.amplitude<I[B]||D.amplitude===I[B]&&D.frequency>_[B])&&(I[B]=D.amplitude,_[B]=D.frequency):(I[B]=0,_[B]=0),tt?T[B]!==0&&Math.abs(tt)<Math.abs(T[B])&&(T[B]=tt):T[B]=0):(B=this.vertCount,p.set(x,B),O[B]=y,Y[B]=v,Z[B]=M,G?(V[B]=G.damping,d[B]=G.count,z[B]=G.strength,X[B]=0,N.set(B,0)):d[B]=0,D?(I[B]=D.amplitude,_[B]=D.frequency):I[B]=0,tt?T[B]=tt:T[B]=0,q[B]=0,P[B]=0,H.set(B,0),k.set(B,0),U.set(B,0),w.set(B,0),R.set(B,0),K.set(B,0)),this._setIsVertexPlanar(s,y,v,M,s._flatten,C,w,R,K,B),this._setIsVertexPlanar(s,y,v,M,s._clamp,A,H,k,U,B),s.fade){let ot=q[B],it=B*6;S[it+ot]=o,L[it+ot]=n,b[it+ot]=i,q[B]++}return this.vertCount++,B}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:a}=t,o=e[s],n=a[s],i=r[s];return o===1?i*(n+1):i*(1-Math.pow(o,n+1))/(1-o)}_isFacePlanar(t,s,e,r,a,o,n){let i=o,l=t.bounds;if(i||(i=n,l=this.bounds),!i)return!1;switch(a){case 0:return i.x||i.nx&&s===l.minX;case 1:return i.x||i.px&&s===l.maxX;case 2:return i.y||i.ny&&e===l.minY;case 3:return i.y||i.py&&e===l.maxY;case 4:return i.z||i.nz&&r===l.minZ;case 5:return i.z||i.pz&&r===l.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,a,o,n,i,l,f){let c=a,h=t.bounds;c||(c=o,h=this.bounds),c?(n.set(f,c.x||c.nx&&s<h.minX+.5||c.px&&s>h.maxX+.5?1:n.get(f)|0),i.set(f,c.y||c.ny&&e<h.minY+.5||c.py&&e>h.maxY+.5?1:i.get(f)|0),l.set(f,c.z||c.nz&&r<h.minZ+.5||c.pz&&r>h.maxZ+.5?1:l.get(f)|0)):(n.set(f,n.get(f)|0),i.set(f,i.get(f)|0),l.set(f,l.get(f)|0))}};var Xs={linecontinuation:/_\s*[\r\n]/gm,modelparts:new RegExp(/\s*(\/\/(.*?)\r?\n)/.source+"|"+/\s*(texture|light|model|material|voxels)\s+/.source+"|"+/\s*([^=,\r\n]+=\s*data:image.*?base64,.*$)\s*/.source+"|"+/\s*([^=,\r\n]+=[^\r\n=;,/]+)\s*/.source+"|"+/\s*([A-Za-z ()\d -]+)\s*/.source,"gm")},ks=["size","materials","textures","lights","voxels"],Ls=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],$s=["color"],Us=["direction","position","distance","size","detail"],Hs=["id","image"],qs=["cube"],Gs=["colors"],Ws=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],ee=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,r=null;return Array.from(t.replaceAll(Xs.linecontinuation," ").matchAll(Xs.modelparts),o=>o[0].trim()).filter(o=>o).forEach(function(o){if(!o.startsWith("//"))if(o==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(o==="light")e={color:"#FFF"},s.lights.push(e);else if(o==="model")e=s;else if(o==="material")e={},s.materials.push(e);else if(o==="voxels")e=s,r="";else if(r!==null)r+=o.replace(/\s/g,"");else{let n=o.indexOf("=");if(n===-1)throw new Error(`SyntaxError: Invalid definition '${o}'.`);let i=o.substring(0,n).trim().toLowerCase(),l=o.substring(n+1).trim();e[i]=l}},this),s.voxels=r,s}static _createModel(t){let s=new me;s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===Ve?s.resize=Ve:t.resize===Wt?s.resize=Wt:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=Wt),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(e=>e.size)&&s.materials.createMaterial(He,ye,1,0,!1,!1,1,0,!1,1,!1,Mt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0).addColorHEX("#FFFFFF");for(let e of t.lights)this._createLight(s,e);for(let e of t.textures)this._createTexture(s,e);for(let e of t.materials)this._createMaterial(s,e);return s.colors={},s.materials.forEach(function(e){e.colors.forEach(function(r){s.colors[r.id]=r})}),this._resolveShellColors(s.shell,s),s.materials.forEach(function(e){this._resolveShellColors(e.shell,s)},this),this._createVoxels(s,t.voxels),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=st.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new le(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s){let e=ye;s.lighting===Ce&&(e=Ce),s.lighting===oe&&(e=oe),s.lighting===ie&&(e=ie),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let r=null;t.simplify&&s.simplify==="false"&&(r=!1),!t.simplify&&s.simplify==="true"&&(r=!0);let a=t.materials.createMaterial(s.type||Jt,e,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,r,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0));s.deform&&a.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&a.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(a.scatter=parseFloat(s.scatter)),a.flatten=s.flatten,a.clamp=s.clamp,a.skip=s.skip,a.setAo(this._parseAo(s.ao)),a.shell=this._parseShell(s.shell),a.lights=s.lights!=="false",a.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,a.data);let o=/\s*\(\s*(\d+)\s*\)\s*/g,n=/([A-Z][a-z]*)\s*(\(\d+\))?[:]\s*(#[a-fA-F0-9]*)\s*/g;s.colors=s.colors.replace(o,"($1)"),s.colors=s.colors.replace(n,"$1$2:$3 "),s.colors.split(" ").filter(l=>l).forEach(function(l){let f=l.split(":")[0],c=null;f.includes("(")&&(c=Number(f.split("(")[1].replace(")","")),f=f.split("(")[0]);let h=l.split(":")[1];if(!a.colors[f]){if(h=a.addColor(st.fromHex(h)),!/^[A-Z][a-z]*$/.test(f))throw new Error(`SyntaxError: Invalid color ID '${f}'`);h.id=f,h.exId=c}},this)}static _createVoxels(t,s){let e=t.colors,r=null,a=[];if(s.matchAll)a=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let A=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,C;for(;(C=A.exec(s))!==null;)a.push(C);a=a[Symbol.iterator]()}let o=this._unpackRle(a),n=t.size.x*t.size.y*t.size.z,i=0,l=new Set;for(let A=0;A<o.length;A++)if(o[A][0]!=="-"){let C=e[o[A][0]].id;l.has(C)||l.add(C)}let f=1;l.size>=2&&(f=2),l.size>=4&&(f=4),l.size>=16&&(f=8);let c=t.voxChunk=new dt([t.size.x,t.size.y,t.size.z],f);for(let A=0;A<o.length;A++)i+=o[A][1];if(i!==n)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${n} voxels) but the voxel matrix contains ${i} voxels.`);let h={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new Qt;let m=null,u=null,g=t.bounds,p=t.size,F=ht(p.x),y=ht(p.y),v=ht(p.z),M=new Map,x=t.materials.materials;for(let A=0,C=x.length;A<C;A++){let d=x[A];for(let V of d.colors)M.set(V.id,A)}for(let A=0,C=o.length;A<C;A++){let d=null,V=o[A],z=V[0];z!=="-"&&(d=e[z],d||(r===null&&(r=t.materials.createMaterial(Jt,ye,.5,0,!1,1,!1)),d=st.fromHex("#FF00FF"),d.id=z,r.addColor(d),e[z]=d,m=t.materials.materials.indexOf(r),M.set(d.id,m)),m=M.get(d.id),u=x[m].bounds);let I=V[1];d?this._setVoxels(g,u,m,F,y,v,d,I,h,c):this._advanceContext(I,F,y,v,h)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=st.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),a=parseFloat(t.split(" ")[2]||1),o=parseFloat(t.split(" ")[3]||70);o=Math.max(0,Math.min(90,Math.round(o))),s={color:e,maxDistance:r,strength:a,angle:o}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let a=0;a<r.length/2;a++){let o=r[a*2+0],n=r[a*2+1];if(!/^[A-Z][a-z]*$/.test(o)||!/^([-+]?[0-9]*\.?[0-9]+)*$/.test(n)){e=!0;break}else s.push({colorId:r[a*2],distance:r[a*2+1]})}}if(e)throw new Error(`SyntaxError: shell '${t}' must be 'none' or one or more color ID's and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,a){return r.distance-a.distance})),s}static _resolveShellColors(t,s){!t||t.length===0||t.forEach(function(e){if(e.color=s.colors[e.colorId],!e.color)throw new Error(`SyntaxError: shell color ID '${e.colorId}' is not a known color`)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\s+/),a=null;for(let n=0;n<r.length;n++){let i=r[n];if(isNaN(i))a={name:i,values:[]},e.push(a);else if(a)a.values.push(parseFloat(i));else break}let o=e.length===0;for(let n=0;n<e.length;n++)o=o||e[n].values.length===0||e[n].values.length>=4;if(o)throw new Error(`SyntaxError: The data property '${e.data}' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch{e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let a=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(a.x),y:Math.trunc(a.y),z:Math.trunc(a.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let a=s.split(/[\s/]+/);if(a.length===1&&r&&(a.push(a[0]),a.push(a[0])),a.length!==3)throw new Error(`SyntaxError: '${t}' must have three values.`);if(a={x:parseFloat(a[0]),y:parseFloat(a[1]),z:parseFloat(a[2])},Number.isNaN(a.x)||Number.isNaN(a.y)||Number.isNaN(a.z))throw new Error(`SyntaxError: Invalid value '${s}' for ${t}'.`);return a}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let a=r.value[0];if(a[0]>="0"&&a[0]<="9")e=parseInt(a,10);else if(a==="("){let o=this._unpackRle(t);for(let n=0;n<e;n++)Array.prototype.push.apply(s,o);e=1}else{if(a===")")return s;a.length>1&&a[0]>="A"&&a[0]<="Z"&&a[1]===a[0]?(e>1?(s.push([a[0],e]),s.push([a[0],a.length-1])):s.push([a[0],a.length]),e=1):a.length>1&&a[0]==="-"&&a[1]==="-"?(e>1?(s.push(["-",e]),s.push(["-",a.length-1])):s.push(["-",a.length]),e=1):(s.push([a,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,a,o,n,i,l,f){let{x:c,y:h,z:m,maxx:u,maxy:g,minx:p,miny:F}=l;if(c-=r,h-=a,m-=o,p-=r,F-=a,u-=r,g-=a,n){let y=Math.floor(n.r*255),v=Math.floor(n.g*255),M=Math.floor(n.b*255),x=Ge(y,v,M,e);for(;i-- >0;)t.set(c,h,m),s.set(c,h,m),f.setColorAt(c,h,m,x),c++,c>u&&(c=p,h++),h>g&&(h=F,m++)}else for(;i-- >0;)c++,c>u&&(c=p,h++),h>g&&(h=F,m++);l.x=c+r,l.y=h+a,l.z=m+o}static _advanceContext(t,s,e,r,a){let{x:o,y:n,z:i,maxx:l,maxy:f,minx:c,miny:h}=a;for(o-=s,n-=e,i-=r,c-=s,h-=e,l-=s,f-=e;t-- >0;)o++,o>l&&(o=c,n++),n>f&&(n=h,i++);a.x=o+s,a.y=n+e,a.z=i+r}static _validateModel(t){this._validateProperties(t,ks,Ls,"model");for(let s of t.lights)this._validateLight(s);for(let s of t.textures)this._validateTexture(s);for(let s of t.materials)this._validateMaterial(s)}static _validateLight(t){if(this._validateProperties(t,$s,Us,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,Hs,qs,"texture")}static _validateMaterial(t){this._validateProperties(t,Gs,Ws,"material")}static _validateProperties(t,s,e,r){for(let a of s)if(!Object.hasOwn(t,a))throw new Error("SyntaxError: "+r+' is missing mandatory property "'+a+'".');for(let a in t)if(!s.includes(a)&&!e.includes(a))throw new Error("SyntaxError: "+r+' has unrecognized property "'+a+'".')}};var Re=class{static writeToString(t,s,e){e=Math.round(e||1),t.prepareForWrite();let r=[],a={};t.materials.forEach(function(c){c.colors.forEach(function(h){r.push(h),a[h.id]=h.id})}),r.sort(function(c,h){return h.count-c.count});let o=0,n=0;for(let c=0;c<r.length;c++){if(!r[c].id){let h;do h=this._colorIdForIndex(n++);while(a[h]);a[h]=h,r[c].id=h}o=Math.max(r[c].id.length,o)}let i=s||o===1||o>3?1:o,l=this._serializeTextures(t);l+=this._serializeLights(t),l+=`model\r
`;let f=t.voxels.bounds.size;return f.y===f.x&&f.z===f.x?l+=`size = ${f.x*e}\r
`:l+=`size = ${f.x*e} ${f.y*e} ${f.z*e}\r
`,t.shape!=="box"&&(l+=`shape = ${t.shape}\r
`),(t.scale.x!==1||t.scale.y!==1||t.scale.z!==1||e!==1)&&(t.scale.y===t.scale.x&&t.scale.z===t.scale.x?l+=`scale = ${t.scale.x/e}\r
`:l+=`scale = ${t.scale.x/e} ${t.scale.y/e} ${t.scale.z/e}\r
`),t.resize&&(l+=`resize = ${t.resize}\r
`),(t.rotation.x!==0||t.rotation.y!==0||t.rotation.z!==0)&&(l+=`rotation = ${t.rotation.x} ${t.rotation.y} ${t.rotation.z}\r
`),(t.position.x!==0||t.position.y!==0||t.position.z!==0)&&(l+=`position = ${t.position.x} ${t.position.y} ${t.position.z}\r
`),t.origin&&(l+=`origin = ${t.origin}\r
`),t.flatten&&(l+=`flatten = ${t.flatten}\r
`),t.clamp&&(l+=`clamp = ${t.clamp}\r
`),t.skip&&(l+=`skip = ${t.skip}\r
`),t.tile&&(l+=`tile = ${t.tile}\r
`),t.ao&&(l+=`ao =${t.ao.color.toString()!=="#000"?" "+t.ao.color:""} ${t.ao.maxDistance} ${t.ao.strength}${t.ao.angle!==70?" "+t.ao.angle:""}\r
`),t.asSides&&(l+=`aosides = ${t.aoSides}\r
`),t.asSamples&&(l+=`aosamples = ${t.aoSamples}\r
`),t.wireframe&&(l+=`wireframe = true\r
`),t.simplify||(l+=`simplify = false\r
`),t.data&&(l+=`data = ${this._serializeVertexData(t.data)}\r
`),t.shell&&(l+=`shell = ${this._getShell(t.shell)}\r
`),l+=this._serializeMaterials(t),!s||e!==1?l+=this._serializeVoxels(t,e,i):l+=this._serializeVoxelsRLE(t,100),l}static _serializeVertexData(t){let s=null;if(t&&t.length>0){s="";for(let e=0;e<t.length;e++){s+=t[e].name+" ";for(let r=0;r<t[e].values.length;r++)s+=t[e].values[r]+" "}}return s}static _serializeTextures(t){let s="",e="";return Object.getOwnPropertyNames(t.textures).forEach(function(r){let a=t.textures[r],o=[];o.push(`id = ${a.id}`),a.cube&&o.push("cube = true"),o.push(`image = ${a.image}`),s+=`texture ${o.join(", ")}\r
`,e=`\r
`}),s+=e,s}static _serializeLights(t){let s="",e="";return t.lights.forEach(function(r){let a=[],o=`${r.color}`;r.strength!==1&&(o+=` ${r.strength}`),a.push(`color = ${o}`),r.direction&&a.push(`direction = ${r.direction.x} ${r.direction.y} ${r.direction.z}`),r.position&&a.push(`position = ${r.position.x} ${r.position.y} ${r.position.z}`),r.distance&&a.push(`distance = ${r.distance}`),r.size&&(a.push(`size = ${r.size}`),r.detail!==1&&a.push(`detail = ${r.detail}`)),s+=`light ${a.join(", ")}\r
`,e=`\r
`}),s+=e,s}static _serializeMaterials(t){let s="";return t.materials.forEach(function(e){if(e.colors.length===0)return;let r=[];if(e.type!==Jt&&r.push(`type = ${e.type}`),e.lighting!==ye&&r.push(`lighting = ${e.lighting}`),e.wireframe&&r.push("wireframe = true"),e.roughness!==1&&r.push(`roughness = ${e.roughness}`),e.metalness!==0&&r.push(`metalness = ${e.metalness}`),e.fade&&r.push("fade = true"),e.simplify!==null&&e.simplify!==t.simplify&&r.push(`simplify = ${e.simplify}`),e.opacity!==1&&r.push(`opacity = ${e.opacity}`),e.transparent&&r.push("transparent = true"),e.refractionRatio!==.9&&r.push(`refractionRatio = ${e.refractionRatio}`),e.emissive&&r.push(`emissive = ${e.emissive.color} ${e.emissive.intensity}`),e.fog||r.push("fog = false"),e.side!==Mt&&r.push(`side = ${e.side}`),e.deform&&r.push(`deform = ${e.deform.count} ${e.deform.strength}${e.deform.damping!==1?" "+e.deform.damping:""}`),e.warp&&r.push(`warp = ${e.warp.amplitude} ${e.warp.frequency}`),e.scatter&&r.push(`scatter = ${e.scatter}`),e.ao&&r.push(`ao =${e.ao.color!=="#000"?" "+e.ao.color:""} ${e.ao.maxDistance} ${e.ao.strength}${e.ao.angle!==70?" "+e.ao.angle:""}`),t.lights.length>0&&!e.lights&&r.push("lights = false"),e.flatten&&r.push(`flatten = ${e.flatten}`),e.clamp&&r.push(`clamp = ${e.clamp}`),e.skip&&r.push(`skip = ${e.skip}`),e.map&&r.push(`map = ${e.map.id}`),e.normalMap&&r.push(`normalmap = ${e.normalMap.id}`),e.roughnessMap&&r.push(`roughnessmap = ${e.roughnessMap.id}`),e.metalnessMap&&r.push(`metalnessmap = ${e.metalnessMap.id}`),e.emissiveMap&&r.push(`emissivemap = ${e.emissiveMap.id}`),e.matcap&&r.push(`matcap = ${e.matcap.id}`),e.reflectionMap&&r.push(`reflectionmap = ${e.reflectionMap.id}`),e.refractionMap&&r.push(`refractionmap = ${e.refractionMap.id}`),e.mapTransform.uscale!==-1||e.mapTransform.vscale!==-1){let a="maptransform =";a+=` ${e.mapTransform.uscale} ${e.mapTransform.vscale}`,(e.mapTransform.uoffset!==0||e.mapTransform.voffset!==0||e.mapTransform.rotation!==0)&&(a+=` ${e.mapTransform.uoffset} ${e.mapTransform.voffset}`,e.mapTransform.rotation!==0&&(a+=` ${e.mapTransform.rotation}`)),r.push(a)}e.data&&r.push(`data = ${this._serializeVertexData(e.data)}`),e.shell&&r.push(`shell = ${this._getShell(e.shell)}`),s+="material "+r.join(", ")+`\r
`,s+="  colors =",e.colors.forEach(function(a){s+=` ${a.id}${a.exId==null?"":"("+a.exId+")"}:${a}`}),s+=`\r
`},this),s}static _colorIdForIndex(t){let s="ABCDEFGHIJKLMNOPQRSTUVWXYZ",e="";do{let r=t%26;e=s[r]+e.toLowerCase(),t=(t-r)/26,t<26&&(s="#ABCDEFGHIJKLMNOPQRSTUVWXYZ")}while(t>0);return e}static _getShell(t){if(t.length===0)return"none";let s="";for(let e=0;e<t.length;e++)s+=`${t[e].colorId} ${t[e].distance} `;return s.trim()}static _serializeVoxels(t,s,e){let r="-"+" ".repeat(Math.max(e-1)),a=" ".repeat(e),o=`voxels\r
`,n=t.voxels;for(let i=n.minZ;i<=n.maxZ;i++)for(let l=0;l<s;l++){for(let f=n.minY;f<=n.maxY;f++)for(let c=0;c<s;c++){for(let h=n.minX;h<=n.maxX;h++){let m=n.getVoxel(h,f,i);for(let u=0;u<s;u++)if(m){o+=m.color.id;let g=m.color.id.length;for(;g++<e;)o+=" "}else o+=r}o+=a}o+=`\r
`}return o}static _serializeVoxelsRLE(t,s){let e=[],r=0,a;t.voxels.forEachInBoundary(function(n){let i=n?n.color:null;i===a?r++:(this._addRleChunk(e,a,r,s),a=i,r=1)},this),this._addRleChunk(e,a,r,s);let o="";for(let n of e)o+=this._rleToString(n);return`voxels\r
`+o+`\r
`}static _addRleChunk(t,s,e,r){if(e===0)return;let a=e>1?e.toString():"";a+=s?s.id:"-",t.push([a,1,a]);for(let o=Math.max(0,t.length-r*2);o<=t.length-2;o++){let n=t[o][0];for(let i=1;i<r&&!(o+2*i>t.length);i++){let l=!0;for(let f=0;f<=i-1&&(l=t[o+f][2]===t[o+f+i][2],!!l);f++);if(l){let f=t.splice(o,i);t.splice(o,i-1),t[o]=[f,2,null],t[o][2]=JSON.stringify(t[o]),o=t.length;break}}if(Array.isArray(n)&&t.length>o+n.length){let i=n,l=!0;for(let f=0;f<i.length&&(l=i[f][2]===t[o+1+f][2],!!l);f++);l&&(t.splice(o+1,i.length),t[o][1]++,t[o][2]=null,t[o][2]=JSON.stringify(t[o]),o=t.length)}}}static _rleToString(t){let s=t[1]===1?"":t[1].toString(),e=t[0];if(Array.isArray(e)){s+="(";for(let r of e)s+=this._rleToString(r);s+=")"}else s+=e;return s}};var ue=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),a=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=at.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=at.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=at.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=at.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=at.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=at.create(new Uint8Array(r).buffer,1,0),this.faceClamped=at.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=at.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=at.create(new Uint8Array(r).buffer,1,0),this.faceCulled=at.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(a),this.faceVertNormalX=new Float32Array(a),this.faceVertNormalY=new Float32Array(a),this.faceVertNormalZ=new Float32Array(a),this.faceVertFlatNormalX=new Float32Array(a),this.faceVertFlatNormalY=new Float32Array(a),this.faceVertFlatNormalZ=new Float32Array(a),this.faceVertSmoothNormalX=new Float32Array(a),this.faceVertSmoothNormalY=new Float32Array(a),this.faceVertSmoothNormalZ=new Float32Array(a),this.faceVertBothNormalX=new Float32Array(a),this.faceVertBothNormalY=new Float32Array(a),this.faceVertBothNormalZ=new Float32Array(a),this.faceVertColorR=new Float32Array(a),this.faceVertColorG=new Float32Array(a),this.faceVertColorB=new Float32Array(a),this.faceVertLightR=new Float32Array(a),this.faceVertLightG=new Float32Array(a),this.faceVertLightB=new Float32Array(a),this.faceVertAO=new Float32Array(a),this.faceVertUs=new Float32Array(a),this.faceVertVs=new Float32Array(a),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};function us(E){let t=new Blob([E],{type:"text/javascript"}),s=URL.createObjectURL(t),e=new Worker(s);return URL.revokeObjectURL(s),e}function ps(){return us('var Ss=Object.defineProperty;var Xs=(b,t,s)=>t in b?Ss(b,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):b[t]=s;var us=(b,t,s)=>(Xs(b,typeof t!="symbol"?t+"":t,s),s);var J=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\\s+(?:none|-x|x|\\+x|-y|y|\\+y|-z|z|\\+z|\\s))+\\s*$/.test(t))throw new Error(`SyntaxError: Planar expression \'${t}\' is only allowed to be \'none\' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var le="standard",Le="basic",ps="lambert",xs="phong",ds="matcap",gs="toon",ke="normal",xe="bounds",Gt="model",Ue="flat",de="quad",ee="smooth",se="both",It="front",fe="back",Ht="double",vs=["nx","px","ny","py","nz","pz"],Fs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],As=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],Vs=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],ys=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var Je=(b,t,s)=>Math.min(Math.max(b,t),s),rt=class{static fromHex(t){let s=new rt;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(Je(t,0,1)*255),s=Math.round(Je(s,0,1)*255),e=Math.round(Je(e,0,1)*255);let o="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return rt.fromHex(o)}clone(){let t=new rt;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof rt?rt.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):rt.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((r,n)=>r+n.r,0),e=this.g+t.reduce((r,n)=>r+n.g,0),o=this.b+t.reduce((r,n)=>r+n.b,0);return rt.fromRgb(s,e,o)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ge=class{constructor(t,s,e,o,r,n,i,a,c,h,l,f,m,p,g,u,A,F,v,V,d,_,C,x,M){switch(t=t||le,t){case le:case Le:case ps:case xs:case gs:case ds:case ke:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||p&&p.cube||g&&g.cube||u&&u.cube||A&&A.cube)&&!(d===-1&&_===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(v&&V)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof o=="number"?o:1,this.alphaTest=typeof r=="number"?r:0,this.transparent=!!n,this.refractionRatio=typeof i=="number"?i:.9,this.wireframe=!!a,this.side=c||It,[It,fe,Ht].includes(this.side)||(this.side=It),this.setEmissive(h,l),this.fog=typeof f=="boolean"?f:!0,this.map=m,this.normalMap=p,this.roughnessMap=g,this.metalnessMap=u,this.emissiveMap=A,this.matcap=F,this.reflectionMap=v,this.refractionMap=V,this.mapTransform={uscale:d||-1,vscale:_||-1,uoffset:C||0,voffset:x||0,rotation:M||0},this.aoActive=!1,this._colors=[]}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:rt.fromHex(t),intensity:s}}get emissive(){return this._emissive}get colors(){return this._colors}get colorCount(){return this._colors.length}get colorUsageCount(){return this._colors.reduce((t,s)=>t+s.count,0)}};var re=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var ve=class{constructor(t,s,e,o,r){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=o!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=J.parse(""),this._clamp=J.parse(""),this._skip=J.parse(""),this._ao=void 0,this.lights=!0,this._side=r,this._colors=[],this.bounds=new re}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t==null?1:t,0),s=s==null?1:s,e=e==null?1:e,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=J.parse(t)}get flatten(){return J.toString(this._flatten)}set clamp(t){this._clamp=J.parse(t)}get clamp(){return J.toString(this._clamp)}set skip(t){this._skip=J.parse(t)}get skip(){return J.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=J.parse(t)}get aoSides(){return J.toString(this._aoSides)}addColorHEX(t){return this.addColor(rt.fromHex(t))}addColorRGB(t,s,e){return this.addColor(rt.fromRgb(t,s,e))}addColor(t){if(!(t instanceof rt))throw new Error("addColor requires a Color object, e.g. material.addColor(Color.fromHex(\'#FFFFFF\'))");return t._setMaterial(this),this._colors.push(t),this._baseMaterial._colors.push(t),t}};var Fe=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,o,r,n,i,a,c,h,l,f,m,p,g,u,A,F,v,V,d,_,C,x,M,w,I,y){f=f||It,[It,fe,Ht].includes(f)||(f=It);let S=f===Ht?Ht:It,X=new ge(t,e,o,i,a,c,h,l,S,m,p,g,u,A,F,v,V,d,_,C,x,M,w,I,y),Y=X.baseId,B=this.baseMaterials.find(O=>O.baseId===Y);B?X=B:this.baseMaterials.push(X);let T=new ve(X,s,r,n,f);return this.materials.push(T),T}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}findColorByExId(t){let s=null;return this.forEach(function(e){s||(s=e.colors.find(o=>o.exId===t))},this),s}getMaterialListIndex(t){return this.materials.indexOf(t)}};function Ae(b,t,s,e){let o=s*b;for(let r=0;r<s;){let n=o&7,i=o>>3,a=s-r,c=8-n,h=a<c?a:c,l=~(255<<h),f=t&l;t>>=h;let m=~(l<<n);e[i]=e[i]&m|f<<n,o+=h,r+=h}}var je=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Ae(t,s,1,this.view)}clear(){this.view.fill(0)}},De=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Ae(t,s,2,this.view)}clear(){this.view.fill(0)}},ts=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Ae(t,s,4,this.view)}clear(){this.view.fill(0)}},es=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Ae(t,s,8,this.view)}clear(){this.view.fill(0)}},ss=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,o=t*e,r=0;for(let n=0;n<e;){let i=o&7,a=o>>3,c=e-n,h=8-i,l=c<h?c:h,f=s[a],m=~(255<<l);r|=(f>>i&m)<<n,o+=l,n+=l}return r>>>0}set(t,s){Ae(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},lt=class{static create(t,s,e,o=null){let r=o?new Uint8Array(t,e,o):new Uint8Array(t,e);switch(s){case 1:return new je(r);case 2:return new De(r);case 4:return new ts(r);case 8:return new es(r);default:return new ss(r)}}};var Ts=0,_s=0,rs=128,Ve=8,Ys=0,Zs=255,Ms=Zs<<24>>>0,os={NONE:0,PAINT:1,KEEP:2},yt=1,oe=new Map,pt=b=>Math.floor(b%2===0?b/2-1:b/2),mt=b=>{let[t,s,e]=b,o=pt(t),r=pt(s),n=pt(e),i=t-o-1,a=s-r-1,c=e-n-1,h=-o,l=-r,f=-n;return[h,i,l,a,f,c]},ye=1,Cs=ye*4;function ns(b,t,s=null){let e=2**t-yt,o=Cs*e,r=b[0]*b[1]*b[2]*t,n=Math.floor(r/8)+1,i=Ve+o+n;s==null&&(typeof Buffer!="undefined"?s=Buffer.alloc(i).buffer:s=new ArrayBuffer(i));let a=new Uint8Array(s,0,Ve),c=o/Cs,h=new Uint32Array(s,Ve,c),l=lt.create(s,t,Ve+o);return a[0]=Ts,[a[1],a[2],a[3]]=b,a[4]=t,[s,h,l]}var At=class{constructor(t=null,s=8,e=null,o=null,r=0,n=null,i=0,a=null){us(this,"createInverse",(t,s)=>{oe.clear();let e=t.size,[o,r,n,i,a,c]=mt(e),{size:h}=this,l=new At(h),[f,m,p,g,u,A]=mt(h);for(let F=f;F<=m;F+=1)for(let v=p;v<=g;v+=1)for(let V=u;V<=A;V+=1){if(this.getPaletteIndexAt(F,v,V)===0)continue;let _=F+s[0],C=v+s[1],x=V+s[2];if(_>r||_<o||C>i||C<n||x>c||x<a||!t.hasVoxelAt(_,C,x))l.setColorAt(F,v,V,Ms);else{let M=t.getColorAt(_,C,x);l.setColorAt(F,v,V,M)}}return l});if(e&&o)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,n=n||e.length,a=a||o.length,this.palette=new Uint32Array(e,r||0,n/4),this.indices=lt.create(o,s,i,a),this.xShift=pt(t[0]),this.yShift=pt(t[1]),this.zShift=pt(t[2]),this._rebuildRefCounts();else if(t){let[c,h,l]=ns(t,s);this.palette=h,this.indices=l,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(c)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,Ve);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=pt(this.size[0]),this.yShift=pt(this.size[1]),this.zShift=pt(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:o}=this,r=this._getOffset(t,s,e);return o.get(r)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let o=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(o)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==_s}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,_s)}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-yt)*ye]}setPaletteColor(t,s){this.palette[(t-yt)*ye]=s}paletteHasReferences(t){return this._refCounts[t-yt]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-yt]=1}incrementPaletteRefcount(t){this._refCounts[t-yt]+=1}decrementPaletteRefcount(t){this._refCounts[t-yt]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,o){let r=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(r,o)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,o=this.getPaletteIndexAtOffset(t);At.isNonEmptyPaletteIndex(o)&&this.decrementPaletteRefcount(o),At.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,o){let r=this._getOffset(t,s,e);return this.setColorAtOffset(r,o)}setColorAtOffset(t,s){let{palette:e,indices:o}=this,r=this.getPaletteIndexAtOffset(t),n=At.isNonEmptyPaletteIndex(r);n&&this.decrementPaletteRefcount(r);for(let a=0;a<e.length;a+=1){let c=a+yt;if(this.getPaletteColor(c)===s)return this.incrementPaletteRefcount(c),o.set(t,c),c}if(n&&!this.paletteHasReferences(r))return this.setPaletteColor(r,s),this.resetPaletteRefcountToOne(r),r;let i=this._getFreePaletteIndex();return this.setPaletteColor(i,s),this.resetPaletteRefcountToOne(i),this.indices.set(t,i),i}colorForPaletteIndex(t){return this.palette[(t-yt)*ye]}filterByChunk(t,s,e,o,r){if(r===os.NONE)return;let n=t.size,[i,a,c,h,l,f]=mt(n),{size:m}=this,[p,g,u,A,F,v]=mt(m);for(let V=p;V<=g;V+=1)for(let d=u;d<=A;d+=1)for(let _=F;_<=v;_+=1){if(this.getPaletteIndexAt(V,d,_)===0)continue;let x=V+s,M=d+e,w=_+o,y=!(x>a||x<i||M>h||M<c||w>f||w<l)&&t.hasVoxelAt(x,M,w);(r===os.PAINT&&!y||r===os.KEEP&&y)&&this.setEmptyAt(V,d,_)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:o}=this;for(let c=0;c<t.length;c+=1){let h=c+yt;if(!this.paletteHasReferences(h))return h}let r=o*2,[n,i,a]=ns(s,r);for(let c=0;c<t.length*ye;c+=1)i[c]=t[c];for(;this._refCounts.length<i.length;)this._refCounts.push(0);for(let c=0,h=s[0]*s[1]*s[2];c<h;c+=1){let l=e.get(c);a.set(c,l)}return this.palette=i,this.indices=a,this._recomputeSizeFieldsForBuffer(n),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:o}=this,r=Math.max(1,o[0],Math.abs(t)*2+1),n=Math.max(1,o[1],Math.abs(s)*2+1),i=Math.max(1,o[2],Math.abs(e)*2+1);this.resizeTo([r,n,i])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new At(t),[e,o,r,n,i,a]=mt(this.size);for(let m=e;m<=o;m+=1)for(let p=r;p<=n;p+=1)for(let g=i;g<=a;g+=1)this.getPaletteIndexAt(m,p,g)!==0&&s.setColorAt(m,p,g,this.getColorAt(m,p,g));let{buffer:c}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:h}=s;this.bitsPerIndex=h;let[,l,f]=ns(t,h,c);this.palette=l,this.indices=f,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(c)}static fromJSON(t){if(typeof t=="string")return At.deserialize(t);let{size:s,palette:e,indices:o}=t,r=new At(s);for(let n=0;n<e.length+yt;n+=1)for(let i=0;i<o.length;i+=1){let a=o[i];if(a===n)if(a>=yt){let c=e[a-yt];r.setColorAtOffset(i,c)}else a===n&&r.setPaletteIndexAtOffset(i,a)}return r}toJSON(t,s){if(!s)return this.serialize();let e=[],o=[];for(let r=0;r<this.palette.length;r+=1){let n=r+yt,i=this.getPaletteColor(n);i>0&&e.push(i)}for(let r=0,n=this.size[0]*this.size[1]*this.size[2];r<n;r+=1)o.push(this.indices.get(r));return{size:[...this.size],palette:e,indices:o}}clone(){return new At(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:o,xShift:r,yShift:n,zShift:i}=this;return(t+r)*o[1]*o[2]+(s+n)*o[2]+(e+i)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);At.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,o=0){oe.clear();let r=t.size,[n,i,a,c,h,l]=mt(r),{size:f}=this,[m,p,g,u,A,F]=mt(f);for(let v=m;v<=p;v+=1)for(let V=g;V<=u;V+=1)for(let d=A;d<=F;d+=1){let _=this.getPaletteIndexAt(v,V,d);if(_!==0){let C=v+s,x=V+e,M=d+o,w=r[0],I=r[1],y=r[2];if(C>i&&(w=C*2),C<n&&(w=Math.max(w,-C*2+1)),x>c&&(I=x*2),x<a&&(I=Math.max(I,-x*2+1)),M>l&&(y=M*2),M<h&&(y=Math.max(y,-M*2+1)),w>rs||I>rs||y>rs)continue;(r[0]<w||r[1]<I||r[2]<y)&&(t.resizeTo([w,I,y]),r=t.size,[n,i,a,c,h,l]=mt(r),oe.clear());let S=oe.get(_);if(S===void 0){let X=this.getColorAt(v,V,d);if(X===Ms)t.setEmptyAt(C,x,M);else{let Y=t.setColorAt(C,x,M,X);oe.set(_,Y)}}else t.getPaletteIndexAt(C,x,M)!==S&&t.setPaletteIndexAt(C,x,M,S)}}}mergeWith(t,s,e,o=!1){oe.clear();let r=oe,n=e[0]-s[0],i=e[1]-s[1],a=e[2]-s[2],c=t.size,[h,l,f,m,p,g]=mt(c),{size:u}=this,[A,F,v,V,d,_]=mt(u);for(let C=A;C<=F;C+=1)for(let x=v;x<=V;x+=1)for(let M=d;M<=_;M+=1){let w=this.getPaletteIndexAt(C,x,M);if(w===0)continue;let I=C+n,y=x+i,S=M+a;if(!!(!(I>l||I<h||y>m||y<f||S>g||S<p)&&t.hasVoxelAt(I,y,S)))if(r.has(w))this.setPaletteIndexAt(C,x,M,r.get(w));else{(o||t.getColorAt(I,y,S)>this.getColorAt(C,x,M))&&this.removeVoxelAt(C,x,M);let B=this.getPaletteIndexAt(C,x,M);r.set(w,B)}}}};function Is(b,t,s,e=Ys){return(b|t<<8|s<<16|e<<24)>>>0}function Ns(){let b=[];for(let o=0;o<256;o++)b[o]=Math.floor(Math.random()*256),b[o+256]=b[o];function t(o){return o*o*o*(o*(o*6-15)+10)}function s(o,r,n){return r+o*(n-r)}function e(o,r,n,i){let a=o&15,c=a<8?r:n,h=a<4?n:a===12||a===14?r:i;return((a&1)===0?c:-c)+((a&2)===0?h:-h)}return{noise:function(o,r,n){let i=Math.floor(o),a=Math.floor(r),c=Math.floor(n),h=i&255,l=a&255,f=c&255;o-=i,r-=a,n-=c;let m=o-1,p=r-1,g=n-1,u=t(o),A=t(r),F=t(n),v=b[h]+l,V=b[v]+f,d=b[v+1]+f,_=b[h+1]+l,C=b[_]+f,x=b[_+1]+f;return s(F,s(A,s(u,e(b[V],o,r,n),e(b[C],m,r,n)),s(u,e(b[d],o,p,n),e(b[x],m,p,n))),s(A,s(u,e(b[V+1],o,r,g),e(b[C+1],m,r,n-1)),s(u,e(b[d+1],o,p,g),e(b[x+1],m,p,g))))}}}var Jt=class{static changeShape(t,s,e){let{faceEquidistant:o}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let r=0,n=t.faceCount;r<n;r++)o.set(r,0);break}}static _circularDeform(t,s,e,o,r){let[n,i,a,c,h,l]=mt(t.voxChunk.size),f=(n+i)/2+.5,m=(a+c)/2+.5,p=(h+l)/2+.5,{vertX:g,vertY:u,vertZ:A,vertRing:F}=s;for(let v=0,V=t.vertCount;v<V;v++){let d=g[v],_=u[v],C=A[v],x=d-f,M=_-m,w=C-p,I=Math.max(Math.abs(x*e),Math.abs(M*o),Math.abs(w*r)),y=Math.sqrt(x*x*e+M*M*o+w*w*r);if(y===0)continue;let S=I/y;g[v]=x*(1-e+e*S)+f,u[v]=M*(1-o+o*S)+m,A[v]=w*(1-r+r*S)+p,F[v]=I}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:o,faceEquidistant:r}=s;for(let n=0,i=t.faceCount;n<i;n++){let a=n*4,c=a+1,h=a+2,l=a+3;r.set(n,o[e[a]]===o[e[c]]&&o[e[a]]===o[e[h]]&&o[e[a]]===o[e[l]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:o,vertLinkCounts:r,vertDeformCount:n,vertDeformDamping:i,vertDeformStrength:a,vertFlattenedX:c,vertFlattenedY:h,vertFlattenedZ:l,vertClampedX:f,vertClampedY:m,vertClampedZ:p,vertX:g,vertY:u,vertZ:A,vertTmpX:F,vertTmpY:v,vertTmpZ:V,vertHasTmp:d}=s;for(let _=0;_<e;_++){let C=!1;for(let x=0,M=t.vertCount;x<M;x++){if(n[x]<=_)continue;let I=r[x];if(I===0)continue;C=!0;let y=g[x],S=u[x],X=A[x],Y=i[x],B=a[x],T=1-(f.get(x)|c.get(x)),O=1-(m.get(x)|h.get(x)),R=1-(p.get(x)|l.get(x)),$=0,L=0,q=0;for(let N=0;N<I;N++){let P=o[x*6+N];$+=g[P],L+=u[P],q+=A[P]}let E=Math.pow(Y,_)*B,k=$/I-y,z=L/I-S,G=q/I-X;F[x]=y+T*k*E,v[x]=S+O*z*E,V[x]=X+R*G*E,d.set(x,T|O|R)}if(C){for(let x=0,M=t.vertCount;x<M;x++)d.get(x)!==0&&(g[x]=F[x],u[x]=v[x],A[x]=V[x]);d.clear()}}}static warpAndScatter(t,s){let e=Ns().noise,{nx:o,px:r,ny:n,py:i,nz:a,pz:c}=t._tile,[h,l,f,m,p,g]=mt(t.voxChunk.size),{vertX:u,vertY:A,vertZ:F,vertWarpAmplitude:v,vertWarpFrequency:V,vertScatter:d,vertFlattenedX:_,vertFlattenedY:C,vertFlattenedZ:x,vertClampedX:M,vertClampedY:w,vertClampedZ:I}=s;h+=.1,f+=.1,p+=.1,l+=.9,m+=.9,g+=.9;for(let y=0,S=t.vertCount;y<S;y++){let X=u[y],Y=A[y],B=F[y];if(o&&X<h||r&&X>l||n&&Y<f||i&&Y>m||a&&B<p||c&&B>g)continue;let T=v[y],O=V[y],R=d[y],$=T>0,L=R>0;if($||L){let q=0,E=0,k=0;$&&(q=e((X+.19)*O,Y*O,B*O)*T,E=e((Y+.17)*O,B*O,X*O)*T,k=e((B+.13)*O,X*O,Y*O)*T),L&&(q+=(Math.random()*2-1)*R,E+=(Math.random()*2-1)*R,k+=(Math.random()*2-1)*R);let z=1-(M.get(y)|_.get(y)),G=1-(w.get(y)|C.get(y)),N=1-(I.get(y)|x.get(y));u[y]=X+z*q,A[y]=Y+G*E,F[y]=B+N*k}}}};var he=class{static linkVertices(t,s,e){let{faceClamped:o,vertNrOfClampedLinks:r,faceVertIndices:n,vertLinkIndices:i,vertLinkCounts:a}=s;if(o.get(e)===1)for(let h=0;h<4;h++){let l=n[e*4+h],f=!1;for(let m=0,p=a[l];m<p;m++)if(i[l*6+m]===l){f=!0;break}f||(i[l*6+a[l]]=l,a[l]++,r[l]++)}else for(let h=0;h<4;h++){let l=n[e*4+h],f=n[e*4+(h+1)%4],m=!1;for(let g=0,u=a[l];g<u;g++)if(i[l*6+g]===f){m=!0;break}m||(i[l*6+a[l]]=f,a[l]++);let p=!1;for(let g=0,u=a[f];g<u;g++)if(i[f*6+g]===l){p=!0;break}p||(i[f*6+a[f]]=l,a[f]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:o,vertFullyClamped:r,vertLinkCounts:n,vertLinkIndices:i}=s;for(let a=0,c=t.vertCount;a<c;a++){let h=o[a],l=n[a];h===l&&(r.set(a,1),n[a]=0)}for(let a=0,c=t.faceCount;a<c;a++)for(let h=0;h<4;h++){let l=e[a*4+h],f=e[a*4+(h+1)%4];if(r.get(l)===1){let m=!1;for(let p=0,g=n[l];p<g;p++)if(i[l*6+p]===f){m=!0;break}m||(i[l*6+n[l]]=f,n[l]++)}if(r.get(f)===1){let m=!1;for(let p=0,g=n[f];p<g;p++)if(i[f*6+p]===l){m=!0;break}m||(i[f*6+n[f]]=l,n[f]++)}}}};var _e=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:o,faceEquidistant:r,faceSmooth:n,faceFlattened:i,faceClamped:a,vertX:c,vertY:h,vertZ:l,faceVertFlatNormalX:f,faceVertFlatNormalY:m,faceVertFlatNormalZ:p,faceVertSmoothNormalX:g,faceVertSmoothNormalY:u,faceVertSmoothNormalZ:A,faceVertBothNormalX:F,faceVertBothNormalY:v,faceVertBothNormalZ:V,faceVertNormalX:d,faceVertNormalY:_,faceVertNormalZ:C,faceMaterials:x,faceVertIndices:M,vertSmoothNormalX:w,vertSmoothNormalY:I,vertSmoothNormalZ:y,vertBothNormalX:S,vertBothNormalY:X,vertBothNormalZ:Y}=s,[B,T,O,R,$,L]=mt(t.voxChunk.size);for(let E=0,k=t.faceCount;E<k;E++){let z=E*4;for(let G=0;G<4;G++){let N=M[z+G];w[N]=0,I[N]=0,y[N]=0,S[N]=0,X[N]=0,Y[N]=0}}for(let E=0,k=t.faceCount;E<k;E++){let z=o[E],G=r.get(E),N=i.get(E),P=a.get(E),K=G|1-(N|P);n.set(E,K);let H=M[E*4],j=M[E*4+1],tt=M[E*4+2],Z=M[E*4+3],ot=(c[H]+c[j]+c[tt]+c[Z])/4,nt=(h[H]+h[j]+h[tt]+h[Z])/4,dt=(l[H]+l[j]+l[tt]+l[Z])/4;for(let ft=0;ft<4;ft++){let et=M[E*4+ft],xt=M[E*4+(ft+3)%4],ut=c[et],wt=c[xt],gt=h[et],zt=h[xt],Tt=l[et],Kt=l[xt],Pt=w[et],jt=I[et],Dt=y[et],Rt=S[et],Lt=X[et],te=Y[et],Yt=wt-ut,Zt=zt-gt,vt=Kt-Tt,at=ot-ut,it=nt-gt,ct=dt-Tt,Ft=Math.sqrt(Yt*Yt+Zt*Zt+vt*vt),Bt=Math.sqrt(at*at+it*it+ct*ct);Ft=Ft===0?1:Ft,Bt=Bt===0?1:Bt;let kt=1/Ft;Yt*=kt,Zt*=kt,vt*=kt;let Ut=1/Bt;at*=Ut,it*=Ut,ct*=Ut;let Vt=Zt*ct-vt*it,Ot=vt*at-Yt*ct,bt=Yt*it-Zt*at,ne=B+.1,ae=T+.9,_t=O+.1,Et=R+.9,Mt=$+.1,St=L+.9;e&&((e.nx&&z===0||e.px&&z===1)&&(gt<_t||gt>Et||Tt<Mt||Tt>St)&&(Ot=0,bt=0),(e.ny&&z===2||e.py&&z===3)&&(ut<ne||ut>ae||Tt<Mt||Tt>St)&&(Vt=0,bt=0),(e.nz&&z===4||e.pz&&z===5)&&(ut<ne||ut>ae||gt<_t||gt>Et)&&(Vt=0,Ot=0));let Ct=Math.sqrt(Vt*Vt+Ot*Ot+bt*bt);Ct=Ct===0?1:Ct;let U=1/Ct;Vt*=U,Ot*=U,bt*=U,f[E*4+ft]=Vt,m[E*4+ft]=Ot,p[E*4+ft]=bt;let Q=Yt*at+Zt*it+vt*ct,W=Math.acos(Q);Pt+=Vt*W,jt+=Ot*W,Dt+=bt*W,Rt+=K*(Vt*W),Lt+=K*(Ot*W),te+=K*(bt*W),w[et]=Pt,I[et]=jt,y[et]=Dt,S[et]=Rt,X[et]=Lt,Y[et]=te}}for(let E=0,k=t.vertCount;E<k;E++){let z=w[E],G=I[E],N=y[E],P=S[E],K=X[E],H=Y[E],j=Math.sqrt(z*z+G*G+N*N),tt=Math.sqrt(P*P+K*K+H*H);j!==0&&(w[E]=z/j,I[E]=G/j,y[E]=N/j),tt!==0&&(S[E]=P/tt,X[E]=K/tt,Y[E]=H/tt)}let q=t.materials.materials;for(let E=0,k=t.faceCount;E<k;E++){let z=n.get(E)===1,G=q[x[E]];for(let N=0;N<4;N++){let P=E*4+N,K=M[E*4+N];switch(g[P]=w[K],u[P]=I[K],A[P]=y[K],F[P]=!z||S[K]===0?f[P]:S[K],v[P]=!z||X[K]===0?m[P]:X[K],V[P]=!z||Y[K]===0?p[P]:Y[K],G.lighting){case ee:d[P]=g[P],_[P]=u[P],C[P]=A[P];break;case se:d[P]=F[P],_[P]=v[P],C[P]=V[P];break;default:d[P]=f[P],_[P]=m[P],C[P]=p[P];break}}}}};var D=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],o=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,r=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,n=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=o,t.y=r,t.z=n}transformPointInline(t,s,e,o){let r=t[o],n=s[o],i=e[o],a=this.m,c=a[12]*r+a[13]*n+a[14]*i+a[15],h=(a[0]*r+a[1]*n+a[2]*i+a[3])/c,l=(a[4]*r+a[5]*n+a[6]*i+a[7])/c,f=(a[8]*r+a[9]*n+a[10]*i+a[11])/c;t[o]=h,s[o]=l,e[o]=f}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,o=s[4]*t.x+s[5]*t.y+s[6]*t.z,r=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=o,t.z=r}transformVectorInline(t,s,e,o){let r=t[o],n=s[o],i=e[o],a=this.m,c=a[0]*r+a[1]*n+a[2]*i,h=a[4]*r+a[5]*n+a[6]*i,l=a[8]*r+a[9]*n+a[10]*i;t[o]=c,s[o]=h,e[o]=l}static identity(t){t=t||new D;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new D;let o=t.m,r=s.m,n=e.m;return n[0]=o[0]*r[0]+o[1]*r[4]+o[2]*r[8]+o[3]*r[12],n[1]=o[0]*r[1]+o[1]*r[5]+o[2]*r[9]+o[3]*r[13],n[2]=o[0]*r[2]+o[1]*r[6]+o[2]*r[10]+o[3]*r[14],n[3]=o[0]*r[3]+o[1]*r[7]+o[2]*r[11]+o[3]*r[15],n[4]=o[4]*r[0]+o[5]*r[4]+o[6]*r[8]+o[7]*r[12],n[5]=o[4]*r[1]+o[5]*r[5]+o[6]*r[9]+o[7]*r[13],n[6]=o[4]*r[2]+o[5]*r[6]+o[6]*r[10]+o[7]*r[14],n[7]=o[4]*r[3]+o[5]*r[7]+o[6]*r[11]+o[7]*r[15],n[8]=o[8]*r[0]+o[9]*r[4]+o[10]*r[8]+o[11]*r[12],n[9]=o[8]*r[1]+o[9]*r[5]+o[10]*r[9]+o[11]*r[13],n[10]=o[8]*r[2]+o[9]*r[6]+o[10]*r[10]+o[11]*r[14],n[11]=o[8]*r[3]+o[9]*r[7]+o[10]*r[11]+o[11]*r[15],n[12]=o[12]*r[0]+o[13]*r[4]+o[14]*r[8]+o[15]*r[12],n[13]=o[12]*r[1]+o[13]*r[5]+o[14]*r[9]+o[15]*r[13],n[14]=o[12]*r[2]+o[13]*r[6]+o[14]*r[10]+o[15]*r[14],n[15]=o[12]*r[3]+o[13]*r[7]+o[14]*r[11]+o[15]*r[15],e}static transpose(t,s){s=s||new D;let e=t.m,o=s.m;return o[0]=e[0],o[1]=e[4],o[2]=e[8],o[3]=e[12],o[4]=e[1],o[5]=e[5],o[6]=e[9],o[7]=e[13],o[8]=e[2],o[9]=e[6],o[10]=e[10],o[11]=e[14],o[12]=e[3],o[13]=e[7],o[14]=e[11],o[15]=e[15],s}static inverse(t,s){s=s||new D;let e=t.m,o=s.m;o[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],o[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],o[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],o[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],o[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],o[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],o[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],o[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],o[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],o[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],o[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],o[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],o[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],o[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],o[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],o[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let r=e[0]*o[0]+e[1]*o[4]+e[2]*o[8]+e[3]*o[12];for(let n=0;n<16;n++)o[n]/=r;return s}static scale(t,s,e,o){o=o||new D;let r=o.m;return r[0]=t,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=s,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=e,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,o}static translate(t,s,e,o){o=o||new D;let r=o.m;return r[0]=1,r[1]=0,r[2]=0,r[3]=t,r[4]=0,r[5]=1,r[6]=0,r[7]=s,r[8]=0,r[9]=0,r[10]=1,r[11]=e,r[12]=0,r[13]=0,r[14]=0,r[15]=1,o}static rotate(t,s,e,o,r){if(!t||!s&&!e&&!o)return D.identity(r);r=r||new D;let n=r.m,i=Math.sqrt(s*s+e*e+o*o);t*=Math.PI/180,s/=i,e/=i,o/=i;let a=Math.cos(t),c=Math.sin(t),h=1-a;return n[0]=s*s*h+a,n[1]=s*e*h-o*c,n[2]=s*o*h+e*c,n[3]=0,n[4]=e*s*h+o*c,n[5]=e*e*h+a,n[6]=e*o*h-s*c,n[7]=0,n[8]=o*s*h-e*c,n[9]=o*e*h+s*c,n[10]=o*o*h+a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,r}static lookAtORIGINAL(t,s,e,o,r,n,i,a,c,h){h=h||new D;let l=h.m,f=t-o,m=s-r,p=e-n,g=Math.sqrt(f*f+m*m+p*p);f/=g,m/=g,p/=g;let u=a*p-c*m,A=c*f-i*p,F=i*m-a*f;g=Math.sqrt(u*u+A*A+F*F),u/=g,A/=g,F/=g;let v=m*F-p*A,V=p*u-f*F,d=f*A-m*u;return g=Math.sqrt(v*v+V*V+d*d),v/=g,V/=g,d/=g,l[0]=u,l[1]=A,l[2]=F,l[3]=-(u*t+A*s+F*e),l[4]=v,l[5]=V,l[6]=d,l[7]=-(v*t+V*s+d*e),l[8]=f,l[9]=m,l[10]=p,l[11]=-(f*t+m*s+p*e),l[12]=0,l[13]=0,l[14]=0,l[15]=1,h}static lookAtTRYOUT(t,s,e,o){o=o||new D;let r=o.m,n=Math.sqrt(t*t+e*e);return r[0]=e/n,r[1]=0,r[2]=-t/n,r[3]=0,r[4]=t*s/n,r[5]=-n,r[6]=e*s/n,r[7]=0,r[8]=t,r[9]=s,r[10]=e,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,o}static lookAt(t,s,e,o){o=o||new D;let r=o.m,n=Math.sqrt(t*t+e*e),i=n?t/n:1,a=n?e/n:0;return r[0]=t,r[1]=-a,r[2]=-e*i,r[3]=0,r[4]=s,r[5]=0,r[6]=n,r[7]=0,r[8]=e,r[9]=i,r[10]=-e*a,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,o}};var me=[null,null,null,null],Me=[null,null,null,null],Ce=[null,null,null,null],Ie=class{static transformVertices(t,s){let{vertX:e,vertY:o,vertZ:r,faceVertNormalX:n,faceVertFlatNormalX:i,faceVertNormalY:a,faceVertFlatNormalY:c,faceVertNormalZ:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:p,faceVertBothNormalX:g,faceVertBothNormalY:u,faceVertBothNormalZ:A}=s,F=t.determineBoundsOffsetAndRescale(t.resize,s),v=new D;v=D.multiply(v,D.translate(t.position.x,t.position.y,t.position.z)),v=D.multiply(v,D.rotate(t.rotation.z,0,0,1)),v=D.multiply(v,D.rotate(t.rotation.y,0,1,0)),v=D.multiply(v,D.rotate(t.rotation.x,1,0,0)),v=D.multiply(v,D.scale(t.scale.x,t.scale.y,t.scale.z)),v=D.multiply(v,D.scale(F.rescale,F.rescale,F.rescale)),v=D.multiply(v,D.translate(F.offset.x,F.offset.y,F.offset.z));let V=D.inverse(v);V=D.transpose(V);for(let d=0,_=t.vertCount;d<_;d++)v.transformPointInline(e,o,r,d);me[0]=n,Me[0]=a,Ce[0]=h,me[1]=i,Me[1]=c,Ce[1]=l,me[2]=f,Me[2]=m,Ce[2]=p,me[3]=g,Me[3]=u,Ce[3]=A;for(let d=0,_=t.faceCount;d<_;d++){let C=d*4;for(let x=0;x<4;x++)for(let M=0,w=me.length;M<w;M++){let I=me[M],y=Me[M],S=Ce[M],X=C+x;V.transformVectorInline(I,y,S,X);let Y=I[X],B=y[X],T=S[X],O=Math.sqrt(Y*Y+B*B+T*T);if(O>0){let R=1/O;I[X]=Y*R,y[X]=B*R,S[X]=T*R}}}}};var Ne=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let u of e)if(u.direction&&!u.normalizedDirection){let A=Math.sqrt(u.direction.x*u.direction.x+u.direction.y*u.direction.y+u.direction.z*u.direction.z);if(u.normalizedDirection={x:u.direction.x,y:u.direction.y,z:u.direction.z},A>0){let F=1/A;u.normalizedDirection.x*=F}}let o=t.materials.materials,{faceMaterials:r,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,faceVertIndices:c,vertX:h,vertY:l,vertZ:f,faceVertLightR:m,faceVertLightG:p,faceVertLightB:g}=s;for(let u=0,A=t.faceCount;u<A;u++){let F=o[r[u]],v=u*4;if(F.lights)for(let V=0;V<4;V++){let d=v+V,_=c[d],C=h[_],x=l[_],M=f[_],w=n[d],I=i[d],y=a[d];m[d]=0,p[d]=0,g[d]=0;for(let S of e){let{color:X,strength:Y,distance:B,normalizedDirection:T,position:O}=S,R=Y,$=0;if(O){let L=O.x-C,q=O.y-x,E=O.z-M;$=Math.sqrt(L*L+q*q+E*E);let k=1/$;R=Y*Math.max(w*L*k+I*q*k+y*E*k,0)}else T&&(R=Y*Math.max(w*T.x+I*T.y+y*T.z,0));O&&B&&(R=R*(1-Math.min($/B,1))),m[d]+=X.r*R,p[d]+=X.g*R,g[d]+=X.b*R}}else for(let V=0;V<4;V++){let d=v+V;m[d]=1,p[d]=1,g[d]=1}}}};var ws=[],as=new Map,is=()=>ws.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},zs=b=>{for(let t of b.partitions)t&&zs(t);b.minx=Number.MAX_VALUE,b.miny=Number.MAX_VALUE,b.minz=Number.MAX_VALUE,b.maxx=-Number.MAX_VALUE,b.maxy=-Number.MAX_VALUE,b.maxz=-Number.MAX_VALUE,b.partitions.fill(null),b.triangles.length=0,ws.push(b)},we=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(_){return _.ao})))return;let{faceMaterials:o,faceVertIndices:r,faceVertAO:n,vertX:i,vertY:a,vertZ:c,faceVertNormalX:h,faceVertNormalY:l,faceVertNormalZ:f}=s,{faceCount:m}=t,p=t.materials.materials,g=this._getAllFaceTriangles(t,s),u=this._trianglesToOctree(g,t,s);t._aoSides&&(u=this._aoSidesToOctree(t,s,u));let A=t.aoSamples,F=this._generateFibonacciSamples(A);as.clear();let v=t.scale.x,V=t.scale.y,d=t.scale.z;for(let _=0;_<m;_++){let C=p[o[_]],x=C.ao||t.ao,M=_*4;if(n[M]=0,n[M+1]=0,n[M+2]=0,n[M+3]=0,!x||x.maxDistance===0||x.strength===0||x.angle<1||C.opacity===0)continue;let w=x.maxDistance*Math.max(v,V,d),I=x.strength,y=Math.cos(x.angle/180*Math.PI);for(let S=0;S<4;S++){let X=M+S,Y=r[X],B=i[Y],T=a[Y],O=c[Y],R=h[X],$=l[X],L=f[X],q=B*16384+T*128+O,E=R*1e7+$*1e5+L*1e3,k=q*1e9+E,z=as.get(k);if(z!==void 0){n[X]=z;continue}let G=r[M+(S+2)%4],N=i[G],P=a[G],K=c[G],H=B*.99999+N*1e-5+R*1e-5,j=T*.99999+P*1e-5+$*1e-5,tt=O*.99999+K*1e-5+L*1e-5,Z=0,ot=0;for(let[dt,ft,et]of F){if(dt*R+ft*$+et*L<=y)continue;let ut=H+dt*w,wt=j+ft*w,gt=tt+et*w,zt=this._distanceToOctree(t,s,u,H,j,tt,dt,ft,et,w,ut,wt,gt);zt?zt=zt/w:zt=1,Z+=zt,ot++}let nt=0;ot!==0&&(Z=Math.max(Math.min(Z/ot,1),0),nt=1-Math.pow(Z,I)),n[X]=nt,as.set(k,nt)}}zs(u)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:o}=t,r=[],n=t.materials.materials;for(let i=0;i<o;i++){if(n[e[i]].opacity<.75)continue;let c=i*2;r.push(c),r.push(c+1)}return r}static _trianglesToOctree(t,s,e){let{faceVertIndices:o,vertX:r,vertY:n,vertZ:i}=e,a=t.length;if(a<=32){let c=is();c.triangles=t;for(let h=0;h<a;h++){let l=t[h],m=(l>>1)*4,p,g,u;(l&1)===0?(p=o[m+2],g=o[m+1],u=o[m+0]):(p=o[m+0],g=o[m+3],u=o[m+2]);let A=r[p],F=n[p],v=i[p],V=r[g],d=n[g],_=i[g],C=r[u],x=n[u],M=i[u];c.minx=Math.min(c.minx,A,V,C),c.miny=Math.min(c.miny,F,d,x),c.minz=Math.min(c.minz,v,_,M),c.maxx=Math.max(c.maxx,A,V,C),c.maxy=Math.max(c.maxy,F,d,x),c.maxz=Math.max(c.maxz,v,_,M)}return c}else{let c=0,h=0,l=0;for(let g=0;g<a;g++){let u=t[g],F=(u>>1)*4,v,V,d;(u&1)===0?(v=o[F+2],V=o[F+1],d=o[F+0]):(v=o[F+0],V=o[F+3],d=o[F+2]);let _=r[v],C=n[v],x=i[v],M=r[V],w=n[V],I=i[V],y=r[d],S=n[d],X=i[d];c+=_+M+y,h+=C+w+S,l+=x+I+X}let f=1/a;c*=f,h*=f,l*=f;let m=Array(8).fill(null);for(let g=0;g<a;g++){let u=t[g],F=(u>>1)*4,v,V,d;(u&1)===0?(v=o[F+2],V=o[F+1],d=o[F+0]):(v=o[F+0],V=o[F+3],d=o[F+2]);let _=r[v],C=n[v],x=i[v],M=r[V],w=n[V],I=i[V],y=r[d],S=n[d],X=i[d],Y=_+M+y<c?0:1,B=C+w+S<h?0:1,T=x+I+X<l?0:1,O=Y+B*2+T*4;m[O]===null?m[O]=[u]:m[O].push(u)}let p=is();for(let g=0;g<8;g++){if(m[g]===null)continue;let u=this._trianglesToOctree(m[g],s,e);p.partitions[g]=u,p.minx=Math.min(p.minx,u.minx),p.miny=Math.min(p.miny,u.miny),p.minz=Math.min(p.minz,u.minz),p.maxx=Math.max(p.maxx,u.maxx),p.maxy=Math.max(p.maxy,u.maxy),p.maxz=Math.max(p.maxz,u.maxz)}return p}}static _distanceToOctree(t,s,e,o,r,n,i,a,c,h,l,f,m){if(this._hitsBox(o,r,n,l,f,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,o,r,n,i,a,c,h);let p=h,g=e.partitions;for(let u=0;u<8;u++){let A=g[u];if(A===null)continue;let F=this._distanceToOctree(t,s,A,o,r,n,i,a,c,h,l,f,m);F&&(p=Math.min(p,F))}return p}static _aoSidesToOctree(t,s,e){let o=t.determineBoundsOffsetAndRescale(Gt,s).bounds,{vertCount:r,faceCount:n}=t,{faceVertIndices:i,faceCulled:a,vertX:c,vertY:h,vertZ:l}=s,f=(p,g,u,A,F,v,V,d,_)=>{let C=n*4;c[r]=p,h[r]=g,l[r]=u,c[r+1]=A,h[r+1]=F,l[r+1]=v,c[r+2]=V,h[r+2]=d,l[r+2]=_,i[C]=r+2,i[C+1]=r+1,i[C+2]=r+0,a.set(n,1);let x=n*2;return n++,r+=3,x},m=[];if(t._aoSides.nx&&m.push(f(o.minX-.05,1e6,-1e6,o.minX-.05,1e6,1e6,o.minX-.05,-1e7,0)),t._aoSides.px&&m.push(f(o.maxX+.05,1e6,1e6,o.maxX+.05,1e6,-1e6,o.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(f(1e6,o.minY-.05,-1e6,-1e6,o.minY-.05,-1e6,0,o.minY-.05,1e7)),t._aoSides.py&&m.push(f(-1e6,o.maxY+.05,-1e6,1e6,o.maxY+.05,-1e6,0,o.maxY+.05,1e7)),t._aoSides.nz&&m.push(f(1e6,1e6,o.minZ-.05,-1e6,1e6,o.minZ-.05,0,-1e7,o.minZ-.05)),t._aoSides.pz&&m.push(f(-1e6,1e6,o.maxZ+.05,1e6,1e6,o.maxZ+.05,0,-1e7,o.maxZ+.05)),m.length>0){let p=this._trianglesToOctree(m,t,s),g=is();g.partitions=[g,p]}return e}static _hitsBox(t,s,e,o,r,n,i){let a=i.minx;if(t<a&&o<a)return!1;let c=i.maxx;if(t>c&&o>c)return!1;let h=i.miny;if(s<h&&r<h)return!1;let l=i.maxy;if(s>l&&r>l)return!1;let f=i.minz;if(e<f&&n<f)return!1;let m=i.maxz;if(e>m&&n>m)return!1;let p=t-(a+c)*.5,g=(c-a)*.5,u=(o-t)*.5,A=Math.abs(u);if(Math.abs(p)>g+A)return!1;let F=(l-h)*.5,v=(r-s)*.5,V=Math.abs(v),d=s-(h+l)*.5;if(Math.abs(d)>F+V)return!1;let _=(m-f)*.5,C=(n-e)*.5,x=Math.abs(C),M=e-(f+m)*.5;return!(Math.abs(M)>_+x||Math.abs(v*M-C*d)>F*x+_*V+Number.EPSILON||Math.abs(C*p-u*M)>_*A+g*x+Number.EPSILON||Math.abs(u*d-v*p)>g*V+F*A+Number.EPSILON)}static _distanceToModel(t,s,e,o,r,n,i,a,c,h){let l=null,{faceVertIndices:f}=s;for(let m=0;m<e.length;m++){let p=e[m],u=(p>>1)*4,A,F,v;(p&1)===0?(A=f[u+2],F=f[u+1],v=f[u+0]):(A=f[u+0],F=f[u+3],v=f[u+2]);let V=this._triangleDistance(t,s,A,F,v,o,r,n,i,a,c);V&&(l?l=Math.min(l,V):V<h&&(l=V))}return l}static _triangleDistance(t,s,e,o,r,n,i,a,c,h,l){let{vertX:f,vertY:m,vertZ:p}=s,g=f[e],u=m[e],A=p[e],F=f[o],v=m[o],V=p[o],d=f[r],_=m[r],C=p[r],x=F-g,M=v-u,w=V-A,I=d-g,y=_-u,S=C-A,X=h*S-l*y,Y=l*I-c*S,B=c*y-h*I,T=x*X+M*Y+w*B;if(T<Number.EPSILON)return null;let O=1/T,R=n-g,$=i-u,L=a-A,q=O*(R*X+$*Y+L*B);if(q<0||q>1)return null;let E=$*w-L*M,k=L*x-R*w,z=R*M-$*x,G=O*(c*E+h*k+l*z);if(G<0||q+G>1)return null;let N=O*(I*E+y*k+S*z);return N<=Number.EPSILON?null:N}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,o=(2-e)*(2*Math.PI);for(let r=1;r<=t;++r){let n=Math.asin(-1+2*r/(t+1)),i=o*r,a=Math.cos(i)*Math.cos(n),c=Math.sin(n),h=Math.sin(i)*Math.cos(n);s.push([a,c,h])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let o=0;o<=t;o++){let r=o*e,n=Math.cos(r),i=Math.sin(r),a=Math.max(1,o*4),c=Math.PI*2/a;for(let h=0;h<a;h++){let l=h*c,f=i*Math.sin(l),m=i*Math.cos(l);s.push({x:f,y:n,z:m}),o<t&&s.push({x:f,y:-n,z:m})}a+=4}return s}};var ze=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:o,faceVertUs:r,faceVertVs:n}=s,i=[],a=[],c=[],h=t.materials.materials;for(let l=0;l<h.length;l++){let f=h[l],m=0,p=1,g=1;if(f.map||f.normalMap||f.roughnessMap||f.metalnessMap||f.emissiveMap){let u=t.voxChunk.size[0],A=t.voxChunk.size[1],F=t.voxChunk.size[2];f.mapTransform.uscale===-1&&(p=1/Math.max(u,A,F)),f.mapTransform.vscale===-1&&(g=1/Math.max(u,A,F)),(f.map&&f.map.cube||f.normalMap&&f.normalMap.cube||f.roughnessMap&&f.roughnessMap.cube||f.metalnessMap&&f.metalnessMap.cube||f.emissiveMap&&f.emissiveMap.cube)&&(m=1,p=p/4,g=g/2)}i.push(m),a.push(p),c.push(g)}for(let l=0,f=t.faceCount;l<f;l++){let m=e[l],p=i[m],g=a[m],u=c[m],A=Vs[o[l]],F=l*4,v=r[F+A.order[0]],V=n[F+A.order[0]],d=r[F+A.order[1]],_=n[F+A.order[1]],C=r[F+A.order[2]],x=n[F+A.order[2]],M=r[F+A.order[3]],w=n[F+A.order[3]],I=F+A.order[0],y=F+A.order[1],S=F+A.order[2],X=F+A.order[3],Y=p*A.uo,B=p*A.vo,T=A.ud*g,O=A.vd*u;r[I]=Y+(v+1e-4)*T,n[I]=B+(V+1e-4)*O,r[y]=Y+(d+1e-4)*T,n[y]=B+(_+.9999)*O,r[S]=Y+(C+.9999)*T,n[S]=B+(x+.9999)*O,r[X]=Y+(M+.9999)*T,n[X]=B+(w+1e-4)*O}}};var Oe=class{static combineColors(t,s){let{vertColorR:e,vertColorG:o,vertColorB:r,vertColorCount:n,faceVertColorR:i,faceVertColorG:a,faceVertColorB:c,faceVertLightR:h,faceVertLightG:l,faceVertLightB:f,faceVertIndices:m,faceMaterials:p,faceVertAO:g}=s,u=t.materials.materials,A=!!t.materials.find(d=>d.colors.length>1&&d.fade),F=Array(u.length).fill(!1);for(let d=0,_=u.length;d<_;d++)A&&u[d].colors.length>1&&u[d].fade&&(F[d]=!0);for(let d=0,_=t.faceCount;d<_;d++)if(F[p[d]])for(let x=0;x<4;x++){let M=0,w=0,I=0,y=0,S=d*4+x,X=m[S],Y=n[X];for(let T=0;T<Y;T++){let O=X*6+T;M+=e[O],w+=o[O],I+=r[O],y++}let B=1/y;i[S]=M*B,a[S]=w*B,c[S]=I*B}let v=t.ao||t.materials.find(function(d){return d.ao}),V=t.lights.length>0;if(v&&V)for(let d=0,_=t.faceCount;d<_;d++){let x=u[p[d]].ao||t.ao,M=x?x.color:null;for(let w=0;w<4;w++){let I=d*4+w,y=i[I],S=a[I],X=c[I],Y=M?M.r:y,B=M?M.g:S,T=M?M.b:X,O=1-g[I];i[I]=y*h[I]*O+Y*(1-O),a[I]=S*l[I]*O+B*(1-O),c[I]=X*f[I]*O+T*(1-O)}}else if(V&&!v)for(let d=0,_=t.faceCount;d<_;d++)for(let C=0;C<4;C++){let x=d*4+C;i[x]=i[x]*h[x],a[x]=a[x]*l[x],c[x]=c[x]*f[x]}else if(!V&&v)for(let d=0,_=t.faceCount;d<_;d++){let x=u[p[d]].ao||t.ao;if(!x)continue;let M=x.color;for(let w=0;w<4;w++){let I=d*4+w,y=i[I],S=a[I],X=c[I],Y=M?M.r:y,B=M?M.g:S,T=M?M.b:X,O=1-g[I];i[I]=O*y+Y*(1-O),a[I]=O*S+B*(1-O),c[I]=O*X+T*(1-O)}}}};var qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},$e={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ge={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},He={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},be=class{static simplify(t,s){if(!t.simplify)return;let e=function(){qe.filled=!1,$e.filled=!1,Ge.filled=!1,He.filled=!1},o=t.materials.materials,{faceCulled:r,faceNameIndices:n,vertX:i,vertY:a,vertZ:c,voxelXZYFaceIndices:h,voxelXYZFaceIndices:l,voxelYZXFaceIndices:f}=s;for(let m=h.length-t.faceCount,p=h.length;m<p;m++){let g=h[m],u=g&(1<<28)-1;if(r.get(u))continue;let A=g/(1<<28),F=A>>16&255,v=A>>8&255,V=A&255;switch(n[u]){case 0:this._mergeFaces(o,t,s,qe,u,F,v,V,i,c,a,0,1,2,3);break;case 1:this._mergeFaces(o,t,s,$e,u,F,v,V,i,c,a,0,1,2,3);break;case 4:this._mergeFaces(o,t,s,Ge,u,F,v,V,i,c,a,0,1,2,3);break;case 5:this._mergeFaces(o,t,s,He,u,F,v,V,i,c,a,0,1,2,3);break}}e();for(let m=l.length-t.faceCount,p=l.length;m<p;m++){let g=l[m],u=g&(1<<28)-1;if(r.get(u))continue;let A=g/(1<<28),F=A>>16&255,v=A>>8&255,V=A&255;switch(n[u]){case 0:this._mergeFaces(o,t,s,qe,u,F,v,V,i,a,c,1,2,3,0);break;case 1:this._mergeFaces(o,t,s,$e,u,F,v,V,i,a,c,3,0,1,2);break;case 2:this._mergeFaces(o,t,s,Ge,u,F,v,V,i,a,c,0,1,2,3);break;case 3:this._mergeFaces(o,t,s,He,u,F,v,V,i,a,c,2,3,0,1);break}}e();for(let m=f.length-t.faceCount,p=f.length;m<p;m++){let g=f[m],u=g&(1<<28)-1;if(r.get(u))continue;let A=g/(1<<28),F=A>>16&255,v=A>>8&255,V=A&255;switch(n[u]){case 2:this._mergeFaces(o,t,s,qe,u,F,v,V,a,c,i,1,2,3,0);break;case 3:this._mergeFaces(o,t,s,$e,u,F,v,V,a,c,i,1,2,3,0);break;case 4:this._mergeFaces(o,t,s,Ge,u,F,v,V,a,c,i,3,0,1,2);break;case 5:this._mergeFaces(o,t,s,He,u,F,v,V,a,c,i,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,o,r,n,i,a,c,h,l,f,m,p,g){let{faceCulled:u,faceMaterials:A,vertX:F,vertY:v,vertZ:V,faceVertIndices:d,faceVertNormalX:_,faceVertNormalY:C,faceVertNormalZ:x,faceVertColorR:M,faceVertColorG:w,faceVertColorB:I,faceVertUs:y,faceVertVs:S,faceVertFlatNormalX:X,faceVertFlatNormalY:Y,faceVertFlatNormalZ:B,faceVertSmoothNormalX:T,faceVertSmoothNormalY:O,faceVertSmoothNormalZ:R,faceVertBothNormalX:$,faceVertBothNormalY:L,faceVertBothNormalZ:q}=e,E=A[r],k=t[E];if(o.filled&&o.lastVoxelAxis1===n&&o.lastVoxelAxis2===i&&(k.simplify===!0||k.simplify===null&&s.simplify===!0)&&u.get(r)===0){if(o.maxVoxelAxis3!==a-1){o.filled=!0,o.lastVoxelAxis1=n,o.lastVoxelAxis2=i,o.maxVoxelAxis3=a,o.lastFaceIndex=r;return}let z=r*4,G=o.lastFaceIndex,N=G*4;if(A[G]!==E)return;let P=_[z],K=C[z],H=x[z],j=_[z+1],tt=C[z+1],Z=x[z+1],ot=_[z+2],nt=C[z+2],dt=x[z+2],ft=_[z+3],et=C[z+3],xt=x[z+3],ut=_[N],wt=C[N],gt=x[N],zt=_[N+1],Tt=C[N+1],Kt=x[N+1],Pt=_[N+2],jt=C[N+2],Dt=x[N+2],Rt=_[N+3],Lt=C[N+3],te=x[N+3];if(!(this._normalEquals(P,K,H,ut,wt,gt)&&this._normalEquals(j,tt,Z,zt,Tt,Kt)&&this._normalEquals(ot,nt,dt,Pt,jt,Dt)&&this._normalEquals(ft,et,xt,Rt,Lt,te)))return;let Zt=M[z],vt=w[z],at=I[z],it=M[z+1],ct=w[z+1],Ft=I[z+1],Bt=M[z+2],kt=w[z+2],Ut=I[z+2],Vt=M[z+3],Ot=w[z+3],bt=I[z+3],ne=M[N],ae=w[N],_t=I[N],Et=M[N+1],Mt=w[N+1],St=I[N+1],Ct=M[N+2],U=w[N+2],Q=I[N+2],W=M[N+3],st=w[N+3],ht=I[N+3];if(!(Zt===ne&&vt===ae&&at===_t&&it===Et&&ct===Mt&&Ft===St&&Bt===Ct&&kt===U&&Ut===Q&&Vt===W&&Ot===st&&bt===ht))return;let pe=d[z+f],$t=d[z+m],Qt=d[z+p],Ye=d[z+g],Ze=F[pe],ie=v[pe],ls=V[pe],Be=F[$t],Pe=v[$t],Re=V[$t],ce=d[N+f],We=d[N+m],Ke=d[N+p],Qe=d[N+g],fs=F[ce],hs=v[ce],ms=V[ce],bs=Math.sqrt((Be-Ze)*(Be-Ze)+(Pe-ie)*(Pe-ie)+(Re-ls)*(Re-ls)),Es=Math.sqrt((Be-fs)*(Be-fs)+(Pe-hs)*(Pe-hs)+(Re-ms)*(Re-ms)),Xt=bs/Es;return Math.abs(c[We]-(1-Xt)*c[$t]-Xt*c[ce])<=1e-4&&Math.abs(h[We]-(1-Xt)*h[$t]-Xt*h[ce])<=1e-4&&Math.abs(l[We]-(1-Xt)*l[$t]-Xt*l[ce])<=1e-4&&Math.abs(c[Ke]-(1-Xt)*c[Qt]-Xt*c[Qe])<=1e-4&&Math.abs(h[Ke]-(1-Xt)*h[Qt]-Xt*h[Qe])<=1e-4&&Math.abs(l[Ke]-(1-Xt)*l[Qt]-Xt*l[Qe])<=1e-4?(d[N+m]=$t,d[N+p]=Qt,y[N+m]=y[z+m],S[N+m]=S[z+m],y[N+p]=y[z+p],S[N+p]=S[z+p],X[N+m]=X[z+m],Y[N+m]=Y[z+m],B[N+m]=B[z+m],X[N+p]=X[z+p],Y[N+p]=Y[z+p],B[N+p]=B[z+p],T[N+m]=T[z+m],O[N+m]=O[z+m],R[N+m]=R[z+m],T[N+p]=T[z+p],O[N+p]=O[z+p],R[N+p]=R[z+p],$[N+m]=$[z+m],L[N+m]=L[z+m],q[N+m]=q[z+m],$[N+p]=$[z+p],L[N+p]=L[z+p],q[N+p]=q[z+p],o.maxVoxelAxis3=a,u.set(r,1),s.nonCulledFaceCount--,!0):void 0}return o.filled=!0,o.lastVoxelAxis1=n,o.lastVoxelAxis2=i,o.maxVoxelAxis3=a,o.lastFaceIndex=r,!1}static _normalEquals(t,s,e,o,r,n){return Math.abs(t-o)<.01&&Math.abs(s-r)<.01&&Math.abs(e-n)<.01}};var Ee=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:o,faceVertIndices:r,vertX:n,vertY:i,vertZ:a,faceVertFlatNormalX:c,faceVertFlatNormalY:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:p,faceVertBothNormalX:g,faceVertBothNormalY:u,faceVertBothNormalZ:A,faceVertUs:F,faceVertVs:v,faceVertColorR:V,faceVertColorG:d,faceVertColorB:_,faceVertNormalX:C,faceVertNormalY:x,faceVertNormalZ:M}=s;for(let w=0,I=t.faceCount;w<I;w++){if(o.get(w)===1)continue;let y=w*4,S=r[y],X=r[y+1],Y=r[y+2],B=r[y+3],T=n[S],O=i[S],R=a[S],$=n[X],L=i[X],q=a[X],E=n[Y],k=i[Y],z=a[Y],G=n[B],N=i[B],P=a[B],K=(T+E)/2,H=(O+k)/2,j=(R+z)/2,tt=($-K)*($-K)+(L-H)*(L-H)+(q-j)*(q-j),Z=(G-K)*(G-K)+(N-H)*(N-H)+(P-j)*(P-j),ot=($+G)/2,nt=(L+N)/2,dt=(q+P)/2,ft=(T-ot)*(T-ot)+(O-nt)*(O-nt)+(R-dt)*(R-dt),et=(E-ot)*(E-ot)+(k-nt)*(k-nt)+(z-dt)*(z-dt);if(tt<e||Z<e)this._shiftFaceVertsAtOffset(y,r),this._shiftFaceVertsAtOffset(y,C),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,_);else if(!(ft<e||et<e)){let xt=this._getVertexSumInline(T,O,R);for(;this._getVertexSumInline($,L,q)<xt||this._getVertexSumInline(E,k,z)<xt||this._getVertexSumInline(G,N,P)<xt;){this._shiftFaceVertsAtOffset(y,r),this._shiftFaceVertsAtOffset(y,C),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,_);let ut=T,wt=O,gt=R;T=$,O=L,R=q,$=E,L=k,q=z,E=G,k=N,z=P,G=ut,N=wt,P=gt,xt=this._getVertexSumInline(T,O,R)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var cs=(b,t)=>b-t,Se=class{set origin(t){this._origin=J.parse(t)}get origin(){return J.toString(this._origin)}set flatten(t){this._flatten=J.parse(t)}get flatten(){return J.toString(this._flatten)}set clamp(t){this._clamp=J.parse(t)}get clamp(){return J.toString(this._clamp)}set skip(t){this._skip=J.parse(t)}get skip(){return J.toString(this._skip)}set tile(t){this._tile=J.parse(t||" "),this._tile.x&&(this._tile=J.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=J.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=J.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return J.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=J.parse(t)}get aoSides(){return J.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new Fe,this.voxChunk=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=J.parse("x y z"),this._flatten=J.parse(""),this._clamp=J.parse(""),this._skip=J.parse(""),this._tile=J.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=J.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForWrite(){this.lights.some(t=>t.size)&&(this.materials.materials[0].colors[0].count=1)}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:o,tmpVoxelYZXFaceIndices:r}=t,{voxChunk:n}=this;this.prepareForWrite();let i=Jt.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let{maxFaces:a}=t,c=i>0,[h,l,f,m,p,g]=mt(n.size),u=this.materials.materials,A=pt(n.size[0]),F=pt(n.size[1]),v=pt(n.size[2]);for(let V=h;V<=l;V++)for(let d=f;d<=m;d++)for(let _=p;_<=g;_++){let C=n.getPaletteIndexAt(V,d,_);if(C===0)continue;let x=V+A,M=d+F,w=_+v,I=x<<16,y=w<<8,S=(I|y|M)*(1<<28),X=(I|M<<8|w)*(1<<28),Y=(M<<16|y|x)*(1<<28);for(let B=0,T=vs.length;B<T;B++){let O=As[B],R,$=V+O[0],L=d+O[1],q=_+O[2];if($<h||$>l||L<f||L>m||q<p||q>g?R=0:R=n.getPaletteIndexAt($,L,q),this._createFace(n,t,u,V,d,_,A,F,v,C,R,B,c,s)){let k=this.faceCount-1;if(this.faceCount>=a)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[k]=S+k,o[k]=X+k,r[k]=Y+k}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=o.slice(0,this.faceCount),t.voxelYZXFaceIndices=r.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(cs),t.voxelXYZFaceIndices.sort(cs),t.voxelYZXFaceIndices.sort(cs),he.fixClampedLinks(this,t),Jt.changeShape(this,t,this._shape),Jt.deform(this,t,i),Jt.warpAndScatter(this,t),_e.calculateNormals(this,t),Ie.transformVertices(this,t),Ne.calculateLights(this,t),we.calculateAmbientOcclusion(this,t),Oe.combineColors(this,t),ze.assignUVs(this,t),be.simplify(this,t),Ee.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},o,r,n,i,a,c,{vertX:h,vertY:l,vertZ:f}=s;if(t===xe||t===Gt){o=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=Number.NEGATIVE_INFINITY;for(let u=0,A=this.vertCount;u<A;u++){let F=h[u],v=l[u],V=f[u];F<o&&(o=F),v<r&&(r=v),V<n&&(n=V),F>i&&(i=F),v>a&&(a=v),V>c&&(c=V)}if(t===Gt){let[u,A,F,v,V,d]=mt(this.voxChunk.size),_=(A-u+1)/(A-u),C=(v-F+1)/(v-F),x=(d-V+1)/(d-V);e.rescale=Math.min(_,C,x)}}t||(o=this.bounds.minX,i=this.bounds.maxX+1,r=this.bounds.minY,a=this.bounds.maxY+1,n=this.bounds.minZ,c=this.bounds.maxZ+1);let m=-(o+i)/2,p=-(r+a)/2,g=-(n+c)/2;return this._origin.nx&&(m=-o),this._origin.px&&(m=-i),this._origin.ny&&(p=-r),this._origin.py&&(p=-a),this._origin.nz&&(g=-n),this._origin.pz&&(g=-c),e.bounds={minX:o,minY:r,minZ:n,maxX:i,maxY:a,maxZ:c},e.offset={x:m,y:p,z:g},e}_createFace(t,s,e,o,r,n,i,a,c,h,l,f,m,p){let g=t.colorForPaletteIndex(h),u=(g&4278190080)>>24,A=e[u];if(A.opacity===0)return!1;if(l!==0){let H=(t.colorForPaletteIndex(l)&4278190080)>>24;if(!e[H].isTransparent&&!A.wireframe)return!1;if(!(!A.isTransparent&&!A.wireframe)){if(!(A.isTransparent&&!A.wireframe&&l!==0&&e[(t.colorForPaletteIndex(l)&4278190080)>>24].wireframe))return!1}}let F=this._isFacePlanar(A,o,r,n,f,A._flatten,this._flatten),v=this._isFacePlanar(A,o,r,n,f,A._clamp,this._clamp);if(this._isFacePlanar(A,o,r,n,f,A._skip,this._skip))return!1;let{faceVertIndices:d,faceVertColorR:_,faceVertColorG:C,faceVertColorB:x,faceFlattened:M,faceClamped:w,faceSmooth:I,faceCulled:y,faceMaterials:S,faceNameIndices:X,faceVertUs:Y,faceVertVs:B}=s,{faceCount:T}=this,O=T*4,R=(g&255)/255,$=((g&65280)>>8)/255,L=((g&16711680)>>16)/255;d[O]=this._createVertex(s,A,o,r,n,R,$,L,i,a,c,f,0,F,v,p),d[O+1]=this._createVertex(s,A,o,r,n,R,$,L,i,a,c,f,1,F,v,p),d[O+2]=this._createVertex(s,A,o,r,n,R,$,L,i,a,c,f,2,F,v,p),d[O+3]=this._createVertex(s,A,o,r,n,R,$,L,i,a,c,f,3,F,v,p);for(let H=0;H<4;H++)_[O+H]=R,C[O+H]=$,x[O+H]=L;M.set(T,F?1:0),w.set(T,v?1:0),I.set(T,0),y.set(T,0),S[T]=u,X[T]=f;let q=ys[f],E=q[0],k=q[1],z=o+i,G=r+a,N=n+c,P=z*E[0]+G*E[1]+N*E[2],K=z*k[0]+G*k[1]+N*k[2];for(let H=0;H<4;H++)Y[O+H]=P,B[O+H]=K;return m&&he.linkVertices(this,s,T),this.faceCount++,!0}_createVertex(t,s,e,o,r,n,i,a,c,h,l,f,m,p,g,u){let A=Fs[f][m],F=e+A[0],v=o+A[1],V=r+A[2],d=F+c<<20|v+h<<10|V+l,{_clamp:_,_flatten:C}=this,{vertDeformCount:x,vertDeformDamping:M,vertDeformStrength:w,vertWarpAmplitude:I,vertWarpFrequency:y,vertScatter:S,vertX:X,vertY:Y,vertZ:B,vertLinkCounts:T,vertFullyClamped:O,vertRing:R,vertClampedX:$,vertClampedY:L,vertClampedZ:q,vertColorR:E,vertColorG:k,vertColorB:z,vertColorCount:G,vertFlattenedX:N,vertFlattenedY:P,vertFlattenedZ:K}=t,{deform:H,warp:j,scatter:tt}=s,Z;if(u.has(d)?(Z=u.get(d),H?x[Z]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,Z)&&(w[Z]=H.strength,M[Z]=H.damping,x[Z]=H.count):(x[Z]=0,M[Z]=0,w[Z]=0),j?I[Z]!==0&&(j.amplitude<I[Z]||j.amplitude===I[Z]&&j.frequency>y[Z])&&(I[Z]=j.amplitude,y[Z]=j.frequency):(I[Z]=0,y[Z]=0),tt?S[Z]!==0&&Math.abs(tt)<Math.abs(S[Z])&&(S[Z]=tt):S[Z]=0):(Z=this.vertCount,u.set(d,Z),X[Z]=F,Y[Z]=v,B[Z]=V,H?(M[Z]=H.damping,x[Z]=H.count,w[Z]=H.strength,T[Z]=0,O.set(Z,0)):x[Z]=0,j?(I[Z]=j.amplitude,y[Z]=j.frequency):I[Z]=0,tt?S[Z]=tt:S[Z]=0,G[Z]=0,R[Z]=0,$.set(Z,0),L.set(Z,0),q.set(Z,0),N.set(Z,0),P.set(Z,0),K.set(Z,0)),this._setIsVertexPlanar(s,F,v,V,s._flatten,C,N,P,K,Z),this._setIsVertexPlanar(s,F,v,V,s._clamp,_,$,L,q,Z),s.fade){let ot=G[Z],nt=Z*6;E[nt+ot]=n,k[nt+ot]=i,z[nt+ot]=a,G[Z]++}return this.vertCount++,Z}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:o,vertDeformCount:r}=t,n=e[s],i=r[s],a=o[s];return n===1?a*(i+1):a*(1-Math.pow(n,i+1))/(1-n)}_isFacePlanar(t,s,e,o,r,n,i){let a=n,c=t.bounds;if(a||(a=i,c=this.bounds),!a)return!1;switch(r){case 0:return a.x||a.nx&&s===c.minX;case 1:return a.x||a.px&&s===c.maxX;case 2:return a.y||a.ny&&e===c.minY;case 3:return a.y||a.py&&e===c.maxY;case 4:return a.z||a.nz&&o===c.minZ;case 5:return a.z||a.pz&&o===c.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,o,r,n,i,a,c,h){let l=r,f=t.bounds;l||(l=n,f=this.bounds),l?(i.set(h,l.x||l.nx&&s<f.minX+.5||l.px&&s>f.maxX+.5?1:i.get(h)|0),a.set(h,l.y||l.ny&&e<f.minY+.5||l.py&&e>f.maxY+.5?1:a.get(h)|0),c.set(h,l.z||l.nz&&o<f.minZ+.5||l.pz&&o>f.maxZ+.5?1:c.get(h)|0)):(i.set(h,i.get(h)|0),a.set(h,a.get(h)|0),c.set(h,c.get(h)|0))}};var Xe=class{constructor(t,s,e,o,r,n,i){this.color=t,this.strength=s,this.direction=e,this.position=o,this.distance=r,this.size=n,this.detail=i}};var Os={linecontinuation:/_\\s*[\\r\\n]/gm,modelparts:new RegExp(/\\s*(\\/\\/(.*?)\\r?\\n)/.source+"|"+/\\s*(texture|light|model|material|voxels)\\s+/.source+"|"+/\\s*([^=,\\r\\n]+=\\s*data:image.*?base64,.*$)\\s*/.source+"|"+/\\s*([^=,\\r\\n]+=[^\\r\\n=;,/]+)\\s*/.source+"|"+/\\s*([A-Za-z ()\\d -]+)\\s*/.source,"gm")},Bs=["size","materials","textures","lights","voxels"],Ps=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Rs=["color"],Ls=["direction","position","distance","size","detail"],ks=["id","image"],Us=["cube"],qs=["colors"],$s=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],ue=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,o=null;return Array.from(t.replaceAll(Os.linecontinuation," ").matchAll(Os.modelparts),n=>n[0].trim()).filter(n=>n).forEach(function(n){if(!n.startsWith("//"))if(n==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(n==="light")e={color:"#FFF"},s.lights.push(e);else if(n==="model")e=s;else if(n==="material")e={},s.materials.push(e);else if(n==="voxels")e=s,o="";else if(o!==null)o+=n.replace(/\\s/g,"");else{let i=n.indexOf("=");if(i===-1)throw new Error(`SyntaxError: Invalid definition \'${n}\'.`);let a=n.substring(0,i).trim().toLowerCase(),c=n.substring(i+1).trim();e[a]=c}},this),s.voxels=o,s}static _createModel(t){let s=new Se;s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===xe?s.resize=xe:t.resize===Gt?s.resize=Gt:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=Gt),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(e=>e.size)&&s.materials.createMaterial(Le,Ue,1,0,!1,!1,1,0,!1,1,!1,It,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0).addColorHEX("#FFFFFF");for(let e of t.lights)this._createLight(s,e);for(let e of t.textures)this._createTexture(s,e);for(let e of t.materials)this._createMaterial(s,e);return s.colors={},s.materials.forEach(function(e){e.colors.forEach(function(o){s.colors[o.id]=o})}),this._resolveShellColors(s.shell,s),s.materials.forEach(function(e){this._resolveShellColors(e.shell,s)},this),this._createVoxels(s,t.voxels),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=rt.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new Xe(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s){let e=Ue;s.lighting===de&&(e=de),s.lighting===ee&&(e=ee),s.lighting===se&&(e=se),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let o=null;t.simplify&&s.simplify==="false"&&(o=!1),!t.simplify&&s.simplify==="true"&&(o=!0);let r=t.materials.createMaterial(s.type||le,e,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,o,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0));s.deform&&r.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&r.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(r.scatter=parseFloat(s.scatter)),r.flatten=s.flatten,r.clamp=s.clamp,r.skip=s.skip,r.setAo(this._parseAo(s.ao)),r.shell=this._parseShell(s.shell),r.lights=s.lights!=="false",r.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,r.data);let n=/\\s*\\(\\s*(\\d+)\\s*\\)\\s*/g,i=/([A-Z][a-z]*)\\s*(\\(\\d+\\))?[:]\\s*(#[a-fA-F0-9]*)\\s*/g;s.colors=s.colors.replace(n,"($1)"),s.colors=s.colors.replace(i,"$1$2:$3 "),s.colors.split(" ").filter(c=>c).forEach(function(c){let h=c.split(":")[0],l=null;h.includes("(")&&(l=Number(h.split("(")[1].replace(")","")),h=h.split("(")[0]);let f=c.split(":")[1];if(!r.colors[h]){if(f=r.addColor(rt.fromHex(f)),!/^[A-Z][a-z]*$/.test(h))throw new Error(`SyntaxError: Invalid color ID \'${h}\'`);f.id=h,f.exId=l}},this)}static _createVoxels(t,s){let e=t.colors,o=null,r=[];if(s.matchAll)r=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let _=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,C;for(;(C=_.exec(s))!==null;)r.push(C);r=r[Symbol.iterator]()}let n=this._unpackRle(r),i=t.size.x*t.size.y*t.size.z,a=0,c=new Set;for(let _=0;_<n.length;_++)if(n[_][0]!=="-"){let C=e[n[_][0]].id;c.has(C)||c.add(C)}let h=1;c.size>=2&&(h=2),c.size>=4&&(h=4),c.size>=16&&(h=8);let l=t.voxChunk=new At([t.size.x,t.size.y,t.size.z],h);for(let _=0;_<n.length;_++)a+=n[_][1];if(a!==i)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${i} voxels) but the voxel matrix contains ${a} voxels.`);let f={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new re;let m=null,p=null,g=t.bounds,u=t.size,A=pt(u.x),F=pt(u.y),v=pt(u.z),V=new Map,d=t.materials.materials;for(let _=0,C=d.length;_<C;_++){let x=d[_];for(let M of x.colors)V.set(M.id,_)}for(let _=0,C=n.length;_<C;_++){let x=null,M=n[_],w=M[0];w!=="-"&&(x=e[w],x||(o===null&&(o=t.materials.createMaterial(le,Ue,.5,0,!1,1,!1)),x=rt.fromHex("#FF00FF"),x.id=w,o.addColor(x),e[w]=x,m=t.materials.materials.indexOf(o),V.set(x.id,m)),m=V.get(x.id),p=d[m].bounds);let I=M[1];x?this._setVoxels(g,p,m,A,F,v,x,I,f,l):this._advanceContext(I,A,F,v,f)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=rt.fromHex(t.split(" ")[0]),o=Math.abs(parseFloat(t.split(" ")[1]||1)),r=parseFloat(t.split(" ")[2]||1),n=parseFloat(t.split(" ")[3]||70);n=Math.max(0,Math.min(90,Math.round(n))),s={color:e,maxDistance:o,strength:r,angle:n}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let o=t.split(/\\s+/);if(o.length<2||o.length%2!==0)e=!0;else for(let r=0;r<o.length/2;r++){let n=o[r*2+0],i=o[r*2+1];if(!/^[A-Z][a-z]*$/.test(n)||!/^([-+]?[0-9]*\\.?[0-9]+)*$/.test(i)){e=!0;break}else s.push({colorId:o[r*2],distance:o[r*2+1]})}}if(e)throw new Error(`SyntaxError: shell \'${t}\' must be \'none\' or one or more color ID\'s and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(o,r){return o.distance-r.distance})),s}static _resolveShellColors(t,s){!t||t.length===0||t.forEach(function(e){if(e.color=s.colors[e.colorId],!e.color)throw new Error(`SyntaxError: shell color ID \'${e.colorId}\' is not a known color`)},this)}static _parseVertexData(t,s){if(t){let e=[],o=t.split(/\\s+/),r=null;for(let i=0;i<o.length;i++){let a=o[i];if(isNaN(a))r={name:a,values:[]},e.push(r);else if(r)r.values.push(parseFloat(a));else break}let n=e.length===0;for(let i=0;i<e.length;i++)n=n||e[i].values.length===0||e[i].values.length>=4;if(n)throw new Error(`SyntaxError: The data property \'${e.data}\' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let o=0;o<t.length;o++)e=e||t[o].name!==s[o].name,e=e||t[o].values.length!==s[o].values.length}}catch(o){e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,o){let r=this._parseXYZFloat(t,s,e,o);return{x:Math.trunc(r.x),y:Math.trunc(r.y),z:Math.trunc(r.z)}}static _parseXYZFloat(t,s,e,o){if(!s&&e&&(s=e),!s)return null;let r=s.split(/[\\s/]+/);if(r.length===1&&o&&(r.push(r[0]),r.push(r[0])),r.length!==3)throw new Error(`SyntaxError: \'${t}\' must have three values.`);if(r={x:parseFloat(r[0]),y:parseFloat(r[1]),z:parseFloat(r[2])},Number.isNaN(r.x)||Number.isNaN(r.y)||Number.isNaN(r.z))throw new Error(`SyntaxError: Invalid value \'${s}\' for ${t}\'.`);return r}static _unpackRle(t){let s=[],e=1,o=t.next();for(;!o.done;){let r=o.value[0];if(r[0]>="0"&&r[0]<="9")e=parseInt(r,10);else if(r==="("){let n=this._unpackRle(t);for(let i=0;i<e;i++)Array.prototype.push.apply(s,n);e=1}else{if(r===")")return s;r.length>1&&r[0]>="A"&&r[0]<="Z"&&r[1]===r[0]?(e>1?(s.push([r[0],e]),s.push([r[0],r.length-1])):s.push([r[0],r.length]),e=1):r.length>1&&r[0]==="-"&&r[1]==="-"?(e>1?(s.push(["-",e]),s.push(["-",r.length-1])):s.push(["-",r.length]),e=1):(s.push([r,e]),e=1)}o=t.next()}return s}static _setVoxels(t,s,e,o,r,n,i,a,c,h){let{x:l,y:f,z:m,maxx:p,maxy:g,minx:u,miny:A}=c;if(l-=o,f-=r,m-=n,u-=o,A-=r,p-=o,g-=r,i){let F=Math.floor(i.r*255),v=Math.floor(i.g*255),V=Math.floor(i.b*255),d=Is(F,v,V,e);for(;a-- >0;)t.set(l,f,m),s.set(l,f,m),h.setColorAt(l,f,m,d),l++,l>p&&(l=u,f++),f>g&&(f=A,m++)}else for(;a-- >0;)l++,l>p&&(l=u,f++),f>g&&(f=A,m++);c.x=l+o,c.y=f+r,c.z=m+n}static _advanceContext(t,s,e,o,r){let{x:n,y:i,z:a,maxx:c,maxy:h,minx:l,miny:f}=r;for(n-=s,i-=e,a-=o,l-=s,f-=e,c-=s,h-=e;t-- >0;)n++,n>c&&(n=l,i++),i>h&&(i=f,a++);r.x=n+s,r.y=i+e,r.z=a+o}static _validateModel(t){this._validateProperties(t,Bs,Ps,"model");for(let s of t.lights)this._validateLight(s);for(let s of t.textures)this._validateTexture(s);for(let s of t.materials)this._validateMaterial(s)}static _validateLight(t){if(this._validateProperties(t,Rs,Ls,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,ks,Us,"texture")}static _validateMaterial(t){this._validateProperties(t,qs,$s,"material")}static _validateProperties(t,s,e,o){for(let r of s)if(!Object.hasOwn(t,r))throw new Error("SyntaxError: "+o+\' is missing mandatory property "\'+r+\'".\');for(let r in t)if(!s.includes(r)&&!e.includes(r))throw new Error("SyntaxError: "+o+\' has unrecognized property "\'+r+\'".\')}};var Nt=new Map,Wt=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,o={materials:[],groups:[],indices:new Uint32Array(e*4*6),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3),normals:new Float32Array(e*4*3),colors:new Float32Array(e*4*3),uvs:new Float32Array(e*4*2),data:null};return t.materials.baseMaterials.forEach(function(r){r.index=o.materials.length,o.materials.push(Wt._generateMaterial(r,t))},this),Nt.clear(),Wt._generateAll(t,o,s),o}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===Ht?Ht:It};return t.type!==ke&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e){let o=t.materials.materials,{faceMaterials:r,faceCulled:n}=e;t.materials.baseMaterials.forEach(function(a){let c=s.indicesIndex;for(let l=0,f=t.faceCount;l<f;l++)o[r[l]]._baseMaterial===a&&n.get(l)===0&&Wt._generateFace(t,e,l,s);let h=s.indicesIndex;s.groups.push({start:c,count:h-c,materialIndex:a.index})},this);let i=s.maxIndex+1;s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,i*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,i*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,i*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,i*2)}static _generateFace(t,s,e,o){let{faceVertIndices:r,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,vertX:c,vertY:h,vertZ:l,faceVertColorR:f,faceVertColorG:m,faceVertColorB:p,faceVertUs:g,faceVertVs:u,faceMaterials:A,faceSmooth:F}=s,V=t.materials.materials[A[e]],d=r[e*4],_=r[e*4+1],C=r[e*4+2],x=r[e*4+3],M=c[d],w=h[d],I=l[d],y=c[_],S=h[_],X=l[_],Y=c[C],B=h[C],T=l[C],O=c[x],R=h[x],$=l[x],L=n[e*4],q=i[e*4],E=a[e*4],k=n[e*4+1],z=i[e*4+1],G=a[e*4+1],N=n[e*4+2],P=i[e*4+2],K=a[e*4+2],H=n[e*4+3],j=i[e*4+3],tt=a[e*4+3],Z=f[e*4],ot=m[e*4],nt=p[e*4],dt=f[e*4+1],ft=m[e*4+1],et=p[e*4+1],xt=f[e*4+2],ut=m[e*4+2],wt=p[e*4+2],gt=f[e*4+3],zt=m[e*4+3],Tt=p[e*4+3],Kt=g[e*4],Pt=u[e*4],jt=g[e*4+1],Dt=u[e*4+1],Rt=g[e*4+2],Lt=u[e*4+2],te=g[e*4+3],Yt=u[e*4+3];if(V.side===fe){let U,Q,W;U=M,Q=w,W=I,M=Y,w=B,I=T,Y=U,B=Q,T=W,U=L,Q=q,W=E,L=N,q=P,E=K,N=U,P=Q,K=W,U=Z,Q=ot,W=nt,Z=xt,ot=ut,nt=wt,xt=U,ut=Q,wt=W,U=Kt,Q=Pt,Kt=Rt,Pt=Lt,Rt=U,Lt=Q}let Zt=F.get(e)===1;if(!(V.lighting===ee||V.lighting===se&&Zt)){let U=N+k+L,Q=P+z+q,W=K+G+E,st=L+H+N,ht=q+j+P,qt=E+tt+K,pe=Math.sqrt(U*U+Q*Q+W*W),$t=Math.sqrt(st*st+ht*ht+qt*qt),Qt=1/pe,Ye=1/$t;if(U*=Qt,Q*=Qt,W*=Qt,st*=Ye,ht*=Ye,qt*=Ye,V.lighting===de){let Ze=Math.sqrt(U*U+Q*Q+W*W)+Math.sqrt(st*st+ht*ht+qt*qt),ie=1/Ze;U=st=(U+st)*ie,Q=ht=(Q+ht)*ie,W=qt=(W+qt)*ie}L=U,q=Q,E=W,k=U,z=Q,G=W,N=U,P=Q,K=W,H=st,j=ht,tt=qt}let vt=o.indices,at=o.positions,it=o.normals,ct=o.colors,Ft=o.uvs,Bt=M*3+w*61673+I*87119+L*2766691+q*73091+E*5040949+Z*8636137+ot*2360719+nt*4739729+Math.round(Kt*1e3)*719959+Math.round(Pt*1e3)*172741,kt=y*3+S*61673+X*87119+k*2766691+z*73091+G*5040949+dt*8636137+ft*2360719+et*4739729+Math.round(jt*1e3)*719959+Math.round(Dt*1e3)*172741,Ut=Y*3+B*61673+T*87119+N*2766691+P*73091+K*5040949+xt*8636137+ut*2360719+wt*4739729+Math.round(Rt*1e3)*719959+Math.round(Lt*1e3)*172741,Vt=O*3+R*61673+$*87119+H*2766691+j*73091+tt*5040949+gt*8636137+zt*2360719+Tt*4739729+Math.round(te*1e3)*719959+Math.round(Yt*1e3)*172741,Ot=Nt.has(Bt),bt=Nt.has(kt),ne=Nt.has(Ut),ae=Nt.has(Vt),_t,Et,Mt,St;if(Ot)_t=Nt.get(Bt);else{_t=o.maxIndex+1;let U=_t*3,Q=U+1,W=U+2,st=_t*2,ht=st+1;o.maxIndex=_t,at[U]=M,at[Q]=w,at[W]=I,it[U]=L,it[Q]=q,it[W]=E,ct[U]=Z,ct[Q]=ot,ct[W]=nt,Ft[st]=Kt,Ft[ht]=Pt,Nt.set(Bt,_t)}if(bt)Et=Nt.get(kt);else{Et=o.maxIndex+1;let U=Et*3,Q=U+1,W=U+2,st=Et*2,ht=st+1;o.maxIndex=Et,at[U]=y,at[Q]=S,at[W]=X,it[U]=k,it[Q]=z,it[W]=G,ct[U]=dt,ct[Q]=ft,ct[W]=et,Ft[st]=jt,Ft[ht]=Dt,Nt.set(kt,Et)}if(ne)Mt=Nt.get(Ut);else{Mt=o.maxIndex+1;let U=Mt*3,Q=U+1,W=U+2,st=Mt*2,ht=st+1;o.maxIndex=Mt,at[U]=Y,at[Q]=B,at[W]=T,it[U]=N,it[Q]=P,it[W]=K,ct[U]=xt,ct[Q]=ut,ct[W]=wt,Ft[st]=Rt,Ft[ht]=Lt,Nt.set(Ut,Mt)}if(ae)St=Nt.get(Vt);else{St=o.maxIndex+1;let U=St*3,Q=U+1,W=U+2,st=St*2,ht=st+1;o.maxIndex=St,at[U]=O,at[Q]=R,at[W]=$,it[U]=H,it[Q]=j,it[W]=tt,ct[U]=gt,ct[Q]=zt,ct[W]=Tt,Ft[st]=te,Ft[ht]=Yt,Nt.set(Vt,St)}let Ct=o.indicesIndex;vt[Ct]=Mt,vt[Ct+1]=Et,vt[Ct+2]=_t,vt[Ct+3]=_t,vt[Ct+4]=St,vt[Ct+5]=Mt,o.indicesIndex+=6}};var Te=class{constructor(t){let s=Math.floor(t/8),e=t/4,o=Math.floor(e/8),r=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=lt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=lt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=lt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=lt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=lt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=lt.create(new Uint8Array(o).buffer,1,0),this.faceClamped=lt.create(new Uint8Array(o).buffer,1,0),this.faceSmooth=lt.create(new Uint8Array(o).buffer,1,0),this.faceEquidistant=lt.create(new Uint8Array(o).buffer,1,0),this.faceCulled=lt.create(new Uint8Array(o).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(r),this.faceVertNormalX=new Float32Array(r),this.faceVertNormalY=new Float32Array(r),this.faceVertNormalZ=new Float32Array(r),this.faceVertFlatNormalX=new Float32Array(r),this.faceVertFlatNormalY=new Float32Array(r),this.faceVertFlatNormalZ=new Float32Array(r),this.faceVertSmoothNormalX=new Float32Array(r),this.faceVertSmoothNormalY=new Float32Array(r),this.faceVertSmoothNormalZ=new Float32Array(r),this.faceVertBothNormalX=new Float32Array(r),this.faceVertBothNormalY=new Float32Array(r),this.faceVertBothNormalZ=new Float32Array(r),this.faceVertColorR=new Float32Array(r),this.faceVertColorG=new Float32Array(r),this.faceVertColorB=new Float32Array(r),this.faceVertLightR=new Float32Array(r),this.faceVertLightG=new Float32Array(r),this.faceVertLightB=new Float32Array(r),this.faceVertAO=new Float32Array(r),this.faceVertUs=new Float32Array(r),this.faceVertVs=new Float32Array(r),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var Gs=new Te(384*1024);onmessage=function(b){try{let t=Hs(b.data.svoxmodel);postMessage({svoxmesh:t,elementId:b.data.elementId,worker:b.data.worker},[t.positions.buffer,t.normals.buffer,t.colors.buffer,t.indices.buffer,t.uvs.buffer])}catch(t){console.error(t)}};function Hs(b){let t="model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",s="model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",e;(!b||b.trim()==="")&&(e={name:"ConfigError",message:"Model not found"},b=t);let o=null;try{o=ue.readFromString(b)}catch(n){e=n,o=ue.readFromString(s)}let r=Wt.generate(o,Gs);return r.error=e,r}\n')}var pe=class{constructor(t,s){this._resultHandler=t,this._resultCallback=s,this._nrOfWorkers=window.navigator.hardwareConcurrency,this._workers=[],this._free=[],this._tasks=[]}executeTask(t){if(this._workers.length<this._nrOfWorkers){let s=new ps,e=this;s.onmessage=function(r){e._free.push(event.data.worker),e._processNextTask(),e._resultCallback.apply(e._resultHandler,[event.data])},this._free.push(this._workers.length),this._workers.push(s)}this._tasks.push(t),this._processNextTask()}_processNextTask(){if(this._tasks.length>0&&this._free.length>0){let t=this._tasks.shift();t.worker=this._free.shift(),this._workers[t.worker].postMessage(t)}}};var Vt=class{static generate(t){let s=[];t.materials.forEach(function(n){s.push(Vt._generateMaterial(n))},this);let e=new THREE.BufferGeometry;if(e.setAttribute("position",new THREE.Float32BufferAttribute(t.positions,3)),e.setAttribute("normal",new THREE.Float32BufferAttribute(t.normals,3)),e.setAttribute("color",new THREE.Float32BufferAttribute(t.colors,3)),t.uvs&&e.setAttribute("uv",new THREE.Float32BufferAttribute(t.uvs,2)),t.data)for(let n=0;n<t.data.length;n++)e.setAttribute(t.data[n].name,new THREE.Float32BufferAttribute(t.data[n].values,t.data[n].width));let r=t.indices,a=Array(r.length);for(let n=0,i=r.length;n<i;n++)a[n]=r[n];return e.setIndex(a),t.groups.forEach(function(n){e.addGroup(n.start,n.count,n.materialIndex)},this),e.computeBoundingBox(),e.uvsNeedUpdate=!0,new THREE.Mesh(e,s)}static _generateMaterial(t){switch(t.reflectivity=(1-t.roughness)*(t.metalness*.95+.05),t.shininess=Math.pow(10,5*Math.pow(1-t.roughness,1.1))*.1,t.side){case"back":t.side=THREE.BackSide;break;case"double":t.side=THREE.DoubleSide;break;default:t.side=THREE.FrontSide;break}t.map&&(t.map=Vt._generateTexture(t.map.image,THREE.sRGBEncoding,t.map.uscale,t.map.vscale,t.map.uoffset,t.map.voffset,t.map.rotation)),t.normalMap&&(t.normalMap=Vt._generateTexture(t.normalMap.image,THREE.LinearEncoding,t.normalMap.uscale,t.normalMap.vscale,t.normalMap.uoffset,t.normalMap.voffset,t.normalMap.rotation)),t.roughnessMap&&(t.roughnessMap=Vt._generateTexture(t.roughnessMap.image,THREE.LinearEncoding,t.roughnessMap.uscale,t.roughnessMap.vscale,t.roughnessMap.uoffset,t.roughnessMap.voffset,t.roughnessMap.rotation)),t.metalnessMap&&(t.metalnessMap=Vt._generateTexture(t.metalnessMap.image,THREE.LinearEncoding,t.metalnessMap.uscale,t.metalnessMap.vscale,t.metalnessMap.uoffset,t.metalnessMap.voffset,t.metalnessMap.rotation)),t.emissiveMap&&(t.emissiveMap=Vt._generateTexture(t.emissiveMap.image,THREE.sRGBEncoding,t.emissiveMap.uscale,t.emissiveMap.vscale,t.emissiveMap.uoffset,t.emissiveMap.voffset,t.emissiveMap.rotation)),t.matcap&&(t.matcap=Vt._generateTexture(t.matcap.image,THREE.sRGBEncoding)),t.reflectionMap&&(t.envMap=new THREE.TextureLoader().load(t.reflectionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularReflectionMapping,delete t.reflectionMap),t.refractionMap&&(t.envMap=new THREE.TextureLoader().load(t.refractionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularRefractionMapping,delete t.refractionMap);let s=null,e=t.type;switch(delete t.index,delete t.type,e){case"standard":delete t.reflectivity,delete t.shininess,s=new THREE.MeshStandardMaterial(t);break;case"basic":delete t.roughness,delete t.metalness,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,s=new THREE.MeshBasicMaterial(t);break;case"lambert":delete t.roughness,delete t.metalness,delete t.shininess,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshLambertMaterial(t);break;case"phong":delete t.roughness,delete t.metalness,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshPhongMaterial(t);break;case"matcap":delete t.roughness,delete t.metalness,delete t.wireframe,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshMatcapMaterial(t);break;case"toon":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshToonMaterial(t);break;case"normal":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.map,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshNormalMaterial(t);break;default:throw new Error(`SyntaxError: Unknown material type ${e}`)}return s}static _generateTexture(t,s,e,r,a,o,n){let i=new THREE.TextureLoader().load(t);return i.encoding=s,i.repeat.set(1/e,1/r),i.wrapS=THREE.RepeatWrapping,i.wrapT=THREE.RepeatWrapping,i.offset=new THREE.Vector2(a,o),i.rotation=n*Math.PI/180,i}};if(typeof window<"u"&&typeof AFRAME<"u"){let E=null;AFRAME.registerComponent("svox",{schema:{model:{type:"string"},worker:{type:"boolean",default:!!0}},multiple:!1,_MISSING:"model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",_ERROR:"model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",_workerPool:null,init:function(){let t=this.el,s=this.data,e=s.worker,r=!1,a=s.model,o=window.SVOX.models[a];o||(this._logError({name:"ConfigError",message:"Model not found"}),o=this._MISSING,r=!0,e=!1),e?this._generateModelInWorker(o,t):this._generateModel(o,t,r)},_generateModel:function(t,s,e){let r;try{r=window.model=ee.readFromString(t)}catch(c){this._logError(c),r=ee.readFromString(this._ERROR),e=!0}let a=new ue(1024*1024),o=performance.now(),n=Bt.generate(r,a),i=performance.now();this.mesh=Vt.generate(n);let l=`Time: ${Math.round(i-o)}ms. Verts:${n.maxIndex+1} Faces:${n.indices.length/3} Materials:${this.mesh.material.length}`,f=document.getElementById("svoxstats");f&&!e&&(f.innerHTML="Last render: "+l),s.setObject3D("mesh",this.mesh)},_generateModelInWorker:function(t,s){s.id||(s.id=new Date().valueOf().toString(36)+Math.random().toString(36).substr(2));let e={svoxmodel:t,elementId:s.id};E||(E=new pe(this,this._processResult)),E.executeTask(e)},_processResult:function(t){if(t.svoxmesh.error)this._logError(t.svoxmesh.error);else{let s=Vt.generate(t.svoxmesh);document.querySelector("#"+t.elementId).setObject3D("mesh",s)}},_toSharedArrayBuffer(t){let s=new Float32Array(new ArrayBuffer(t.length*4));return s.set(t,0),s},_logError:function(t){let s=t.name+": "+t.message,e=document.getElementById("svoxerrors");e&&(e.innerHTML=s),console.error(`SVOXERROR (${this.data.model}) ${s}`)},update:function(t){},remove:function(){let t=["map","normalMap","roughnessMap","metalnessMap","emissiveMap","matcap"];if(this.mesh){for(;this.mesh.material.length>0;)t.forEach(function(s){this.mesh.material[0][s]&&this.mesh.material[0][s].dispose()},this),this.mesh.material[0].dispose(),this.mesh.material.shift();this.mesh.geometry.dispose(),this.el.removeObject3D("mesh"),delete this.mesh}},pause:function(){},play:function(){},events:{}})}var Oa={BaseMaterial:ne,Bits:at,BoundingBox:Qt,Color:st,Light:le,Material:ce,MaterialList:fe,SvoxMeshGenerator:Bt,Model:me,ModelReader:ee,ModelWriter:Re,Buffers:ue,Voxels:dt,xyzRangeForSize:ft,shiftForSize:ht,voxColorForRGBT:Ge,rgbtForVoxColor:Es,WorkerPool:pe};})();
