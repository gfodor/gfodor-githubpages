function a(l){let t=new Blob([l],{type:"text/javascript"}),e=URL.createObjectURL(t),s=new Worker(e);return URL.revokeObjectURL(e),s}function i(){return a('var Ss=Object.defineProperty;var Zs=(w,t,s)=>t in w?Ss(w,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):w[t]=s;var ds=(w,t,s)=>(Zs(w,typeof t!="symbol"?t+"":t,s),s);var tt=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\\s+(?:none|-x|x|\\+x|-y|y|\\+y|-z|z|\\+z|\\s))+\\s*$/.test(t))throw new Error(`SyntaxError: Planar expression \'${t}\' is only allowed to be \'none\' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var ve="standard",$e="basic",gs="lambert",vs="phong",Fs="matcap",ys="toon",Ge="normal",De="bounds",he="model",Ce="skip",He="flat",Fe="quad",ae="smooth",ie="both",jt="front",pe="back",ce="double",As=["nx","px","ny","py","nz","pz"],Vs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Ms=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],_s=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],Cs=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var ts=(w,t,s)=>Math.min(Math.max(w,t),s),Ut=class{static fromHex(t){let s=new Ut;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(ts(t,0,1)*255),s=Math.round(ts(s,0,1)*255),e=Math.round(ts(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return Ut.fromHex(r)}clone(){let t=new Ut;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof Ut?Ut.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):Ut.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((o,n)=>o+n.r,0),e=this.g+t.reduce((o,n)=>o+n.g,0),r=this.b+t.reduce((o,n)=>o+n.b,0);return Ut.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var Ie=class{constructor(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p,v,F,y,A,d,C,_,g,M){switch(t=t||ve,t){case ve:case $e:case gs:case vs:case ys:case Fs:case Ge:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||x&&x.cube||p&&p.cube||v&&v.cube)&&!(d===-1&&C===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(y&&A)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof o=="number"?o:0,this.transparent=!!n,this.refractionRatio=typeof i=="number"?i:.9,this.wireframe=!!a,this.side=c||jt,[jt,pe,ce].includes(this.side)||(this.side=jt),this.setEmissive(h,l),this.fog=typeof f=="boolean"?f:!0,this.map=m,this.normalMap=u,this.roughnessMap=x,this.metalnessMap=p,this.emissiveMap=v,this.matcap=F,this.reflectionMap=y,this.refractionMap=A,this.mapTransform={uscale:d||-1,vscale:C||-1,uoffset:_||0,voffset:g||0,rotation:M||0},this.aoActive=!1}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:Ut.fromHex(t),intensity:s}}get emissive(){return this._emissive}};var le=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var Ne=class{constructor(t,s,e,r,o){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._ao=void 0,this.lights=!0,this._side=o,this._colors=[],this.bounds=new le}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t==null?1:t,0),s=s==null?1:s,e=e==null?1:e,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}};var we=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p,v,F,y,A,d,C,_,g,M,N,I,V){f=f||jt,[jt,pe,ce].includes(f)||(f=jt);let b=f===ce?ce:jt,O=new Ie(t,e,r,i,a,c,h,l,b,m,u,x,p,v,F,y,A,d,C,_,g,M,N,I,V),E=O.baseId,T=this.baseMaterials.find(X=>X.baseId===E);T?O=T:this.baseMaterials.push(O);let Z=new Ne(O,s,o,n,f);return this.materials.push(Z),Z}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}getMaterialListIndex(t){return this.materials.indexOf(t)}};function ze(w,t,s,e){let r=s*w;for(let o=0;o<s;){let n=r&7,i=r>>3,a=s-o,c=8-n,h=a<c?a:c,l=~(255<<h),f=t&l;t>>=h;let m=~(l<<n);e[i]=e[i]&m|f<<n,r+=h,o+=h}}var es=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return ze(t,s,1,this.view)}clear(){this.view.fill(0)}},ss=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return ze(t,s,2,this.view)}clear(){this.view.fill(0)}},rs=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return ze(t,s,4,this.view)}clear(){this.view.fill(0)}},os=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return ze(t,s,8,this.view)}clear(){this.view.fill(0)}},ns=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,o=0;for(let n=0;n<e;){let i=r&7,a=r>>3,c=e-n,h=8-i,l=c<h?c:h,f=s[a],m=~(255<<l);o|=(f>>i&m)<<n,r+=l,n+=l}return o>>>0}set(t,s){ze(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},wt=class{static create(t,s,e,r=null){let o=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new es(o);case 2:return new ss(o);case 4:return new rs(o);case 8:return new os(o);default:return new ns(o)}}};var Es=0,ye=0,as=128,Xe=8;var Ts=255,Is=Ts<<24>>>0,is={NONE:0,PAINT:1,KEEP:2},Ht=1,xe=new Map,At=w=>Math.floor(w%2===0?w/2-1:w/2),Yt=w=>{let[t,s,e]=w,r=At(t),o=At(s),n=At(e),i=t-r-1,a=s-o-1,c=e-n-1,h=-r,l=-o,f=-n;return[h,i,l,a,f,c]},be=1,Ns=be*4;function cs(w,t,s=null){let e=2**t-Ht,r=Ns*e,o=w[0]*w[1]*w[2]*t,n=Math.floor(o/8)+1,i=Xe+r+n;s==null&&(typeof Buffer!="undefined"?s=Buffer.alloc(i).buffer:s=new ArrayBuffer(i));let a=new Uint8Array(s,0,Xe),c=r/Ns,h=new Uint32Array(s,Xe,c),l=wt.create(s,t,Xe+r);return a[0]=Es,[a[1],a[2],a[3]]=w,a[4]=t,[s,h,l]}var Kt=class{constructor(t=null,s=8,e=null,r=null,o=0,n=null,i=0,a=null){ds(this,"createInverse",(t,s)=>{xe.clear();let e=t.size,[r,o,n,i,a,c]=Yt(e),{size:h}=this,l=new Kt(h),[f,m,u,x,p,v]=Yt(h);for(let F=f;F<=m;F+=1)for(let y=u;y<=x;y+=1)for(let A=p;A<=v;A+=1){if(this.getPaletteIndexAt(F,y,A)===0)continue;let C=F+s[0],_=y+s[1],g=A+s[2];if(C>o||C<r||_>i||_<n||g>c||g<a||!t.hasVoxelAt(C,_,g))l.setColorAt(F,y,A,Is);else{let M=t.getColorAt(C,_,g);l.setColorAt(F,y,A,M)}}return l});if(e&&r)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=s,n=n||e.length,a=a||r.length,this.palette=new Uint32Array(e,o||0,n/4),this.indices=wt.create(r,s,i,a),this.xShift=At(t[0]),this.yShift=At(t[1]),this.zShift=At(t[2]),this._rebuildRefCounts();else if(t){let[c,h,l]=cs(t,s);this.palette=h,this.indices=l,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(c)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,Xe);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=At(this.size[0]),this.yShift=At(this.size[1]),this.zShift=At(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,o=this._getOffset(t,s,e);return r.get(o)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==ye}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,ye)}getVoxColorCounts(){let t=new Map;for(let s=0;s<this._refCounts.length;s+=1){let e=this._refCounts[s];if(e===0)continue;let r=this.colorForPaletteIndex(s+Ht);t.set(r,e)}return t}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-Ht)*be]}setPaletteColor(t,s){this.palette[(t-Ht)*be]=s}paletteHasReferences(t){return this._refCounts[t-Ht]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-Ht]=1}incrementPaletteRefcount(t){this._refCounts[t-Ht]+=1}decrementPaletteRefcount(t){this._refCounts[t-Ht]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let o=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(o,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);Kt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),Kt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let o=this._getOffset(t,s,e);return this.setColorAtOffset(o,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,o=this.getPaletteIndexAtOffset(t),n=Kt.isNonEmptyPaletteIndex(o);n&&this.decrementPaletteRefcount(o);for(let a=0;a<e.length;a+=1){let c=a+Ht;if(this.getPaletteColor(c)===s)return this.incrementPaletteRefcount(c),r.set(t,c),c}if(n&&!this.paletteHasReferences(o))return this.setPaletteColor(o,s),this.resetPaletteRefcountToOne(o),o;let i=this._getFreePaletteIndex();return this.setPaletteColor(i,s),this.resetPaletteRefcountToOne(i),this.indices.set(t,i),i}colorForPaletteIndex(t){return this.palette[(t-Ht)*be]}filterByVoxels(t,s,e,r,o){if(o===is.NONE)return;let n=t.size,[i,a,c,h,l,f]=Yt(n),{size:m}=this,[u,x,p,v,F,y]=Yt(m);for(let A=u;A<=x;A+=1)for(let d=p;d<=v;d+=1)for(let C=F;C<=y;C+=1){if(this.getPaletteIndexAt(A,d,C)===0)continue;let g=A+s,M=d+e,N=C+r,V=!(g>a||g<i||M>h||M<c||N>f||N<l)&&t.hasVoxelAt(g,M,N);(o===is.PAINT&&!V||o===is.KEEP&&V)&&this.setEmptyAt(A,d,C)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let c=0;c<t.length;c+=1){let h=c+Ht;if(!this.paletteHasReferences(h))return h}let o=r*2,[n,i,a]=cs(s,o);for(let c=0;c<t.length*be;c+=1)i[c]=t[c];for(;this._refCounts.length<i.length;)this._refCounts.push(0);for(let c=0,h=s[0]*s[1]*s[2];c<h;c+=1){let l=e.get(c);a.set(c,l)}return this.palette=i,this.indices=a,this._recomputeSizeFieldsForBuffer(n),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,o=Math.max(1,r[0],Math.abs(t)*2+1),n=Math.max(1,r[1],Math.abs(s)*2+1),i=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([o,n,i])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Kt(t),[e,r,o,n,i,a]=Yt(this.size);for(let m=e;m<=r;m+=1)for(let u=o;u<=n;u+=1)for(let x=i;x<=a;x+=1)this.getPaletteIndexAt(m,u,x)!==0&&s.setColorAt(m,u,x,this.getColorAt(m,u,x));let{buffer:c}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:h}=s;this.bitsPerIndex=h;let[,l,f]=cs(t,h,c);this.palette=l,this.indices=f,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(c)}static fromJSON(t){if(typeof t=="string")return Kt.deserialize(t);let{size:s,palette:e,indices:r}=t,o=new Kt(s);for(let n=0;n<e.length+Ht;n+=1)for(let i=0;i<r.length;i+=1){let a=r[i];if(a===n)if(a>=Ht){let c=e[a-Ht];o.setColorAtOffset(i,c)}else a===n&&o.setPaletteIndexAtOffset(i,a)}return o}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let o=0;o<this.palette.length;o+=1){let n=o+Ht,i=this.getPaletteColor(n);i>0&&e.push(i)}for(let o=0,n=this.size[0]*this.size[1]*this.size[2];o<n;o+=1)r.push(this.indices.get(o));return{size:[...this.size],palette:e,indices:r}}clone(){return new Kt(this.size,this.bitsPerIndex,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:o,yShift:n,zShift:i}=this,a=r[2];return(t+o)*r[1]*a+(s+n)*a+(e+i)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Kt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToVoxels(t,s=0,e=0,r=0){xe.clear();let o=t.size,[n,i,a,c,h,l]=Yt(o),{size:f}=this,[m,u,x,p,v,F]=Yt(f);for(let y=m;y<=u;y+=1)for(let A=x;A<=p;A+=1)for(let d=v;d<=F;d+=1){let C=this.getPaletteIndexAt(y,A,d);if(C!==0){let _=y+s,g=A+e,M=d+r,N=o[0],I=o[1],V=o[2];if(_>i&&(N=_*2),_<n&&(N=Math.max(N,-_*2+1)),g>c&&(I=g*2),g<a&&(I=Math.max(I,-g*2+1)),M>l&&(V=M*2),M<h&&(V=Math.max(V,-M*2+1)),N>as||I>as||V>as)continue;(o[0]<N||o[1]<I||o[2]<V)&&(t.resizeTo([N,I,V]),o=t.size,[n,i,a,c,h,l]=Yt(o),xe.clear());let b=xe.get(C);if(b===void 0){let O=this.getColorAt(y,A,d);if(O===Is)t.setEmptyAt(_,g,M);else{let E=t.setColorAt(_,g,M,O);xe.set(C,E)}}else t.getPaletteIndexAt(_,g,M)!==b&&t.setPaletteIndexAt(_,g,M,b)}}}mergeWith(t,s,e,r=!1){xe.clear();let o=xe,n=e[0]-s[0],i=e[1]-s[1],a=e[2]-s[2],c=t.size,[h,l,f,m,u,x]=Yt(c),{size:p}=this,[v,F,y,A,d,C]=Yt(p);for(let _=v;_<=F;_+=1)for(let g=y;g<=A;g+=1)for(let M=d;M<=C;M+=1){let N=this.getPaletteIndexAt(_,g,M);if(N===0)continue;let I=_+n,V=g+i,b=M+a;if(!!(!(I>l||I<h||V>m||V<f||b>x||b<u)&&t.hasVoxelAt(I,V,b)))if(o.has(N))this.setPaletteIndexAt(_,g,M,o.get(N));else{(r||t.getColorAt(I,V,b)>this.getColorAt(_,g,M))&&this.removeVoxelAt(_,g,M);let T=this.getPaletteIndexAt(_,g,M);o.set(N,T)}}}};function ls(w){return w=w.trim().toUpperCase(),w.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/)?(w=w.replace("#",""),w.length===3?w=w[2]+w[2]+w[1]+w[1]+w[0]+w[0]:w=w[4]+w[5]+w[2]+w[3]+w[0]+w[1],parseInt(w,16)):0}function ws(){let w=[];for(let r=0;r<256;r++)w[r]=Math.floor(Math.random()*256),w[r+256]=w[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,o,n){return o+r*(n-o)}function e(r,o,n,i){let a=r&15,c=a<8?o:n,h=a<4?n:a===12||a===14?o:i;return((a&1)===0?c:-c)+((a&2)===0?h:-h)}return{noise:function(r,o,n){let i=Math.floor(r),a=Math.floor(o),c=Math.floor(n),h=i&255,l=a&255,f=c&255;r-=i,o-=a,n-=c;let m=r-1,u=o-1,x=n-1,p=t(r),v=t(o),F=t(n),y=w[h]+l,A=w[y]+f,d=w[y+1]+f,C=w[h+1]+l,_=w[C]+f,g=w[C+1]+f;return s(F,s(v,s(p,e(w[A],r,o,n),e(w[_],m,o,n)),s(p,e(w[d],r,u,n),e(w[g],m,u,n))),s(v,s(p,e(w[A+1],r,o,x),e(w[_+1],m,o,n-1)),s(p,e(w[d+1],r,u,x),e(w[g+1],m,u,x))))}}}var me=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let o=0,n=t.faceCount;o<n;o++)r.set(o,0);break}}static _circularDeform(t,s,e,r,o){let[n,i,a,c,h,l]=Yt(t.voxels.size),f=(n+i)/2+.5,m=(a+c)/2+.5,u=(h+l)/2+.5,{vertX:x,vertY:p,vertZ:v,vertRing:F}=s;for(let y=0,A=t.vertCount;y<A;y++){let d=x[y],C=p[y],_=v[y],g=d-f,M=C-m,N=_-u,I=Math.max(Math.abs(g*e),Math.abs(M*r),Math.abs(N*o)),V=Math.sqrt(g*g*e+M*M*r+N*N*o);if(V===0)continue;let b=I/V;x[y]=g*(1-e+e*b)+f,p[y]=M*(1-r+r*b)+m,v[y]=N*(1-o+o*b)+u,F[y]=I}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:o}=s;for(let n=0,i=t.faceCount;n<i;n++){let a=n*4,c=a+1,h=a+2,l=a+3;o.set(n,r[e[a]]===r[e[c]]&&r[e[a]]===r[e[h]]&&r[e[a]]===r[e[l]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:o,vertDeformCount:n,vertDeformDamping:i,vertDeformStrength:a,vertFlattenedX:c,vertFlattenedY:h,vertFlattenedZ:l,vertClampedX:f,vertClampedY:m,vertClampedZ:u,vertX:x,vertY:p,vertZ:v,vertTmpX:F,vertTmpY:y,vertTmpZ:A,vertHasTmp:d}=s;for(let C=0;C<e;C++){let _=!1;for(let g=0,M=t.vertCount;g<M;g++){if(n[g]<=C)continue;let I=o[g];if(I===0)continue;_=!0;let V=x[g],b=p[g],O=v[g],E=i[g],T=a[g],Z=1-(f.get(g)|c.get(g)),X=1-(m.get(g)|h.get(g)),P=1-(u.get(g)|l.get(g)),q=0,R=0,k=0;for(let z=0;z<I;z++){let L=r[g*6+z];q+=x[L],R+=p[L],k+=v[L]}let S=Math.pow(E,C)*T,U=q/I-V,Y=R/I-b,K=k/I-O;F[g]=V+Z*U*S,y[g]=b+X*Y*S,A[g]=O+P*K*S,d.set(g,Z|X|P)}if(_){for(let g=0,M=t.vertCount;g<M;g++)d.get(g)!==0&&(x[g]=F[g],p[g]=y[g],v[g]=A[g]);d.clear()}}}static warpAndScatter(t,s){let e=ws().noise,{nx:r,px:o,ny:n,py:i,nz:a,pz:c}=t._tile,[h,l,f,m,u,x]=Yt(t.voxels.size),{vertX:p,vertY:v,vertZ:F,vertWarpAmplitude:y,vertWarpFrequency:A,vertScatter:d,vertFlattenedX:C,vertFlattenedY:_,vertFlattenedZ:g,vertClampedX:M,vertClampedY:N,vertClampedZ:I}=s;h+=.1,f+=.1,u+=.1,l+=.9,m+=.9,x+=.9;for(let V=0,b=t.vertCount;V<b;V++){let O=p[V],E=v[V],T=F[V];if(r&&O<h||o&&O>l||n&&E<f||i&&E>m||a&&T<u||c&&T>x)continue;let Z=y[V],X=A[V],P=d[V],q=Z>0,R=P>0;if(q||R){let k=0,S=0,U=0;q&&(k=e((O+.19)*X,E*X,T*X)*Z,S=e((E+.17)*X,T*X,O*X)*Z,U=e((T+.13)*X,O*X,E*X)*Z),R&&(k+=(Math.random()*2-1)*P,S+=(Math.random()*2-1)*P,U+=(Math.random()*2-1)*P);let Y=1-(M.get(V)|C.get(V)),K=1-(N.get(V)|_.get(V)),z=1-(I.get(V)|g.get(V));p[V]=O+Y*k,v[V]=E+K*S,F[V]=T+z*U}}}};var Ae=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:o,faceVertIndices:n,vertLinkIndices:i,vertLinkCounts:a}=s;if(r.get(e)===1)for(let h=0;h<4;h++){let l=n[e*4+h],f=!1;for(let m=0,u=a[l];m<u;m++)if(i[l*6+m]===l){f=!0;break}f||(i[l*6+a[l]]=l,a[l]++,o[l]++)}else for(let h=0;h<4;h++){let l=n[e*4+h],f=n[e*4+(h+1)%4],m=!1;for(let x=0,p=a[l];x<p;x++)if(i[l*6+x]===f){m=!0;break}m||(i[l*6+a[l]]=f,a[l]++);let u=!1;for(let x=0,p=a[f];x<p;x++)if(i[f*6+x]===l){u=!0;break}u||(i[f*6+a[f]]=l,a[f]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:o,vertLinkCounts:n,vertLinkIndices:i}=s;for(let a=0,c=t.vertCount;a<c;a++){let h=r[a],l=n[a];h===l&&(o.set(a,1),n[a]=0)}for(let a=0,c=t.faceCount;a<c;a++)for(let h=0;h<4;h++){let l=e[a*4+h],f=e[a*4+(h+1)%4];if(o.get(l)===1){let m=!1;for(let u=0,x=n[l];u<x;u++)if(i[l*6+u]===f){m=!0;break}m||(i[l*6+n[l]]=f,n[l]++)}if(o.get(f)===1){let m=!1;for(let u=0,x=n[f];u<x;u++)if(i[f*6+u]===l){m=!0;break}m||(i[f*6+n[f]]=l,n[f]++)}}}};var Ye=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:o,faceSmooth:n,faceFlattened:i,faceClamped:a,vertX:c,vertY:h,vertZ:l,faceVertFlatNormalX:f,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:x,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:v,faceVertBothNormalX:F,faceVertBothNormalY:y,faceVertBothNormalZ:A,faceVertNormalX:d,faceVertNormalY:C,faceVertNormalZ:_,faceMaterials:g,faceVertIndices:M,vertSmoothNormalX:N,vertSmoothNormalY:I,vertSmoothNormalZ:V,vertBothNormalX:b,vertBothNormalY:O,vertBothNormalZ:E}=s,[T,Z,X,P,q,R]=Yt(t.voxels.size);for(let S=0,U=t.faceCount;S<U;S++){let Y=S*4;for(let K=0;K<4;K++){let z=M[Y+K];N[z]=0,I[z]=0,V[z]=0,b[z]=0,O[z]=0,E[z]=0}}for(let S=0,U=t.faceCount;S<U;S++){let Y=r[S],K=o.get(S),z=i.get(S),L=a.get(S),Q=K|1-(z|L);n.set(S,Q);let W=M[S*4],et=M[S*4+1],nt=M[S*4+2],B=M[S*4+3],ht=(c[W]+c[et]+c[nt]+c[B])/4,mt=(h[W]+h[et]+h[nt]+h[B])/4,zt=(l[W]+l[et]+l[nt]+l[B])/4;for(let _t=0;_t<4;_t++){let at=M[S*4+_t],Ot=M[S*4+(_t+3)%4],ot=c[at],gt=c[Ot],it=h[at],Vt=h[Ot],Ct=l[at],Et=l[Ot],Mt=N[at],Xt=I[at],bt=V[at],St=b[at],Zt=O[at],Lt=E[at],Qt=gt-ot,qt=Vt-it,It=Et-Ct,vt=ht-ot,Ft=mt-it,ft=zt-Ct,Nt=Math.sqrt(Qt*Qt+qt*qt+It*It),Jt=Math.sqrt(vt*vt+Ft*Ft+ft*ft);Nt=Nt===0?1:Nt,Jt=Jt===0?1:Jt;let Dt=1/Nt;Qt*=Dt,qt*=Dt,It*=Dt;let Rt=1/Jt;vt*=Rt,Ft*=Rt,ft*=Rt;let ct=qt*ft-It*Ft,ut=It*vt-Qt*ft,pt=Qt*Ft-qt*vt,$t=T+.1,oe=Z+.9,Tt=X+.1,kt=P+.9,Bt=q+.1,Wt=R+.9;e&&((e.nx&&Y===0||e.px&&Y===1)&&(it<Tt||it>kt||Ct<Bt||Ct>Wt)&&(ut=0,pt=0),(e.ny&&Y===2||e.py&&Y===3)&&(ot<$t||ot>oe||Ct<Bt||Ct>Wt)&&(ct=0,pt=0),(e.nz&&Y===4||e.pz&&Y===5)&&(ot<$t||ot>oe||it<Tt||it>kt)&&(ct=0,ut=0));let Gt=Math.sqrt(ct*ct+ut*ut+pt*pt);Gt=Gt===0?1:Gt;let G=1/Gt;ct*=G,ut*=G,pt*=G,f[S*4+_t]=ct,m[S*4+_t]=ut,u[S*4+_t]=pt;let j=Qt*vt+qt*Ft+It*ft,H=Math.acos(j);Mt+=ct*H,Xt+=ut*H,bt+=pt*H,St+=Q*(ct*H),Zt+=Q*(ut*H),Lt+=Q*(pt*H),N[at]=Mt,I[at]=Xt,V[at]=bt,b[at]=St,O[at]=Zt,E[at]=Lt}}for(let S=0,U=t.vertCount;S<U;S++){let Y=N[S],K=I[S],z=V[S],L=b[S],Q=O[S],W=E[S],et=Math.sqrt(Y*Y+K*K+z*z),nt=Math.sqrt(L*L+Q*Q+W*W);et!==0&&(N[S]=Y/et,I[S]=K/et,V[S]=z/et),nt!==0&&(b[S]=L/nt,O[S]=Q/nt,E[S]=W/nt)}let k=t.materials.materials;for(let S=0,U=t.faceCount;S<U;S++){let Y=n.get(S)===1,K=k[g[S]];for(let z=0;z<4;z++){let L=S*4+z,Q=M[S*4+z];switch(x[L]=N[Q],p[L]=I[Q],v[L]=V[Q],F[L]=!Y||b[Q]===0?f[L]:b[Q],y[L]=!Y||O[Q]===0?m[L]:O[Q],A[L]=!Y||E[Q]===0?u[L]:E[Q],K.lighting){case ae:d[L]=x[L],C[L]=p[L],_[L]=v[L];break;case ie:d[L]=F[L],C[L]=y[L],_[L]=A[L];break;default:d[L]=f[L],C[L]=m[L],_[L]=u[L];break}}}}};var st=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,o=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,n=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=o,t.z=n}transformPointInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[12]*o+a[13]*n+a[14]*i+a[15],h=(a[0]*o+a[1]*n+a[2]*i+a[3])/c,l=(a[4]*o+a[5]*n+a[6]*i+a[7])/c,f=(a[8]*o+a[9]*n+a[10]*i+a[11])/c;t[r]=h,s[r]=l,e[r]=f}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,o=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=o}transformVectorInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[0]*o+a[1]*n+a[2]*i,h=a[4]*o+a[5]*n+a[6]*i,l=a[8]*o+a[9]*n+a[10]*i;t[r]=c,s[r]=h,e[r]=l}static identity(t){t=t||new st;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new st;let r=t.m,o=s.m,n=e.m;return n[0]=r[0]*o[0]+r[1]*o[4]+r[2]*o[8]+r[3]*o[12],n[1]=r[0]*o[1]+r[1]*o[5]+r[2]*o[9]+r[3]*o[13],n[2]=r[0]*o[2]+r[1]*o[6]+r[2]*o[10]+r[3]*o[14],n[3]=r[0]*o[3]+r[1]*o[7]+r[2]*o[11]+r[3]*o[15],n[4]=r[4]*o[0]+r[5]*o[4]+r[6]*o[8]+r[7]*o[12],n[5]=r[4]*o[1]+r[5]*o[5]+r[6]*o[9]+r[7]*o[13],n[6]=r[4]*o[2]+r[5]*o[6]+r[6]*o[10]+r[7]*o[14],n[7]=r[4]*o[3]+r[5]*o[7]+r[6]*o[11]+r[7]*o[15],n[8]=r[8]*o[0]+r[9]*o[4]+r[10]*o[8]+r[11]*o[12],n[9]=r[8]*o[1]+r[9]*o[5]+r[10]*o[9]+r[11]*o[13],n[10]=r[8]*o[2]+r[9]*o[6]+r[10]*o[10]+r[11]*o[14],n[11]=r[8]*o[3]+r[9]*o[7]+r[10]*o[11]+r[11]*o[15],n[12]=r[12]*o[0]+r[13]*o[4]+r[14]*o[8]+r[15]*o[12],n[13]=r[12]*o[1]+r[13]*o[5]+r[14]*o[9]+r[15]*o[13],n[14]=r[12]*o[2]+r[13]*o[6]+r[14]*o[10]+r[15]*o[14],n[15]=r[12]*o[3]+r[13]*o[7]+r[14]*o[11]+r[15]*o[15],e}static transpose(t,s){s=s||new st;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new st;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let o=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let n=0;n<16;n++)r[n]/=o;return s}static scale(t,s,e,r){r=r||new st;let o=r.m;return o[0]=t,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static translate(t,s,e,r){r=r||new st;let o=r.m;return o[0]=1,o[1]=0,o[2]=0,o[3]=t,o[4]=0,o[5]=1,o[6]=0,o[7]=s,o[8]=0,o[9]=0,o[10]=1,o[11]=e,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static rotate(t,s,e,r,o){if(!t||!s&&!e&&!r)return st.identity(o);o=o||new st;let n=o.m,i=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=i,e/=i,r/=i;let a=Math.cos(t),c=Math.sin(t),h=1-a;return n[0]=s*s*h+a,n[1]=s*e*h-r*c,n[2]=s*r*h+e*c,n[3]=0,n[4]=e*s*h+r*c,n[5]=e*e*h+a,n[6]=e*r*h-s*c,n[7]=0,n[8]=r*s*h-e*c,n[9]=r*e*h+s*c,n[10]=r*r*h+a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,o}static lookAtORIGINAL(t,s,e,r,o,n,i,a,c,h){h=h||new st;let l=h.m,f=t-r,m=s-o,u=e-n,x=Math.sqrt(f*f+m*m+u*u);f/=x,m/=x,u/=x;let p=a*u-c*m,v=c*f-i*u,F=i*m-a*f;x=Math.sqrt(p*p+v*v+F*F),p/=x,v/=x,F/=x;let y=m*F-u*v,A=u*p-f*F,d=f*v-m*p;return x=Math.sqrt(y*y+A*A+d*d),y/=x,A/=x,d/=x,l[0]=p,l[1]=v,l[2]=F,l[3]=-(p*t+v*s+F*e),l[4]=y,l[5]=A,l[6]=d,l[7]=-(y*t+A*s+d*e),l[8]=f,l[9]=m,l[10]=u,l[11]=-(f*t+m*s+u*e),l[12]=0,l[13]=0,l[14]=0,l[15]=1,h}static lookAtTRYOUT(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e);return o[0]=e/n,o[1]=0,o[2]=-t/n,o[3]=0,o[4]=t*s/n,o[5]=-n,o[6]=e*s/n,o[7]=0,o[8]=t,o[9]=s,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static lookAt(t,s,e,r){r=r||new st;let o=r.m,n=Math.sqrt(t*t+e*e),i=n?t/n:1,a=n?e/n:0;return o[0]=t,o[1]=-a,o[2]=-e*i,o[3]=0,o[4]=s,o[5]=0,o[6]=n,o[7]=0,o[8]=e,o[9]=i,o[10]=-e*a,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}};var Ve=[null,null,null,null],Oe=[null,null,null,null],Se=[null,null,null,null],Ze=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:o,faceVertNormalX:n,faceVertFlatNormalX:i,faceVertNormalY:a,faceVertFlatNormalY:c,faceVertNormalZ:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:v}=s,F=t.determineBoundsOffsetAndRescale(t.resize,s),y=new st;y=st.multiply(y,st.translate(t.position.x,t.position.y,t.position.z)),y=st.multiply(y,st.rotate(t.rotation.z,0,0,1)),y=st.multiply(y,st.rotate(t.rotation.y,0,1,0)),y=st.multiply(y,st.rotate(t.rotation.x,1,0,0)),y=st.multiply(y,st.scale(t.scale.x,t.scale.y,t.scale.z)),y=st.multiply(y,st.scale(F.rescale,F.rescale,F.rescale)),y=st.multiply(y,st.translate(F.offset.x,F.offset.y,F.offset.z));let A=st.inverse(y);A=st.transpose(A);for(let d=0,C=t.vertCount;d<C;d++)y.transformPointInline(e,r,o,d);Ve[0]=n,Oe[0]=a,Se[0]=h,Ve[1]=i,Oe[1]=c,Se[1]=l,Ve[2]=f,Oe[2]=m,Se[2]=u,Ve[3]=x,Oe[3]=p,Se[3]=v;for(let d=0,C=t.faceCount;d<C;d++){let _=d*4;for(let g=0;g<4;g++)for(let M=0,N=Ve.length;M<N;M++){let I=Ve[M],V=Oe[M],b=Se[M],O=_+g;A.transformVectorInline(I,V,b,O);let E=I[O],T=V[O],Z=b[O],X=Math.sqrt(E*E+T*T+Z*Z);if(X>0){let P=1/X;I[O]=E*P,V[O]=T*P,b[O]=Z*P}}}}};var Ee=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let v=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},v>0){let F=1/v;p.normalizedDirection.x*=F}}let r=t.materials.materials,{faceMaterials:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,faceVertIndices:c,vertX:h,vertY:l,vertZ:f,faceVertLightR:m,faceVertLightG:u,faceVertLightB:x}=s;for(let p=0,v=t.faceCount;p<v;p++){let F=r[o[p]],y=p*4;if(F.lights)for(let A=0;A<4;A++){let d=y+A,C=c[d],_=h[C],g=l[C],M=f[C],N=n[d],I=i[d],V=a[d];m[d]=0,u[d]=0,x[d]=0;for(let b of e){let{color:O,strength:E,distance:T,normalizedDirection:Z,position:X}=b,P=E,q=0;if(X){let R=X.x-_,k=X.y-g,S=X.z-M;q=Math.sqrt(R*R+k*k+S*S);let U=1/q;P=E*Math.max(N*R*U+I*k*U+V*S*U,0)}else Z&&(P=E*Math.max(N*Z.x+I*Z.y+V*Z.z,0));X&&T&&(P=P*(1-Math.min(q/T,1))),m[d]+=O.r*P,u[d]+=O.g*P,x[d]+=O.b*P}}else for(let A=0;A<4;A++){let d=y+A;m[d]=1,u[d]=1,x[d]=1}}}};var zs=[],fs=new Map,hs=()=>zs.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Xs=w=>{for(let t of w.partitions)t&&Xs(t);w.minx=Number.MAX_VALUE,w.miny=Number.MAX_VALUE,w.minz=Number.MAX_VALUE,w.maxx=-Number.MAX_VALUE,w.maxy=-Number.MAX_VALUE,w.maxz=-Number.MAX_VALUE,w.partitions.fill(null),w.triangles.length=0,zs.push(w)},Te=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(C){return C.ao})))return;let{faceMaterials:r,faceVertIndices:o,faceVertAO:n,vertX:i,vertY:a,vertZ:c,faceVertNormalX:h,faceVertNormalY:l,faceVertNormalZ:f}=s,{faceCount:m}=t,u=t.materials.materials,x=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(x,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let v=t.aoSamples,F=this._generateFibonacciSamples(v);fs.clear();let y=t.scale.x,A=t.scale.y,d=t.scale.z;for(let C=0;C<m;C++){let _=u[r[C]],g=_.ao||t.ao,M=C*4;if(n[M]=0,n[M+1]=0,n[M+2]=0,n[M+3]=0,!g||g.maxDistance===0||g.strength===0||g.angle<1||_.opacity===0)continue;let N=g.maxDistance*Math.max(y,A,d),I=g.strength,V=Math.cos(g.angle/180*Math.PI);for(let b=0;b<4;b++){let O=M+b,E=o[O],T=i[E],Z=a[E],X=c[E],P=h[O],q=l[O],R=f[O],k=T*16384+Z*128+X,S=P*1e7+q*1e5+R*1e3,U=k*1e9+S,Y=fs.get(U);if(Y!==void 0){n[O]=Y;continue}let K=o[M+(b+2)%4],z=i[K],L=a[K],Q=c[K],W=T*.99999+z*1e-5+P*1e-5,et=Z*.99999+L*1e-5+q*1e-5,nt=X*.99999+Q*1e-5+R*1e-5,B=0,ht=0;for(let[zt,_t,at]of F){if(zt*P+_t*q+at*R<=V)continue;let ot=W+zt*N,gt=et+_t*N,it=nt+at*N,Vt=this._distanceToOctree(t,s,p,W,et,nt,zt,_t,at,N,ot,gt,it);Vt?Vt=Vt/N:Vt=1,B+=Vt,ht++}let mt=0;ht!==0&&(B=Math.max(Math.min(B/ht,1),0),mt=1-Math.pow(B,I)),n[O]=mt,fs.set(U,mt)}}Xs(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,o=[],n=t.materials.materials;for(let i=0;i<r;i++){if(n[e[i]].opacity<.75)continue;let c=i*2;o.push(c),o.push(c+1)}return o}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:o,vertY:n,vertZ:i}=e,a=t.length;if(a<=32){let c=hs();c.triangles=t;for(let h=0;h<a;h++){let l=t[h],m=(l>>1)*4,u,x,p;(l&1)===0?(u=r[m+2],x=r[m+1],p=r[m+0]):(u=r[m+0],x=r[m+3],p=r[m+2]);let v=o[u],F=n[u],y=i[u],A=o[x],d=n[x],C=i[x],_=o[p],g=n[p],M=i[p];c.minx=Math.min(c.minx,v,A,_),c.miny=Math.min(c.miny,F,d,g),c.minz=Math.min(c.minz,y,C,M),c.maxx=Math.max(c.maxx,v,A,_),c.maxy=Math.max(c.maxy,F,d,g),c.maxz=Math.max(c.maxz,y,C,M)}return c}else{let c=0,h=0,l=0;for(let x=0;x<a;x++){let p=t[x],F=(p>>1)*4,y,A,d;(p&1)===0?(y=r[F+2],A=r[F+1],d=r[F+0]):(y=r[F+0],A=r[F+3],d=r[F+2]);let C=o[y],_=n[y],g=i[y],M=o[A],N=n[A],I=i[A],V=o[d],b=n[d],O=i[d];c+=C+M+V,h+=_+N+b,l+=g+I+O}let f=1/a;c*=f,h*=f,l*=f;let m=Array(8).fill(null);for(let x=0;x<a;x++){let p=t[x],F=(p>>1)*4,y,A,d;(p&1)===0?(y=r[F+2],A=r[F+1],d=r[F+0]):(y=r[F+0],A=r[F+3],d=r[F+2]);let C=o[y],_=n[y],g=i[y],M=o[A],N=n[A],I=i[A],V=o[d],b=n[d],O=i[d],E=C+M+V<c?0:1,T=_+N+b<h?0:1,Z=g+I+O<l?0:1,X=E+T*2+Z*4;m[X]===null?m[X]=[p]:m[X].push(p)}let u=hs();for(let x=0;x<8;x++){if(m[x]===null)continue;let p=this._trianglesToOctree(m[x],s,e);u.partitions[x]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,o,n,i,a,c,h,l,f,m){if(this._hitsBox(r,o,n,l,f,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,o,n,i,a,c,h);let u=h,x=e.partitions;for(let p=0;p<8;p++){let v=x[p];if(v===null)continue;let F=this._distanceToOctree(t,s,v,r,o,n,i,a,c,h,l,f,m);F&&(u=Math.min(u,F))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(he,s).bounds,{vertCount:o,faceCount:n}=t,{faceVertIndices:i,faceCulled:a,vertX:c,vertY:h,vertZ:l}=s,f=(u,x,p,v,F,y,A,d,C)=>{let _=n*4;c[o]=u,h[o]=x,l[o]=p,c[o+1]=v,h[o+1]=F,l[o+1]=y,c[o+2]=A,h[o+2]=d,l[o+2]=C,i[_]=o+2,i[_+1]=o+1,i[_+2]=o+0,a.set(n,1);let g=n*2;return n++,o+=3,g},m=[];if(t._aoSides.nx&&m.push(f(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(f(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(f(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(f(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(f(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(f(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),x=hs();x.partitions=[x,u]}return e}static _hitsBox(t,s,e,r,o,n,i){let a=i.minx;if(t<a&&r<a)return!1;let c=i.maxx;if(t>c&&r>c)return!1;let h=i.miny;if(s<h&&o<h)return!1;let l=i.maxy;if(s>l&&o>l)return!1;let f=i.minz;if(e<f&&n<f)return!1;let m=i.maxz;if(e>m&&n>m)return!1;let u=t-(a+c)*.5,x=(c-a)*.5,p=(r-t)*.5,v=Math.abs(p);if(Math.abs(u)>x+v)return!1;let F=(l-h)*.5,y=(o-s)*.5,A=Math.abs(y),d=s-(h+l)*.5;if(Math.abs(d)>F+A)return!1;let C=(m-f)*.5,_=(n-e)*.5,g=Math.abs(_),M=e-(f+m)*.5;return!(Math.abs(M)>C+g||Math.abs(y*M-_*d)>F*g+C*A+Number.EPSILON||Math.abs(_*u-p*M)>C*v+x*g+Number.EPSILON||Math.abs(p*d-y*u)>x*A+F*v+Number.EPSILON)}static _distanceToModel(t,s,e,r,o,n,i,a,c,h){let l=null,{faceVertIndices:f}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,v,F,y;(u&1)===0?(v=f[p+2],F=f[p+1],y=f[p+0]):(v=f[p+0],F=f[p+3],y=f[p+2]);let A=this._triangleDistance(t,s,v,F,y,r,o,n,i,a,c);A&&(l?l=Math.min(l,A):A<h&&(l=A))}return l}static _triangleDistance(t,s,e,r,o,n,i,a,c,h,l){let{vertX:f,vertY:m,vertZ:u}=s,x=f[e],p=m[e],v=u[e],F=f[r],y=m[r],A=u[r],d=f[o],C=m[o],_=u[o],g=F-x,M=y-p,N=A-v,I=d-x,V=C-p,b=_-v,O=h*b-l*V,E=l*I-c*b,T=c*V-h*I,Z=g*O+M*E+N*T;if(Z<Number.EPSILON)return null;let X=1/Z,P=n-x,q=i-p,R=a-v,k=X*(P*O+q*E+R*T);if(k<0||k>1)return null;let S=q*N-R*M,U=R*g-P*N,Y=P*M-q*g,K=X*(c*S+h*U+l*Y);if(K<0||k+K>1)return null;let z=X*(I*S+V*U+b*Y);return z<=Number.EPSILON?null:z}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let o=1;o<=t;++o){let n=Math.asin(-1+2*o/(t+1)),i=r*o,a=Math.cos(i)*Math.cos(n),c=Math.sin(n),h=Math.sin(i)*Math.cos(n);s.push([a,c,h])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let o=r*e,n=Math.cos(o),i=Math.sin(o),a=Math.max(1,r*4),c=Math.PI*2/a;for(let h=0;h<a;h++){let l=h*c,f=i*Math.sin(l),m=i*Math.cos(l);s.push({x:f,y:n,z:m}),r<t&&s.push({x:f,y:-n,z:m})}a+=4}return s}};var Be=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:o,faceVertVs:n}=s,i=[],a=[],c=[],h=t.materials.materials;for(let l=0;l<h.length;l++){let f=h[l],m=0,u=1,x=1;if(f.map||f.normalMap||f.roughnessMap||f.metalnessMap||f.emissiveMap){let p=t.voxels.size[0],v=t.voxels.size[1],F=t.voxels.size[2];f.mapTransform.uscale===-1&&(u=1/Math.max(p,v,F)),f.mapTransform.vscale===-1&&(x=1/Math.max(p,v,F)),(f.map&&f.map.cube||f.normalMap&&f.normalMap.cube||f.roughnessMap&&f.roughnessMap.cube||f.metalnessMap&&f.metalnessMap.cube||f.emissiveMap&&f.emissiveMap.cube)&&(m=1,u=u/4,x=x/2)}i.push(m),a.push(u),c.push(x)}for(let l=0,f=t.faceCount;l<f;l++){let m=e[l],u=i[m],x=a[m],p=c[m],v=_s[r[l]],F=l*4,y=o[F+v.order[0]],A=n[F+v.order[0]],d=o[F+v.order[1]],C=n[F+v.order[1]],_=o[F+v.order[2]],g=n[F+v.order[2]],M=o[F+v.order[3]],N=n[F+v.order[3]],I=F+v.order[0],V=F+v.order[1],b=F+v.order[2],O=F+v.order[3],E=u*v.uo,T=u*v.vo,Z=v.ud*x,X=v.vd*p;o[I]=E+(y+1e-4)*Z,n[I]=T+(A+1e-4)*X,o[V]=E+(d+1e-4)*Z,n[V]=T+(C+.9999)*X,o[b]=E+(_+.9999)*Z,n[b]=T+(g+.9999)*X,o[O]=E+(M+.9999)*Z,n[O]=T+(N+1e-4)*X}}};var Pe=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:o,vertColorCount:n,faceVertColorR:i,faceVertColorG:a,faceVertColorB:c,faceVertLightR:h,faceVertLightG:l,faceVertLightB:f,faceVertIndices:m,faceMaterials:u,faceVertAO:x}=s,p=t.materials.materials,v=!!t.materials.find(d=>d.fade),F=Array(p.length).fill(!1);for(let d=0,C=p.length;d<C;d++)v&&p[d].fade&&(F[d]=!0);for(let d=0,C=t.faceCount;d<C;d++)if(F[u[d]])for(let g=0;g<4;g++){let M=0,N=0,I=0,V=0,b=d*4+g,O=m[b],E=n[O];for(let Z=0;Z<E;Z++){let X=O*6+Z;M+=e[X],N+=r[X],I+=o[X],V++}let T=1/V;i[b]=M*T,a[b]=N*T,c[b]=I*T}let y=t.ao||t.materials.find(function(d){return d.ao}),A=t.lights.length>0;if(y&&A)for(let d=0,C=t.faceCount;d<C;d++){let g=p[u[d]].ao||t.ao,M=g?g.color:null;for(let N=0;N<4;N++){let I=d*4+N,V=i[I],b=a[I],O=c[I],E=M?M.r:V,T=M?M.g:b,Z=M?M.b:O,X=1-x[I];i[I]=V*h[I]*X+E*(1-X),a[I]=b*l[I]*X+T*(1-X),c[I]=O*f[I]*X+Z*(1-X)}}else if(A&&!y)for(let d=0,C=t.faceCount;d<C;d++)for(let _=0;_<4;_++){let g=d*4+_;i[g]=i[g]*h[g],a[g]=a[g]*l[g],c[g]=c[g]*f[g]}else if(!A&&y)for(let d=0,C=t.faceCount;d<C;d++){let g=p[u[d]].ao||t.ao;if(!g)continue;let M=g.color;for(let N=0;N<4;N++){let I=d*4+N,V=i[I],b=a[I],O=c[I],E=M?M.r:V,T=M?M.g:b,Z=M?M.b:O,X=1-x[I];i[I]=X*V+E*(1-X),a[I]=X*b+T*(1-X),c[I]=X*O+Z*(1-X)}}}};var Ke={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},We={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Je={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Le=class{static simplify(t,s){if(!t.simplify)return;let e=function(){Ke.filled=!1,We.filled=!1,Qe.filled=!1,Je.filled=!1},r=t.materials.materials,{faceCulled:o,faceNameIndices:n,vertX:i,vertY:a,vertZ:c,voxelXZYFaceIndices:h,voxelXYZFaceIndices:l,voxelYZXFaceIndices:f}=s;for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let x=h[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,Ke,p,F,y,A,i,c,a,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,We,p,F,y,A,i,c,a,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,Qe,p,F,y,A,i,c,a,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,Je,p,F,y,A,i,c,a,0,1,2,3);break}}e();for(let m=l.length-t.faceCount,u=l.length;m<u;m++){let x=l[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,Ke,p,F,y,A,i,a,c,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,We,p,F,y,A,i,a,c,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,Qe,p,F,y,A,i,a,c,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,Je,p,F,y,A,i,a,c,2,3,0,1);break}}e();for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let x=f[m],p=x&(1<<28)-1;if(o.get(p))continue;let v=x/(1<<28),F=v>>16&255,y=v>>8&255,A=v&255;switch(n[p]){case 2:this._mergeFaces(r,t,s,Ke,p,F,y,A,a,c,i,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,We,p,F,y,A,a,c,i,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,Qe,p,F,y,A,a,c,i,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,Je,p,F,y,A,a,c,i,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x){let{faceCulled:p,faceMaterials:v,vertX:F,vertY:y,vertZ:A,faceVertIndices:d,faceVertNormalX:C,faceVertNormalY:_,faceVertNormalZ:g,faceVertColorR:M,faceVertColorG:N,faceVertColorB:I,faceVertUs:V,faceVertVs:b,faceVertFlatNormalX:O,faceVertFlatNormalY:E,faceVertFlatNormalZ:T,faceVertSmoothNormalX:Z,faceVertSmoothNormalY:X,faceVertSmoothNormalZ:P,faceVertBothNormalX:q,faceVertBothNormalY:R,faceVertBothNormalZ:k}=e,S=v[o],U=t[S];if(r.filled&&r.lastVoxelAxis1===n&&r.lastVoxelAxis2===i&&(U.simplify===!0||U.simplify===null&&s.simplify===!0)&&p.get(o)===0){if(r.maxVoxelAxis3!==a-1){r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o;return}let Y=o*4,K=r.lastFaceIndex,z=K*4;if(v[K]!==S)return;let L=C[Y],Q=_[Y],W=g[Y],et=C[Y+1],nt=_[Y+1],B=g[Y+1],ht=C[Y+2],mt=_[Y+2],zt=g[Y+2],_t=C[Y+3],at=_[Y+3],Ot=g[Y+3],ot=C[z],gt=_[z],it=g[z],Vt=C[z+1],Ct=_[z+1],Et=g[z+1],Mt=C[z+2],Xt=_[z+2],bt=g[z+2],St=C[z+3],Zt=_[z+3],Lt=g[z+3];if(!(this._normalEquals(L,Q,W,ot,gt,it)&&this._normalEquals(et,nt,B,Vt,Ct,Et)&&this._normalEquals(ht,mt,zt,Mt,Xt,bt)&&this._normalEquals(_t,at,Ot,St,Zt,Lt)))return;let qt=M[Y],It=N[Y],vt=I[Y],Ft=M[Y+1],ft=N[Y+1],Nt=I[Y+1],Jt=M[Y+2],Dt=N[Y+2],Rt=I[Y+2],ct=M[Y+3],ut=N[Y+3],pt=I[Y+3],$t=M[z],oe=N[z],Tt=I[z],kt=M[z+1],Bt=N[z+1],Wt=I[z+1],Gt=M[z+2],G=N[z+2],j=I[z+2],H=M[z+3],rt=N[z+3],lt=I[z+3];if(!(qt===$t&&It===oe&&vt===Tt&&Ft===kt&&ft===Bt&&Nt===Wt&&Jt===Gt&&Dt===G&&Rt===j&&ct===H&&ut===rt&&pt===lt))return;let te=d[Y+f],$=d[Y+m],J=d[Y+u],D=d[Y+x],xt=F[te],yt=y[te],se=A[te],de=F[$],ge=y[$],fe=A[$],ne=d[z+f],_e=d[z+m],ue=d[z+u],je=d[z+x],us=F[ne],ps=y[ne],xs=A[ne],Ys=Math.sqrt((de-xt)*(de-xt)+(ge-yt)*(ge-yt)+(fe-se)*(fe-se)),Os=Math.sqrt((de-us)*(de-us)+(ge-ps)*(ge-ps)+(fe-xs)*(fe-xs)),ee=Ys/Os;return Math.abs(c[_e]-(1-ee)*c[$]-ee*c[ne])<=1e-4&&Math.abs(h[_e]-(1-ee)*h[$]-ee*h[ne])<=1e-4&&Math.abs(l[_e]-(1-ee)*l[$]-ee*l[ne])<=1e-4&&Math.abs(c[ue]-(1-ee)*c[J]-ee*c[je])<=1e-4&&Math.abs(h[ue]-(1-ee)*h[J]-ee*h[je])<=1e-4&&Math.abs(l[ue]-(1-ee)*l[J]-ee*l[je])<=1e-4?(d[z+m]=$,d[z+u]=J,V[z+m]=V[Y+m],b[z+m]=b[Y+m],V[z+u]=V[Y+u],b[z+u]=b[Y+u],O[z+m]=O[Y+m],E[z+m]=E[Y+m],T[z+m]=T[Y+m],O[z+u]=O[Y+u],E[z+u]=E[Y+u],T[z+u]=T[Y+u],Z[z+m]=Z[Y+m],X[z+m]=X[Y+m],P[z+m]=P[Y+m],Z[z+u]=Z[Y+u],X[z+u]=X[Y+u],P[z+u]=P[Y+u],q[z+m]=q[Y+m],R[z+m]=R[Y+m],k[z+m]=k[Y+m],q[z+u]=q[Y+u],R[z+u]=R[Y+u],k[z+u]=k[Y+u],r.maxVoxelAxis3=a,p.set(o,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o,!1}static _normalEquals(t,s,e,r,o,n){return Math.abs(t-r)<.01&&Math.abs(s-o)<.01&&Math.abs(e-n)<.01}};var Re=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:o,vertX:n,vertY:i,vertZ:a,faceVertFlatNormalX:c,faceVertFlatNormalY:h,faceVertFlatNormalZ:l,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:x,faceVertBothNormalY:p,faceVertBothNormalZ:v,faceVertUs:F,faceVertVs:y,faceVertColorR:A,faceVertColorG:d,faceVertColorB:C,faceVertNormalX:_,faceVertNormalY:g,faceVertNormalZ:M}=s;for(let N=0,I=t.faceCount;N<I;N++){if(r.get(N)===1)continue;let V=N*4,b=o[V],O=o[V+1],E=o[V+2],T=o[V+3],Z=n[b],X=i[b],P=a[b],q=n[O],R=i[O],k=a[O],S=n[E],U=i[E],Y=a[E],K=n[T],z=i[T],L=a[T],Q=(Z+S)/2,W=(X+U)/2,et=(P+Y)/2,nt=(q-Q)*(q-Q)+(R-W)*(R-W)+(k-et)*(k-et),B=(K-Q)*(K-Q)+(z-W)*(z-W)+(L-et)*(L-et),ht=(q+K)/2,mt=(R+z)/2,zt=(k+L)/2,_t=(Z-ht)*(Z-ht)+(X-mt)*(X-mt)+(P-zt)*(P-zt),at=(S-ht)*(S-ht)+(U-mt)*(U-mt)+(Y-zt)*(Y-zt);if(nt<e||B<e)this._shiftFaceVertsAtOffset(V,o),this._shiftFaceVertsAtOffset(V,_),this._shiftFaceVertsAtOffset(V,g),this._shiftFaceVertsAtOffset(V,M),this._shiftFaceVertsAtOffset(V,c),this._shiftFaceVertsAtOffset(V,h),this._shiftFaceVertsAtOffset(V,l),this._shiftFaceVertsAtOffset(V,f),this._shiftFaceVertsAtOffset(V,m),this._shiftFaceVertsAtOffset(V,u),this._shiftFaceVertsAtOffset(V,x),this._shiftFaceVertsAtOffset(V,p),this._shiftFaceVertsAtOffset(V,v),this._shiftFaceVertsAtOffset(V,F),this._shiftFaceVertsAtOffset(V,y),this._shiftFaceVertsAtOffset(V,A),this._shiftFaceVertsAtOffset(V,d),this._shiftFaceVertsAtOffset(V,C);else if(!(_t<e||at<e)){let Ot=this._getVertexSumInline(Z,X,P);for(;this._getVertexSumInline(q,R,k)<Ot||this._getVertexSumInline(S,U,Y)<Ot||this._getVertexSumInline(K,z,L)<Ot;){this._shiftFaceVertsAtOffset(V,o),this._shiftFaceVertsAtOffset(V,_),this._shiftFaceVertsAtOffset(V,g),this._shiftFaceVertsAtOffset(V,M),this._shiftFaceVertsAtOffset(V,c),this._shiftFaceVertsAtOffset(V,h),this._shiftFaceVertsAtOffset(V,l),this._shiftFaceVertsAtOffset(V,f),this._shiftFaceVertsAtOffset(V,m),this._shiftFaceVertsAtOffset(V,u),this._shiftFaceVertsAtOffset(V,x),this._shiftFaceVertsAtOffset(V,p),this._shiftFaceVertsAtOffset(V,v),this._shiftFaceVertsAtOffset(V,F),this._shiftFaceVertsAtOffset(V,y),this._shiftFaceVertsAtOffset(V,A),this._shiftFaceVertsAtOffset(V,d),this._shiftFaceVertsAtOffset(V,C);let ot=Z,gt=X,it=P;Z=q,X=R,P=k,q=S,R=U,k=Y,S=K,U=z,Y=L,K=ot,z=gt,L=it,Ot=this._getVertexSumInline(Z,X,P)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var ms=(w,t)=>w-t,ke=class{set origin(t){this._origin=tt.parse(t)}get origin(){return tt.toString(this._origin)}set flatten(t){this._flatten=tt.parse(t)}get flatten(){return tt.toString(this._flatten)}set clamp(t){this._clamp=tt.parse(t)}get clamp(){return tt.toString(this._clamp)}set skip(t){this._skip=tt.parse(t)}get skip(){return tt.toString(this._skip)}set tile(t){this._tile=tt.parse(t||" "),this._tile.x&&(this._tile=tt.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=tt.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=tt.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return tt.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=tt.parse(t)}get aoSides(){return tt.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new we,this.voxColorToColorId=new Map,this.voxels=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=tt.parse("x y z"),this._flatten=tt.parse(""),this._clamp=tt.parse(""),this._skip=tt.parse(""),this._tile=tt.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=tt.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0,this.bounds=new le}recomputeModelAndMaterialBounds(){let{voxels:t,bounds:s,materials:{materials:e}}=this,r=[];s.reset();for(let x of e){let p=x.bounds;p.reset(),r.push(p)}let o=e.length-1;if(!t)return;let[n,i,a,c,h,l]=Yt(t.size),f=At(t.size[0]),m=At(t.size[1]),u=At(t.size[2]);for(let x=n;x<=i;x++)for(let p=a;p<=c;p++)for(let v=h;v<=l;v++){let F=t.getPaletteIndexAt(x,p,v);if(F===ye)continue;let y=x+f,A=p+m,d=v+u,_=(t.colorForPaletteIndex(F)&4278190080)>>24;_<=o&&r[_].set(y,A,d),s.set(y,A,d)}}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:o}=t,{voxels:n}=this,i=me.maximumDeformCount(this);this.recomputeModelAndMaterialBounds(),this.faceCount=0,this.vertCount=0;let{maxFaces:a}=t,c=i>0,[h,l,f,m,u,x]=Yt(n.size);s.clear();let p=this.materials.materials,v=At(n.size[0]),F=At(n.size[1]),y=At(n.size[2]);for(let A=h;A<=l;A++)for(let d=f;d<=m;d++)for(let C=u;C<=x;C++){let _=n.getPaletteIndexAt(A,d,C);if(_===ye)continue;let g=A+v,M=d+F,N=C+y,I=g<<16,V=N<<8,b=(I|V|M)*(1<<28),O=(I|M<<8|N)*(1<<28),E=(M<<16|V|g)*(1<<28);for(let T=0,Z=As.length;T<Z;T++){let X=Ms[T],P,q=A+X[0],R=d+X[1],k=C+X[2];if(q<h||q>l||R<f||R>m||k<u||k>x?P=0:P=n.getPaletteIndexAt(q,R,k),this._createFace(n,t,p,A,d,C,v,F,y,_,P,T,c,s)){let U=this.faceCount-1;if(this.faceCount>=a)throw new Error("Failed to create smooth voxel mesh, buffer limit reached.");e[U]=b+U,r[U]=O+U,o[U]=E+U}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=o.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(ms),t.voxelXYZFaceIndices.sort(ms),t.voxelYZXFaceIndices.sort(ms),Ae.fixClampedLinks(this,t),me.changeShape(this,t,this._shape),me.deform(this,t,i),me.warpAndScatter(this,t),Ye.calculateNormals(this,t),Ze.transformVertices(this,t),Ee.calculateLights(this,t),Te.calculateAmbientOcclusion(this,t),Pe.combineColors(this,t),Be.assignUVs(this,t),Le.simplify(this,t),Re.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={offset:{x:0,y:0,z:0},rescale:1};if(t===Ce)return e;let r,o,n,i,a,c,{faceVertIndices:h,faceCulled:l,vertX:f,vertY:m,vertZ:u}=s,x=At(this.voxels.size[0]),p=At(this.voxels.size[1]),v=At(this.voxels.size[2]);if(!t)r=this.bounds.minX,i=this.bounds.maxX+1,o=this.bounds.minY,a=this.bounds.maxY+1,n=this.bounds.minZ,c=this.bounds.maxZ+1;else{r=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=Number.NEGATIVE_INFINITY,x=p=v=0;for(let d=0,C=this.faceCount;d<C;d++){if(l.get(d)===1)continue;let _=d*4,g=h[_],M=h[_+1],N=h[_+2],I=h[_+3],V=f[g],b=m[g],O=u[g],E=f[M],T=m[M],Z=u[M],X=f[N],P=m[N],q=u[N],R=f[I],k=m[I],S=u[I];r=Math.min(r,V,E,X,R),o=Math.min(o,b,T,P,k),n=Math.min(n,O,Z,q,S),i=Math.max(i,V,E,X,R),a=Math.max(a,b,T,P,k),c=Math.max(c,O,Z,q,S)}if(t===he){let[d,C,_,g,M,N]=Yt(this.voxels.size),I=(C-d+1)/(i-r),V=(g-_+1)/(a-o),b=(N-M+1)/(c-n);e.rescale=Math.min(I,V,b)}}let F=-(r+i)/2,y=-(o+a)/2,A=-(n+c)/2;return this._origin.nx&&(F=-r),this._origin.px&&(F=-i),this._origin.ny&&(y=-o),this._origin.py&&(y=-a),this._origin.nz&&(A=-n),this._origin.pz&&(A=-c),e.offset.x=F+x,e.offset.y=y+p,e.offset.z=A+v,e}_createFace(t,s,e,r,o,n,i,a,c,h,l,f,m,u){let x=t.colorForPaletteIndex(h),p=(x&4278190080)>>24,v=e[p];if(v.opacity===0)return!1;if(l!==ye){let W=(t.colorForPaletteIndex(l)&4278190080)>>24;if(!e[W].isTransparent&&!v.wireframe)return!1;if(!(!v.isTransparent&&!v.wireframe)){if(!(v.isTransparent&&!v.wireframe&&l!==0&&e[(t.colorForPaletteIndex(l)&4278190080)>>24].wireframe))return!1}}let F=this._isFacePlanar(v,r,o,n,f,v._flatten,this._flatten),y=this._isFacePlanar(v,r,o,n,f,v._clamp,this._clamp);if(this._isFacePlanar(v,r,o,n,f,v._skip,this._skip))return!1;let{faceVertIndices:d,faceVertColorR:C,faceVertColorG:_,faceVertColorB:g,faceFlattened:M,faceClamped:N,faceSmooth:I,faceCulled:V,faceMaterials:b,faceNameIndices:O,faceVertUs:E,faceVertVs:T}=s,{faceCount:Z}=this,X=Z*4,P=(x&255)/255,q=((x&65280)>>8)/255,R=((x&16711680)>>16)/255;d[X]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,0,F,y,u),d[X+1]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,1,F,y,u),d[X+2]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,2,F,y,u),d[X+3]=this._createVertex(s,v,r,o,n,P,q,R,i,a,c,f,3,F,y,u);for(let W=0;W<4;W++)C[X+W]=P,_[X+W]=q,g[X+W]=R;M.set(Z,F?1:0),N.set(Z,y?1:0),I.set(Z,0),V.set(Z,0),b[Z]=p,O[Z]=f;let k=Cs[f],S=k[0],U=k[1],Y=r+i,K=o+a,z=n+c,L=Y*S[0]+K*S[1]+z*S[2],Q=Y*U[0]+K*U[1]+z*U[2];for(let W=0;W<4;W++)E[X+W]=L,T[X+W]=Q;return m&&Ae.linkVertices(this,s,Z),this.faceCount++,!0}_createVertex(t,s,e,r,o,n,i,a,c,h,l,f,m,u,x,p){let v=Vs[f][m],F=e+v[0],y=r+v[1],A=o+v[2],d=F+c<<20|y+h<<10|A+l,{_clamp:C,_flatten:_}=this,{vertDeformCount:g,vertDeformDamping:M,vertDeformStrength:N,vertWarpAmplitude:I,vertWarpFrequency:V,vertScatter:b,vertX:O,vertY:E,vertZ:T,vertLinkCounts:Z,vertFullyClamped:X,vertRing:P,vertClampedX:q,vertClampedY:R,vertClampedZ:k,vertColorR:S,vertColorG:U,vertColorB:Y,vertColorCount:K,vertFlattenedX:z,vertFlattenedY:L,vertFlattenedZ:Q}=t,{deform:W,warp:et,scatter:nt}=s,B;if(p.has(d)?(B=p.get(d),W?g[B]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,B)&&(N[B]=W.strength,M[B]=W.damping,g[B]=W.count):(g[B]=0,M[B]=0,N[B]=0),et?I[B]!==0&&(et.amplitude<I[B]||et.amplitude===I[B]&&et.frequency>V[B])&&(I[B]=et.amplitude,V[B]=et.frequency):(I[B]=0,V[B]=0),nt?b[B]!==0&&Math.abs(nt)<Math.abs(b[B])&&(b[B]=nt):b[B]=0):(B=this.vertCount++,p.set(d,B),O[B]=F,E[B]=y,T[B]=A,W?(M[B]=W.damping,g[B]=W.count,N[B]=W.strength,Z[B]=0,X.set(B,0)):g[B]=0,et?(I[B]=et.amplitude,V[B]=et.frequency):I[B]=0,nt?b[B]=nt:b[B]=0,K[B]=0,P[B]=0,q.set(B,0),R.set(B,0),k.set(B,0),z.set(B,0),L.set(B,0),Q.set(B,0)),this._setIsVertexPlanar(s,F,y,A,s._flatten,_,z,L,Q,B),this._setIsVertexPlanar(s,F,y,A,s._clamp,C,q,R,k,B),s.fade){let ht=K[B],mt=B*6;S[mt+ht]=n,U[mt+ht]=i,Y[mt+ht]=a,K[B]++}return B}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:o}=t,n=e[s],i=o[s],a=r[s];return n===1?a*(i+1):a*(1-Math.pow(n,i+1))/(1-n)}_isFacePlanar(t,s,e,r,o,n,i){let a=n,c=t.bounds;if(a||(a=i,c=this.bounds),!a)return!1;switch(o){case 0:return a.x||a.nx&&s===c.minX;case 1:return a.x||a.px&&s===c.maxX;case 2:return a.y||a.ny&&e===c.minY;case 3:return a.y||a.py&&e===c.maxY;case 4:return a.z||a.nz&&r===c.minZ;case 5:return a.z||a.pz&&r===c.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,o,n,i,a,c,h){let l=o,f=t.bounds;l||(l=n,f=this.bounds),l?(i.set(h,l.x||l.nx&&s<f.minX+.5||l.px&&s>f.maxX+.5?1:i.get(h)|0),a.set(h,l.y||l.ny&&e<f.minY+.5||l.py&&e>f.maxY+.5?1:a.get(h)|0),c.set(h,l.z||l.nz&&r<f.minZ+.5||l.pz&&r>f.maxZ+.5?1:c.get(h)|0)):(i.set(h,i.get(h)|0),a.set(h,a.get(h)|0),c.set(h,c.get(h)|0))}};var Ue=class{constructor(t,s,e,r,o,n,i){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=o,this.size=n,this.detail=i}};var bs={linecontinuation:/_\\s*[\\r\\n]/gm,modelparts:new RegExp(/\\s*(\\/\\/(.*?)\\r?\\n)/.source+"|"+/\\s*(texture|light|model|material|voxels)\\s+/.source+"|"+/\\s*([^=,\\r\\n]+=\\s*data:image.*?base64,.*$)\\s*/.source+"|"+/\\s*([^=,\\r\\n]+=[^\\r\\n=;,/]+)\\s*/.source+"|"+/\\s*([A-Za-z ()\\d -]+)\\s*/.source,"gm")},Bs=["size","materials","textures","lights","voxels"],Ps=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"],Ls=["color"],Rs=["direction","position","distance","size","detail"],ks=["id","image"],Us=["cube"],qs=["colors"],$s=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"],Me=class{static readFromString(t,s={},e=!1){let r=this._parse(t);return this._validateModel(r,s),this._createModel(r,s,e)}static _parse(t){let s={lights:[],textures:[],materials:[]},e=s,r=null;return Array.from(t.replaceAll(bs.linecontinuation," ").matchAll(bs.modelparts),n=>n[0].trim()).filter(n=>n).forEach(function(n){if(!n.startsWith("//"))if(n==="texture")e={id:"<no-name>",cube:!1},s.textures.push(e);else if(n==="light")e={color:"#FFF"},s.lights.push(e);else if(n==="model")e=s;else if(n==="material")e={},s.materials.push(e);else if(n==="voxels")e=s,r="";else if(r!==null)r+=n.replace(/\\s/g,"");else{let i=n.indexOf("=");if(i===-1)throw new Error(`SyntaxError: Invalid definition \'${n}\'.`);let a=n.substring(0,i).trim().toLowerCase(),c=n.substring(i+1).trim();e[a]=c}},this),s.voxels=r,s}static _createModel(t,s,e){let r=new ke;r.size=this._parseXYZInt("size",t.size,null,!0),r.scale=this._parseXYZFloat("scale",t.scale,"1",!0),r.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),r.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),r.simplify=t.simplify!=="false",t.resize===De?r.resize=De:t.resize===he?r.resize=he:t.resize===Ce?r.resize=Ce:t.resize?r.resize=null:t.autoresize==="true"&&(r.resize=he),r.shape=t.shape,r.wireframe=t.wireframe==="true"||!1,r.origin=t.origin||"x y z",r.flatten=t.flatten,r.clamp=t.clamp,r.skip=t.skip,r.tile=t.tile,r.setAo(this._parseAo(t.ao)),r.aoSides=t.aosides,r.aoSamples=parseInt(t.aosamples||50,10),r.data=this._parseVertexData(t.data,"model"),t.lights.some(a=>a.size)&&r.materials.createMaterial($e,He,1,0,!1,!1,1,0,!1,1,!1,jt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0);for(let a of t.lights)this._createLight(r,a);for(let a of t.textures)this._createTexture(r,a);let o=new Map,n=new Map,i=new Set;for(let a of t.materials)this._createMaterial(r,a,o,n,i);if(r.shell=this._parseShell(t.shell),this._resolveShellColors(r.shell,r,o,n),r.materials.forEach(function(a){this._resolveShellColors(a.shell,r,o,n)},this),e||this._createVoxels(r,t.voxels,o,n),s){for(let[a,c]of Object.entries(s))if(t[a])switch(c){case"int":r[a]=parseInt(t[a],10);break;case"float":r[a]=parseFloat(t[a]);break;case"string":r[a]=t[a];break;case"boolean":r[a]=t[a]==="true";break;default:throw new Error(`Unknown type ${c} for field ${a}`)}}return r}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=Ut.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new Ue(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s,e,r,o){let n=He;s.lighting===Fe&&(n=Fe),s.lighting===ae&&(n=ae),s.lighting===ie&&(n=ie),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let i=null;t.simplify&&s.simplify==="false"&&(i=!1),!t.simplify&&s.simplify==="true"&&(i=!0);let a=t.materials.createMaterial(s.type||ve,n,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,i,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0)),c=t.materials.materials.indexOf(a);s.deform&&a.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&a.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(a.scatter=parseFloat(s.scatter)),a.flatten=s.flatten,a.clamp=s.clamp,a.skip=s.skip,a.setAo(this._parseAo(s.ao)),a.shell=this._parseShell(s.shell),a.lights=s.lights!=="false",a.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,a.data);let h=/\\s*\\(\\s*(\\d+)\\s*\\)\\s*/g,l=/([A-Z][a-z]*)\\s*(\\(\\d+\\))?[:]\\s*(#[a-fA-F0-9]*)\\s*/g;s.colors=s.colors.replace(h,"($1)"),s.colors=s.colors.replace(l,"$1$2:$3 ");let f=s.colors.split(" ").filter(u=>u),{voxColorToColorId:m}=t;f.forEach(function(u){let x=u.split(":")[0];x.includes("(")&&(x=x.split("(")[0]);let p=u.split(":")[1];if(o.has(x))throw new Error(`SyntaxError: Duplicate ID \'${x}\'`);if(!e.has(x)){let v=ls(p);if(!/^[A-Z][a-z]*$/.test(x))throw new Error(`SyntaxError: Invalid color ID \'${x}\'`);e.set(x,v),r.set(x,c),o.add(x),m.set((v|c<<24)>>>0,x)}},this)}static _createVoxels(t,s,e,r){let o=null,n=[];if(s.matchAll)n=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let C=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,_;for(;(_=C.exec(s))!==null;)n.push(_);n=n[Symbol.iterator]()}let i=this._unpackRle(n),a=t.size.x*t.size.y*t.size.z,c=0,h=e.size,l=1;h>=2&&(l=2),h>=4&&(l=4),h>=16&&(l=8);let f=t.voxels=new Kt([t.size.x,t.size.y,t.size.z],l);for(let C=0;C<i.length;C++)c+=i[C][1];if(c!==a)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${a} voxels) but the voxel matrix contains ${c} voxels.`);let m={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new le;let u=null,x=null,p=t.bounds,v=t.size,F=At(v.x),y=At(v.y),A=At(v.z),d=t.materials.materials;for(let C=0,_=i.length;C<_;C++){let g=null,M=i[C],N=M[0];N!=="-"&&(g=N,e.has(g)||(o===null&&(o=t.materials.createMaterial(ve,He,.5,0,!1,1,!1)),u=t.materials.materials.indexOf(o),e.set(g,ls("#FF00FF")),r.set(g,u)),u=r.get(g),x=d[u].bounds);let I=M[1];if(e.has(g)){let V=e.get(g);this._setVoxels(p,x,u,F,y,A,V,I,m,f)}else this._advanceContext(I,F,y,A,m)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=Ut.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),o=parseFloat(t.split(" ")[2]||1),n=parseFloat(t.split(" ")[3]||70);n=Math.max(0,Math.min(90,Math.round(n))),s={color:e,maxDistance:r,strength:o,angle:n}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let o=0;o<r.length/2;o++){let n=r[o*2+0],i=r[o*2+1];if(!/^[A-Z][a-z]*$/.test(n)||!/^([-+]?[0-9]*\\.?[0-9]+)*$/.test(i)){e=!0;break}else s.push({colorId:r[o*2],distance:r[o*2+1]})}}if(e)throw new Error(`SyntaxError: shell \'${t}\' must be \'none\' or one or more color ID\'s and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,o){return r.distance-o.distance})),s}static _resolveShellColors(t,s,e,r){!t||t.length===0||t.forEach(function(o){if(!e.has(o.colorId))throw new Error(`SyntaxError: shell color ID \'${o.colorId}\' is not a known color`);o.voxBgr=e.get(o.colorId),o.materialIndex=r.get(o.colorId)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\\s+/),o=null;for(let i=0;i<r.length;i++){let a=r[i];if(isNaN(a))o={name:a,values:[]},e.push(o);else if(o)o.values.push(parseFloat(a));else break}let n=e.length===0;for(let i=0;i<e.length;i++)n=n||e[i].values.length===0||e[i].values.length>=4;if(n)throw new Error(`SyntaxError: The data property \'${e.data}\' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch(r){e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let o=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(o.x),y:Math.trunc(o.y),z:Math.trunc(o.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let o=s.split(/[\\s/]+/);if(o.length===1&&r&&(o.push(o[0]),o.push(o[0])),o.length!==3)throw new Error(`SyntaxError: \'${t}\' must have three values.`);if(o={x:parseFloat(o[0]),y:parseFloat(o[1]),z:parseFloat(o[2])},Number.isNaN(o.x)||Number.isNaN(o.y)||Number.isNaN(o.z))throw new Error(`SyntaxError: Invalid value \'${s}\' for ${t}\'.`);return o}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let o=r.value[0],n=o[0],i=o[1];if(n>="0"&&n<="9")e=parseInt(o,10);else if(o==="("){let a=this._unpackRle(t);for(let c=0;c<e;c++)Array.prototype.push.apply(s,a);e=1}else{if(o===")")return s;o.length>1&&n>="A"&&n<="Z"&&i===n?(e>1?(s.push([n,e]),s.push([n,o.length-1])):s.push([n,o.length]),e=1):o.length>1&&n==="-"&&i==="-"?(e>1?(s.push(["-",e]),s.push(["-",o.length-1])):s.push(["-",o.length]),e=1):(s.push([o,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,o,n,i,a,c,h){let{x:l,y:f,z:m,maxx:u,maxy:x,minx:p,miny:v}=c;l-=r,f-=o,m-=n,p-=r,v-=o,u-=r,x-=o;let F=(i|e<<24)>>>0;for(;a-- >0;)t.set(l,f,m),s.set(l,f,m),h.setColorAt(l,f,m,F),l++,l>u&&(l=p,f++),f>x&&(f=v,m++);c.x=l+r,c.y=f+o,c.z=m+n}static _advanceContext(t,s,e,r,o){let{x:n,y:i,z:a,maxx:c,maxy:h,minx:l,miny:f}=o;for(n-=s,i-=e,a-=r,l-=s,f-=e,c-=s,h-=e;t-- >0;)n++,n>c&&(n=l,i++),i>h&&(i=f,a++);o.x=n+s,o.y=i+e,o.z=a+r}static _validateModel(t,s){this._validateProperties(t,Bs,[...Object.keys(s),...Ps],"model");for(let e of t.lights)this._validateLight(e);for(let e of t.textures)this._validateTexture(e);for(let e of t.materials)this._validateMaterial(e)}static _validateLight(t){if(this._validateProperties(t,Ls,Rs,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){this._validateProperties(t,ks,Us,"texture")}static _validateMaterial(t){this._validateProperties(t,qs,$s,"material")}static _validateProperties(t,s,e,r){for(let o of s)if(!Object.hasOwn(t,o))throw new Error("SyntaxError: "+r+\' is missing mandatory property "\'+o+\'".\');for(let o in t)if(!s.includes(o)&&!e.includes(o))throw new Error("SyntaxError: "+r+\' has unrecognized property "\'+o+\'".\')}};var dt=new Map,re=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r=re._getAllShells(t),o=r.map(i=>i.length).reduce((i,a)=>Math.max(i,a),0)+1,n={materials:[],groups:[],indices:new Uint32Array(e*4*6*o),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3*o),normals:new Float32Array(e*4*3*o),colors:new Float32Array(e*4*3*o),uvs:new Float32Array(e*4*2*o),bounds:{minX:1/0,minY:1/0,minZ:1/0,maxX:-1/0,maxY:-1/0,maxZ:-1/0,centerX:0,centerY:0,centerZ:0,radius:0},data:null};return t.materials.baseMaterials.forEach(function(i){i.index=n.materials.length,n.materials.push(re._generateMaterial(i,t))},this),dt.clear(),re._generateAll(t,n,s,r),n}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===ce?ce:jt};return t.type!==Ge&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e,r){let o=t.materials.materials,{faceMaterials:n,faceCulled:i}=e,a=t.scale.x,c=t.scale.y,h=t.scale.z;t.materials.baseMaterials.forEach(function(_){let g=s.indicesIndex,M=!1;for(let N=0,I=t.faceCount;N<I;N++){if(i.get(N)!==0)continue;let V=n[N],b=o[V];b._baseMaterial===_&&(re._generateFace(t,e,N,s),M||(M=!0));for(let O=0,E=r.length;O<E;O++){let[T,Z,X,P,q,R]=r[O];Z._baseMaterial===_&&T===b&&(re._generateShellFace(t,e,N,s,X*a,X*c,X*h,P,q,R,Z,a,c,h),M||(M=!0))}}if(M){let N=s.indicesIndex;s.groups.push({start:g,count:N-g,materialIndex:_.index})}},this);let l=s.maxIndex+1,f=1/0,m=1/0,u=1/0,x=-1/0,p=-1/0,v=-1/0;for(let _=0,g=l*3;_<g;_+=3){let M=s.positions[_],N=s.positions[_+1],I=s.positions[_+2];f=Math.min(f,M),m=Math.min(m,N),u=Math.min(u,I),x=Math.max(x,M),p=Math.max(p,N),v=Math.max(v,I)}let F=(f+x)/2,y=(m+p)/2,A=(u+v)/2,d=-1/0;for(let _=0,g=l*3;_<g;_+=3){let M=s.positions[_],N=s.positions[_+1],I=s.positions[_+2],V=M-F,b=N-y,O=I-A;d=Math.max(d,V*V+b*b+O*O)}let C=Math.sqrt(d);s.bounds.minX=f,s.bounds.minY=m,s.bounds.minZ=u,s.bounds.maxX=x,s.bounds.maxY=p,s.bounds.maxZ=v,s.bounds.centerX=F,s.bounds.centerY=y,s.bounds.centerZ=A,s.bounds.radius=C,s.indices=new Uint32Array(s.indices.buffer,s.indices.byteOffset,s.indicesIndex),s.positions=new Float32Array(s.positions.buffer,s.positions.byteOffset,l*3),s.normals=new Float32Array(s.normals.buffer,s.normals.byteOffset,l*3),s.colors=new Float32Array(s.colors.buffer,s.colors.byteOffset,l*3),s.uvs=new Float32Array(s.uvs.buffer,s.uvs.byteOffset,l*2)}static _generateFace(t,s,e,r){let{faceVertIndices:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,vertX:c,vertY:h,vertZ:l,faceVertColorR:f,faceVertColorG:m,faceVertColorB:u,faceVertUs:x,faceVertVs:p,faceMaterials:v,faceSmooth:F}=s,A=t.materials.materials[v[e]],d=o[e*4],C=o[e*4+1],_=o[e*4+2],g=o[e*4+3],M=c[d],N=h[d],I=l[d],V=c[C],b=h[C],O=l[C],E=c[_],T=h[_],Z=l[_],X=c[g],P=h[g],q=l[g],R=n[e*4],k=i[e*4],S=a[e*4],U=n[e*4+1],Y=i[e*4+1],K=a[e*4+1],z=n[e*4+2],L=i[e*4+2],Q=a[e*4+2],W=n[e*4+3],et=i[e*4+3],nt=a[e*4+3],B=f[e*4],ht=m[e*4],mt=u[e*4],zt=f[e*4+1],_t=m[e*4+1],at=u[e*4+1],Ot=f[e*4+2],ot=m[e*4+2],gt=u[e*4+2],it=f[e*4+3],Vt=m[e*4+3],Ct=u[e*4+3],Et=x[e*4],Mt=p[e*4],Xt=x[e*4+1],bt=p[e*4+1],St=x[e*4+2],Zt=p[e*4+2],Lt=x[e*4+3],Qt=p[e*4+3];if(A.side===pe){let G,j,H;G=M,j=N,H=I,M=E,N=T,I=Z,E=G,T=j,Z=H,G=R,j=k,H=S,R=z,k=L,S=Q,z=G,L=j,Q=H,G=B,j=ht,H=mt,B=Ot,ht=ot,mt=gt,Ot=G,ot=j,gt=H,G=Et,j=Mt,Et=St,Mt=Zt,St=G,Zt=j}let qt=F.get(e)===1;if(!(A.lighting===ae||A.lighting===ie&&qt)){let G=z+U+R,j=L+Y+k,H=Q+K+S,rt=R+W+z,lt=k+et+L,Pt=S+nt+Q,te=Math.sqrt(G*G+j*j+H*H),$=Math.sqrt(rt*rt+lt*lt+Pt*Pt),J=1/te,D=1/$;if(G*=J,j*=J,H*=J,rt*=D,lt*=D,Pt*=D,A.lighting===Fe){let xt=Math.sqrt(G*G+j*j+H*H)+Math.sqrt(rt*rt+lt*lt+Pt*Pt),yt=1/xt;G=rt=(G+rt)*yt,j=lt=(j+lt)*yt,H=Pt=(H+Pt)*yt}R=G,k=j,S=H,U=G,Y=j,K=H,z=G,L=j,Q=H,W=rt,et=lt,nt=Pt}let It=r.indices,vt=r.positions,Ft=r.normals,ft=r.colors,Nt=r.uvs,Jt=M*3+N*61673+I*87119+R*2766691+k*73091+S*5040949+B*8636137+ht*2360719+mt*4739729+Math.round(Et*1e3)*719959+Math.round(Mt*1e3)*172741,Dt=V*3+b*61673+O*87119+U*2766691+Y*73091+K*5040949+zt*8636137+_t*2360719+at*4739729+Math.round(Xt*1e3)*719959+Math.round(bt*1e3)*172741,Rt=E*3+T*61673+Z*87119+z*2766691+L*73091+Q*5040949+Ot*8636137+ot*2360719+gt*4739729+Math.round(St*1e3)*719959+Math.round(Zt*1e3)*172741,ct=X*3+P*61673+q*87119+W*2766691+et*73091+nt*5040949+it*8636137+Vt*2360719+Ct*4739729+Math.round(Lt*1e3)*719959+Math.round(Qt*1e3)*172741,ut=dt.has(Jt),pt=dt.has(Dt),$t=dt.has(Rt),oe=dt.has(ct),Tt,kt,Bt,Wt;if(ut)Tt=dt.get(Jt);else{Tt=r.maxIndex+1;let G=Tt*3,j=G+1,H=G+2,rt=Tt*2,lt=rt+1;r.maxIndex=Tt,vt[G]=M,vt[j]=N,vt[H]=I,Ft[G]=R,Ft[j]=k,Ft[H]=S,ft[G]=B,ft[j]=ht,ft[H]=mt,Nt[rt]=Et,Nt[lt]=Mt,dt.set(Jt,Tt)}if(pt)kt=dt.get(Dt);else{kt=r.maxIndex+1;let G=kt*3,j=G+1,H=G+2,rt=kt*2,lt=rt+1;r.maxIndex=kt,vt[G]=V,vt[j]=b,vt[H]=O,Ft[G]=U,Ft[j]=Y,Ft[H]=K,ft[G]=zt,ft[j]=_t,ft[H]=at,Nt[rt]=Xt,Nt[lt]=bt,dt.set(Dt,kt)}if($t)Bt=dt.get(Rt);else{Bt=r.maxIndex+1;let G=Bt*3,j=G+1,H=G+2,rt=Bt*2,lt=rt+1;r.maxIndex=Bt,vt[G]=E,vt[j]=T,vt[H]=Z,Ft[G]=z,Ft[j]=L,Ft[H]=Q,ft[G]=Ot,ft[j]=ot,ft[H]=gt,Nt[rt]=St,Nt[lt]=Zt,dt.set(Rt,Bt)}if(oe)Wt=dt.get(ct);else{Wt=r.maxIndex+1;let G=Wt*3,j=G+1,H=G+2,rt=Wt*2,lt=rt+1;r.maxIndex=Wt,vt[G]=X,vt[j]=P,vt[H]=q,Ft[G]=W,Ft[j]=et,Ft[H]=nt,ft[G]=it,ft[j]=Vt,ft[H]=Ct,Nt[rt]=Lt,Nt[lt]=Qt,dt.set(ct,Wt)}let Gt=r.indicesIndex;It[Gt]=Bt,It[Gt+1]=kt,It[Gt+2]=Tt,It[Gt+3]=Tt,It[Gt+4]=Wt,It[Gt+5]=Bt,r.indicesIndex+=6}static _generateShellFace(t,s,e,r,o,n,i,a,c,h,l){let{faceVertIndices:f,faceVertBothNormalX:m,faceVertBothNormalY:u,faceVertBothNormalZ:x,faceVertSmoothNormalX:p,faceVertSmoothNormalY:v,faceVertSmoothNormalZ:F,faceVertFlatNormalX:y,faceVertFlatNormalY:A,faceVertFlatNormalZ:d,vertX:C,vertY:_,vertZ:g,faceVertUs:M,faceVertVs:N,faceSmooth:I}=s,V=f[e*4],b=f[e*4+1],O=f[e*4+2],E=f[e*4+3],T=C[V],Z=_[V],X=g[V],P=C[b],q=_[b],R=g[b],k=C[O],S=_[O],U=g[O],Y=C[E],K=_[E],z=g[E],L=p[e*4],Q=v[e*4],W=F[e*4],et=p[e*4+1],nt=v[e*4+1],B=F[e*4+1],ht=p[e*4+2],mt=v[e*4+2],zt=F[e*4+2],_t=p[e*4+3],at=v[e*4+3],Ot=F[e*4+3],ot,gt,it,Vt,Ct,Et,Mt,Xt,bt,St,Zt,Lt,Qt=I.get(e)===1;switch(l.lighting){case ae:ot=p[e*4],gt=v[e*4],it=F[e*4],Vt=p[e*4+1],Ct=v[e*4+1],Et=F[e*4+1],Mt=p[e*4+2],Xt=v[e*4+2],bt=F[e*4+2],St=p[e*4+3],Zt=v[e*4+3],Lt=F[e*4+3];break;case ie:Qt?(ot=m[e*4],gt=u[e*4],it=x[e*4],Vt=m[e*4+1],Ct=u[e*4+1],Et=x[e*4+1],Mt=m[e*4+2],Xt=u[e*4+2],bt=x[e*4+2],St=m[e*4+3],Zt=u[e*4+3],Lt=x[e*4+3]):(ot=y[e*4],gt=A[e*4],it=d[e*4],Vt=y[e*4+1],Ct=A[e*4+1],Et=d[e*4+1],Mt=y[e*4+2],Xt=A[e*4+2],bt=d[e*4+2],St=y[e*4+3],Zt=A[e*4+3],Lt=d[e*4+3]);break;default:ot=y[e*4],gt=A[e*4],it=d[e*4],Vt=y[e*4+1],Ct=A[e*4+1],Et=d[e*4+1],Mt=y[e*4+2],Xt=A[e*4+2],bt=d[e*4+2],St=y[e*4+3],Zt=A[e*4+3],Lt=d[e*4+3];break}let qt=M[e*4],It=N[e*4],vt=M[e*4+1],Ft=N[e*4+1],ft=M[e*4+2],Nt=N[e*4+2],Jt=M[e*4+3],Dt=N[e*4+3];if(l.side===pe){let $,J,D;$=T,J=Z,D=X,T=k,Z=S,X=U,k=$,S=J,U=D,$=ot,J=gt,D=it,ot=Mt,gt=Xt,it=bt,Mt=$,Xt=J,bt=D,$=qt,J=It,qt=ft,It=Nt,ft=$,Nt=J,$=L,J=Q,D=W,L=ht,Q=mt,W=zt,ht=$,mt=J,zt=D}if(T+=o*L,Z+=n*Q,X+=i*W,P+=o*et,q+=n*nt,R+=i*B,k+=o*ht,S+=n*mt,U+=i*zt,Y+=o*_t,K+=n*at,z+=i*Ot,!(l.lighting===ae||l.lighting===ie&&Qt)){let $=Mt+Vt+ot,J=Xt+Ct+gt,D=bt+Et+it,xt=ot+St+Mt,yt=gt+Zt+Xt,se=it+Lt+bt,de=Math.sqrt($*$+J*J+D*D),ge=Math.sqrt(xt*xt+yt*yt+se*se),fe=1/de,ne=1/ge;if($*=fe,J*=fe,D*=fe,xt*=ne,yt*=ne,se*=ne,l.lighting===Fe){let _e=Math.sqrt($*$+J*J+D*D)+Math.sqrt(xt*xt+yt*yt+se*se),ue=1/_e;$=xt=($+xt)*ue,J=yt=(J+yt)*ue,D=se=(D+se)*ue}ot=$,gt=J,it=D,Vt=$,Ct=J,Et=D,Mt=$,Xt=J,bt=D,St=xt,Zt=yt,Lt=se}let Rt=r.indices,ct=r.positions,ut=r.normals,pt=r.colors,$t=r.uvs,oe=T*3+Z*61673+X*87119+ot*2766691+gt*73091+it*5040949+a*8636137+c*2360719+h*4739729+Math.round(qt*1e3)*719959+Math.round(It*1e3)*172741,Tt=P*3+q*61673+R*87119+Vt*2766691+Ct*73091+Et*5040949+a*8636137+c*2360719+h*4739729+Math.round(vt*1e3)*719959+Math.round(Ft*1e3)*172741,kt=k*3+S*61673+U*87119+Mt*2766691+Xt*73091+bt*5040949+a*8636137+c*2360719+h*4739729+Math.round(ft*1e3)*719959+Math.round(Nt*1e3)*172741,Bt=Y*3+K*61673+z*87119+St*2766691+Zt*73091+Lt*5040949+a*8636137+c*2360719+h*4739729+Math.round(Jt*1e3)*719959+Math.round(Dt*1e3)*172741,Wt=dt.has(oe),Gt=dt.has(Tt),G=dt.has(kt),j=dt.has(Bt),H,rt,lt,Pt;if(Wt)H=dt.get(oe);else{H=r.maxIndex+1;let $=H*3,J=$+1,D=$+2,xt=H*2,yt=xt+1;r.maxIndex=H,ct[$]=T,ct[J]=Z,ct[D]=X,ut[$]=ot,ut[J]=gt,ut[D]=it,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=qt,$t[yt]=It,dt.set(oe,H)}if(Gt)rt=dt.get(Tt);else{rt=r.maxIndex+1;let $=rt*3,J=$+1,D=$+2,xt=rt*2,yt=xt+1;r.maxIndex=rt,ct[$]=P,ct[J]=q,ct[D]=R,ut[$]=Vt,ut[J]=Ct,ut[D]=Et,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=vt,$t[yt]=Ft,dt.set(Tt,rt)}if(G)lt=dt.get(kt);else{lt=r.maxIndex+1;let $=lt*3,J=$+1,D=$+2,xt=lt*2,yt=xt+1;r.maxIndex=lt,ct[$]=k,ct[J]=S,ct[D]=U,ut[$]=Mt,ut[J]=Xt,ut[D]=bt,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=ft,$t[yt]=Nt,dt.set(kt,lt)}if(j)Pt=dt.get(Bt);else{Pt=r.maxIndex+1;let $=Pt*3,J=$+1,D=$+2,xt=Pt*2,yt=xt+1;r.maxIndex=Pt,ct[$]=Y,ct[J]=K,ct[D]=z,ut[$]=St,ut[J]=Zt,ut[D]=Lt,pt[$]=a,pt[J]=c,pt[D]=h,$t[xt]=Jt,$t[yt]=Dt,dt.set(Bt,Pt)}let te=r.indicesIndex;Rt[te]=lt,Rt[te+1]=rt,Rt[te+2]=H,Rt[te+3]=H,Rt[te+4]=Pt,Rt[te+5]=lt,r.indicesIndex+=6}static _getAllShells(t){let s=[];return t.materials.forEach(function(e){let r;t.shell&&t.shell.length>0&&!e.shell&&(r=t.shell),e.shell&&e.shell.length>0&&(r=e.shell),r&&r.forEach(function(o){let n=o.voxBgr,i=(n>>16&255)/255,a=(n>>8&255)/255,c=(n>>0&255)/255;s.push([e,t.materials.materials[o.materialIndex],o.distance,c,a,i])},this)},this),s.sort((e,r)=>e[1]-r[1]),s}};var qe=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),o=e*4;this.maxFaces=e,this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=wt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=wt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=wt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=wt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=wt.create(new Uint8Array(r).buffer,1,0),this.faceClamped=wt.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=wt.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=wt.create(new Uint8Array(r).buffer,1,0),this.faceCulled=wt.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(o),this.faceVertNormalX=new Float32Array(o),this.faceVertNormalY=new Float32Array(o),this.faceVertNormalZ=new Float32Array(o),this.faceVertFlatNormalX=new Float32Array(o),this.faceVertFlatNormalY=new Float32Array(o),this.faceVertFlatNormalZ=new Float32Array(o),this.faceVertSmoothNormalX=new Float32Array(o),this.faceVertSmoothNormalY=new Float32Array(o),this.faceVertSmoothNormalZ=new Float32Array(o),this.faceVertBothNormalX=new Float32Array(o),this.faceVertBothNormalY=new Float32Array(o),this.faceVertBothNormalZ=new Float32Array(o),this.faceVertColorR=new Float32Array(o),this.faceVertColorG=new Float32Array(o),this.faceVertColorB=new Float32Array(o),this.faceVertLightR=new Float32Array(o),this.faceVertLightG=new Float32Array(o),this.faceVertLightB=new Float32Array(o),this.faceVertAO=new Float32Array(o),this.faceVertUs=new Float32Array(o),this.faceVertVs=new Float32Array(o),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var Gs=new qe(1024*768*2);onmessage=function(w){try{let t=Hs(w.data.svoxmodel);postMessage({svoxmesh:t,elementId:w.data.elementId,worker:w.data.worker},[t.positions.buffer,t.normals.buffer,t.colors.buffer,t.indices.buffer,t.uvs.buffer])}catch(t){console.error(t)}};function Hs(w){let t="model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",s="model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",e;(!w||w.trim()==="")&&(e={name:"ConfigError",message:"Model not found"},w=t);let r=null;try{r=Me.readFromString(w)}catch(n){e=n,r=Me.readFromString(s)}let o=re.generate(r,Gs);return o.error=e,o}\n')}var r=class{constructor(t,e){this._resultHandler=t,this._resultCallback=e,this._nrOfWorkers=window.navigator.hardwareConcurrency,this._workers=[],this._free=[],this._tasks=[]}executeTask(t){if(this._workers.length<this._nrOfWorkers){let e=new i,s=this;e.onmessage=function(o){s._free.push(event.data.worker),s._processNextTask(),s._resultCallback.apply(s._resultHandler,[event.data])},this._free.push(this._workers.length),this._workers.push(e)}this._tasks.push(t),this._processNextTask()}_processNextTask(){if(this._tasks.length>0&&this._free.length>0){let t=this._tasks.shift();t.worker=this._free.shift(),this._workers[t.worker].postMessage(t)}}};export{r as WorkerPool};
